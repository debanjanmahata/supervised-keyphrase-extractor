{"reader_keywords": ["multiagent system", "self-interested agent", "optimal action", "game theory", "normal form game", "nash equilibrium", "dominance", "elimination", "strategy", "bayesian game"], "reader_keywords_stem": ["multiag system", "self-interest agent", "optim action", "game theori", "normal form game", "nash equilibrium", "domin", "elimin", "strategi", "bayesian game"], "introduction": "In multiagent systems with self-interested agents , the optimal action for one agent may depend on the actions taken by other agents .In such settings , the agents require tools from game theory to rationally decide on an action .Game theory offers various formal models of strategic settings the best-known of which is a game in normal or matrix form , specifying a utility payoff for each agent for each combination of strategies that the agents choose as well as solution concepts , which , given a game , specify which outcomes are reasonable under various assumptions of rationality and common knowledge .Probably the best-known and certainly the most-studied solution concept is that of Nash equilibrium .A Nash equilibrium specifies a strategy for each player , in such a way that no player has an incentive to unilaterally deviate from the prescribed strategy .Recently , numerous papers have studied computing Nash equilibria in various settings 9 , 4 , 12 , 3 , 13 , 14 , and the complexity of constructing a Nash equilibrium in normal form games has been labeled one of the two most important open problems on the boundary of P today 20 .The problem of computing solutions according to the perhaps more elementary solution concepts of dominance and iterated dominance has received much less attention .After an early short paper on an easy case 11 , the main computational study of these concepts has actually taken place in a paper in the game theory community 7 . 'A strategy strictly dominates another strategy if it performs strictly ` This is not to say that computer scientists have ignoredbetter against all vectors of opponent strategies , and weakly dominates it if it performs at least as well against all vectors of opponent strategies , and strictly better against at least one .The idea is that dominated strategies can be eliminated from consideration .In iterated dominance , the elimination proceeds in rounds , and becomes easier as more strategies are eliminated : in any given round , the dominating strategy no longer needs to perform better than or as well as the dominated strategy against opponent strategies that were eliminated in earlier rounds .Computing solutions according to iterated dominance is important for at least the following reasons : 1 it can be computationally easier than computing for instance a Nash equilibrium and therefore it can be useful as a preprocessing step in computing a Nash equilibrium , and 2 iterated dominance requires a weaker rationality assumption on the players than for instance Nash equilibrium , and therefore solutions derived according to it are more likely to occur .In this paper , we study some fundamental computational questions concerning dominance and iterated dominance , including how hard it is to check whether a given strategy can be eliminated by each of the variants of these notions .The rest of the paper is organized as follows .In Section 2 , we briefly review definitions and basic properties of normal form games , strict and weak dominance , and iterated strict and weak dominance .In the remaining sections , we study computational aspects of dominance and iterated dominance .In Section 3 , we study one-shot not iterated dominance .In Section 4 , we study iterated dominance .In Section 5 , we study dominance and iterated dominance when the dominating strategy can only place probability on a few pure strategies .Finally , in Section 6 , we study dominance and iterated dominance in Bayesian games .", "title": "Complexity of Iterated Dominance *", "author_keywords_stem": ["game theory", "dominance", "iterated dominance"], "abstract": "We study various computational aspects of solving games using dominance and iterated dominance .We first study both strict and weak dominance not iterated , and show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve .We then move on to iterated dominance .We show that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance .This allows us to also show that determining whether there is a path that leads to a unique solution is NP-complete .Both of these results hold both with and without dominance by mixed strategies .A weaker version of the second result only without dominance by mixed strategies was already known 7 .Iterated strict dominance , on the other hand , is path-independent both with and without dominance by mixed strategies and can therefore be done in polynomial time .We then study what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies .First , we show that finding the dominating strategy with minimum support size is NP-complete both for strict and weak dominance .Then , we show that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies , and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete even when the limit on the support size is 3 .Finally , we study Bayesian games .We show that , unlike in normal form games , deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete both with strict and weak dominance ; however , deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve both with strict and weak * This material is based upon work supported by the National Science Foundation under ITR grants IIS-0121678 and IIS-0427858 , and a Sloan Fellowship .dominance .Finally , we show that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game both with strict and weak dominance .", "id": "J-51", "combined_keywords_stem": ["multiag system", "self-interest agent", "optim action", "game theori", "normal form game", "nash equilibrium", "domin", "elimin", "strategi", "bayesian game", "domin", "iter domin"], "combined_keywords": ["multiagent system", "self-interested agent", "optimal action", "game theory", "normal form game", "nash equilibrium", "dominance", "elimination", "strategy", "bayesian game", "dominance", "iterated dominance"], "author_keywords": ["game theory", "dominance", "iterated dominance"], "method": "In this section , we briefly review normal form games , as well as dominance and iterated dominance both strict and weak .An n-player normal form game is defined as follows .pure strategies \u03a3i and a utility function ui : \u03a31 x \u03a32 x ... x \u03a3n + R where ui v1 , v2 , ... , vn denotes player i 's utility when each player j plays action vj .The two main notions of dominance are defined as follows .gies v \u2212 i for the other players , ui vi , v \u2212 i > ui v0 i , v \u2212 i .Player i 's strategy v0i is said to be weakly dominated by player i 's strategy vi if for any vector of strategies v \u2212 i for the other players , ui vi , v \u2212 i > ui v0 i , v \u2212 i , and for at least one vector of strategies v \u2212 i for the other players , ui vi , v \u2212 i > ui v0 i , v \u2212 i .In this definition , it is sometimes allowed for the dominating strategy vi to be a mixed strategy , that is , a probability distribution over pure strategies .In this case , the utilities in dominance altogether .For example , simple dominance checks are sometimes used as a subroutine in searching for Nash equilibria 21 .the definition are the expected utilities .2 There are other notions of dominance , such as very weak dominance in which no strict inequality is required , so two strategies can dominate each other , but we will not study them here .When we are looking at the dominance relations for player i , the other players \u2212 i can be thought of as a single player .3 Therefore , in the rest of the paper , when we study one-shot not iterated dominance , we will focus without loss of generality on two-player games .4 In two-player games , we will generally refer to the players as r row and c column rather than 1 and 2 .In iterated dominance , dominated strategies are removed from the game , and no longer have any effect on future dominance relations .Iterated dominance can eliminate more strategies than dominance , as follows .vr may originally not dominate v0r because the latter performs better against v0c ; but then , once v0c is removed because it is dominated by vc , vr dominates v0r , and the latter can be removed .For example , in the following game , R can be removed first , after which D is dominated .Either strict or weak dominance can be used in the definition of iterated dominance .We note that the process of iterated dominance is never helped by removing a dominated mixed strategy , for the following reason .If v0i gives player i a higher utility than vi against mixed strategy v0j for player j = 6 i and strategies v \u2212 i , j for the other players , then for at least one pure strategy vj that v0j places positive probability on , v0i must perform better than vi against vj and strategies v \u2212 i , j for the other players .Thus , removing the mixed strategy v0j does not introduce any new dominances .More detailed discussions and examples can be found in standard texts on microeconomics or game theory 17 , 5 .We are now ready to move on to the core of this paper .In this section , we study the notion of one-shot not iterated dominance .As a first observation , checking whether a given strategy is strictly weakly dominated by some pure strategy is straightforward , by checking , for every pure strategy for that player , whether the latter strategy performs strictly better against all the opponent 's strategies at least as well against all the opponent 's strategies , and strictly 2The dominated strategy v0i is , of course , also allowed to be mixed , but this has no technical implications for the paper : when we study one-shot dominance , we ask whether a given strategy is dominated , and it does not matter whether the given strategy is pure or mixed ; when we study iterated dominance , there is no use in eliminating mixed strategies , as we will see shortly .3This player may have a very large strategy space one pure strategy for every vector of pure strategies for the players that are being replaced .Nevertheless , this will not result in an increase in our representation size , because the original representation already had to specify utilities for each of these vectors .4We note that a restriction to two-player games would not be without loss of generality for iterated dominance .This is because for iterated dominance , we need to look at the dominated strategies of each individual player , so we can not merge any players .better against at least one .5 Next , we show that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time by solving a single linear program .Similar linear programs have been given before 18 ; we present the result here for completeness , and because we will build on the linear programs given below in Theorem 6 .PROOF .Let pdr be the probability that \u03c3r places on dr E Dr. We will solve a single linear program in each of our algorithms ; linear programs can be solved in polynomial time 10 .For strict dominance , the question is whether the pdr can be set so that for every pure strategy for the column player \u03c3c E \u03a3c , E pdr ur dr , \u03c3c > ur \u03c3 * r , \u03c3c .Because dr EDr the inequality must be strict , we can not solve this directly by linear programming .We proceed as follows .Because the game is finite , we may assume without loss of generality that all utilities are positive if not , simply add a constant to all utilities .Solve the following linear program :If \u03c3 * r is strictly dominated by some mixed strategy , this linear program has a solution with objective value < 1 .The dominating strategy is a feasible solution with objective value exactly 1 .Because no constraint is binding for this solution , we can reduce one of the probabilities slightly without affecting feasibility , thereby obtaining a solution with objective value < 1 .Moreover , if this linear program has a solution with objective value < 1 , there is a mixed strategy strictly dominating \u03c3 * r , which can be obtained by taking the LP solution and adding the remaining probability to any strategy because all the utilities are positive , this will add to the left side of any inequality , so all inequalities will become strict .For weak dominance , we can solve the following linear program :that mixed strategy is a feasible solution to this program with objective value > 0 , because for at least one strategythe other hand , if this program has a solution with objective value > 0 , then for at least one strategy \u03c3c E \u03a3c we 5Recall that the assumption of a single opponent that is , the assumption of two players is without loss of generality for one-shot dominance .must have E pdr ur dr , \u03c3c ur \u03c3 * r , \u03c3c > 0 , and thus dr EDr the linear program 's solution is a weakly dominating mixed strategy .We now move on to iterated dominance .It is well-known that iterated strict dominance is path-independent 6 , 19 that is , if we remove dominated strategies until no more dominated strategies remain , in the end the remaining strategies for each player will be the same , regardless of the order in which strategies are removed .Because of this , to see whether a given strategy can be eliminated by iterated strict dominance , all that needs to be done is to repeatedly remove strategies that are strictly dominated , until no more dominated strategies remain .Because we can check in polynomial time whether any given strategy is dominated whether or not dominance by mixed strategies is allowed , as described in Section 3 , this whole procedure takes only polynomial time .In the case of iterated dominance by pure strategies with two players , Knuth et al. 11 slightly improve on speed up the straightforward implementation of this procedure by keeping track of , for each ordered pair of strategies for a player , the number of opponent strategies that prevent the first strategy from dominating the second .Hereby the runtime for an m x n game is reduced from O m + n 4 to O m + n 3 .Actually , they only study very weak dominance for which no strict inequalities are required , but the approach is easily extended .In contrast , iterated weak dominance is known to be pathdependent .6 For example , in the following game , using iterated weak dominance we can eliminate M first , and then D , or R first , and then U.Therefore , while the procedure of removing weakly dominated strategies until no more weakly dominated strategies remain can certainly be executed in polynomial time , which strategies survive in the end depends on the order in which we remove the dominated strategies .We will investigate two questions for iterated weak dominance : whether a given strategy is eliminated in some path , and whether there is a path to a unique solution one pure strategy left per player .We will show that both of these problems are computationally hard .The following lemma shows a special case of normal form games in which allowing for weak dominance by mixed strategies in addition to weak dominance by pure strategies does 6There is , however , a restriction of weak dominance called nice weak dominance which is path-independent 15 , 16 .For an overview of path-independence results , see Apt 1 .not help .We will prove the hardness results in this setting , so that they will hold whether or not dominance by mixed strategies is allowed .PROOF .Suppose pure strategy \u03c3 is weakly dominated by mixed strategy \u03c3 \u2217 .If \u03c3 gets a utility of 1 against some opponent strategy or vector of opponent strategies if there are more than 2 players , then all the pure strategies that \u03c3 \u2217 places positive probability on must also get a utility of 1 against that opponent strategy or else the expected utility would be smaller than 1 .Moreover , at least one of the pure strategies that \u03c3 \u2217 places positive probability on must get a utility of 1 against an opponent strategy that \u03c3 gets 0 against or else the inequality would never be strict .It follows that this pure strategy weakly dominates \u03c3 .We are now ready to prove the main results of this section .PROOF .The problem is in NP because given a sequence of strategies to be eliminated , we can easily check whether this is a valid sequence of eliminations even when dominance by mixed strategies is allowed , using Proposition 1 .To show that the problem is NP-hard , we reduce an arbitrary satisfiability instance given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = + v : v E V U \u2212 v : v E V to the following IWD-STRATEGY-ELIMINATION instance .In this instance , we will specify that certain strategies are uneliminable .A strategy \u03c3r can be made uneliminable , even when 0 and 1 are the only allowed utilities , by adding another strategy \u03c30r and another opponent strategy \u03c3c , so that : 1 .\u03c3r and \u03c30r are the only strategies that give the row player a utility of 1 against \u03c3c .2 .\u03c3r and \u03c30r always give the row player the same utility .3 .\u03c3c is the only strategy that gives the column player a utility of 1 against \u03c30r , but otherwise \u03c3c always gives the column player utility 0 .This makes it impossible to eliminate any of these three strategies .We will not explicitly specify the additional strategies to make the proof more legible .In this proof , we will denote row player strategies by s , and column player strategies by t , to improve legibility .Let the row player 's pure strategy set be given as follows .For every variable v E V , the row player has corresponding strategies s1 + v , s2 + v , s1 \u2212 v , s2 \u2212 v. Additionally , the row player has the following 2 strategies : s10 and s20 , where s20 = \u03c3 \u2217 r that is , it is the strategy we seek to eliminate .Finally , for every clause c E C , the row player has corresponding strategies s1c uneliminable and s2c .Let the column player 's pure strategy set be given as follows .For every variable v E V , the column player has a corresponding strategy tv .For every clause c E C , the column player has a corresponding strategy tc , and additionally , for every literal l E L that occurs in c , a strategy tc , l. For every variable v E V , the column player has corresponding strategies t + v , t \u2212 v both uneliminable .Finally , the column player has three additional strategies : t10 uneliminable , t20 , and t1 .The utility function for the row player is given as follows :and the column player 's utility is 0 in every other case .We now show that the two instances are equivalent .First , suppose there is a solution to the satisfiability instance : that is , a truth-value assignment to the variables in V such that all clauses are satisfied .Then , consider the following sequence of eliminations in our game : 1 .For every variable v that is set to true in the assignment , eliminate tv which gives the column player utility 0 everywhere .2 .Then , for every variable v that is set to true in the assignment , eliminate s2 + v using s1 + v which is possible because tv has been eliminated , and because t1 has not been eliminated yet .3 .Now eliminate t1 which gives the column player utility 0 everywhere .4 .Next , for every variable v that is set to false in the assignment , eliminate s2 \u2212 v using s1 \u2212 v which is possible because t1 has been eliminated , and because tv has not been eliminated yet .5 .For every clause c which has the variable corresponding to one of its positive literals l = + v set to true in the assignment , eliminate tc using tc , l which is possible because s2l has been eliminated , and s2c has not been eliminated yet .6 .For every clause c which has the variable corresponding to one of its negative literals l = \u2212 v set to false in the assignment , eliminate tc using tc , lwhich is possible because s2l has been eliminated , and s2c has not been eliminated yet .7 .Because the assignment satisfied the formula , all the tc have now been eliminated .Thus , we can eliminate s20 = a * r using s10 .It follows that there is a solution to the IWD-STRATEGY-ELIMINATION instance .Now suppose there is a solution to the IWD-STRATEGYELIMINATION instance .By Lemma 1 , we can assume that all the dominances are by pure strategies .We first observe that only s10 can eliminate s20 = a * r , because it is the only other strategy that gets the row player a utility of 1 against t10 , and t10 is uneliminable .However , because s20 performs better than s10 against the tc strategies , it follows that all of the tc strategies must be eliminated .For each c \u2208 C , the strategy tc can only be eliminated by one of the strategies tc , l with the same c , because these are the only other strategies that get the column player a utility of 1 against s1 c , and s1c is uneliminable .But , in order for some tc , l to eliminate tc , s2l must be eliminated first .Only s1l can eliminate s2l , because it is the only other strategy that gets the row player a utility of 1 against tl , and tl is uneliminable .We next show that for every v \u2208 V only one of s2 + v , s2 \u2212 v can be eliminated .This is because in order for s1 + v to eliminate s2 + v , tv needs to have been eliminated and t1 , not so tv must be eliminated before t1 ; but in order for s1 \u2212 v to eliminate s2 \u2212 v , t1 needs to have been eliminated and tv , not so t1 must be eliminated before tv .So , set v to true if s2 + v is eliminated , and to false otherwise Because by the above , for every clause c , one of the s2l with l \u2208 c must be eliminated , it follows that this is a satisfying assignment to the satisfiability instance .Using Theorem 1 , it is now relatively easy to show that IWD-UNIQUE-SOLUTION is also NP-complete under the same restrictions .PROOF .Again , the problem is in NP because we can nondeterministically choose the sequence of eliminations and verify whether it is correct .To show NP-hardness , we reduce an arbitrary IWD-STRATEGY-ELIMINATION instance to the following IWD-UNIQUE-SOLUTION instance .Let all the strategies for each player from the original instance remain part of the new instance , and let the utilities resulting from the players playing a pair of these strategies be the same .We add three additional strategies a1r , a2r , a3r for the row player , and three additional strategies a1c , a2c , a3c for the column player .Let the additional utilities be as follows :We proceed to show that the two instances are equivalent .First suppose there exists a solution to the original IWDSTRATEGY-ELIMINATION instance .Then , perform the same sequence of eliminations to eliminate a * r in the new IWD-UNIQUE-SOLUTION instance .This is possible because at any stage , any weak dominance for the row player in the original instance is still a weak dominance in the new instance , because the two strategies ' utilities for the row player are the same when the column player plays one of the new strategies ; and the same is true for the column player .Once a * r is eliminated , let a1c eliminate a2c .It performs better against a2r .Then , let a1r eliminate all the other remaining strategies for the row player .It always performs better against either a1c or a3c .Finally , a1c is the unique best response against a1r among the column player 's remaining strategies , so let it eliminate all the other remaining strategies for the column player .Thus , there exists a solution to the IWD-UNIQUE-SOLUTION instance .Now suppose there exists a solution to the IWD-UNIQUESOLUTION instance .By Lemma 1 , we can assume that all the dominances are by pure strategies .We will show that none of the new strategies a1r , a2r , a3r , a1c , a2c , a3c can either eliminate another strategy , or be eliminated before a * r is eliminated .Thus , there must be a sequence of eliminations ending in the elimination of a * r , which does not involve any of the new strategies , and is therefore a valid sequence of eliminations in the original game because all original strategies perform the same against each new strategy .We now show that this is true by exhausting all possibilities for the first elimination before a * r is eliminated that involves a new strategy .None of the air can be eliminated by a ar \u2208 / a1r , a2r , a3r , because the air perform better against a1c .a1r can not eliminate any other strategy , because it always performs poorer against a2c .a2r and a3r are equivalent from the row player 's perspective and thus can not eliminate each other , and can not eliminate any other strategy because they always perform poorer against a3c .None of the ajc can be eliminated by a ac \u2208 / a1c , a2c , a3c , because the ajc always perform better against either a1r or a2r .a1c can not eliminate any other strategy , because it always performs poorer against either a * r or a3r .a2c can not eliminate any other strategy , because it always performs poorer against a2r or a3r .a3c can not eliminate any other strategy , because it always performs poorer against a1r or a3r .Thus , there exists a solution to the IWDSTRATEGY-ELIMINATION instance .A slightly weaker version of the part of Theorem 2 concerning dominance by pure strategies only is the main result of Gilboa et al. 7 .Besides not proving the result for dominance by mixed strategies , the original result was weaker because it required utilities 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 rather than just 0 , 1 and because of this , our Lemma 1 can not be applied to it to get the result for mixed strategies .When showing that a strategy is dominated by a mixed strategy , there are several reasons to prefer exhibiting adominating strategy that places positive probability on as few pure strategies as possible .First , this will reduce the number of bits required to specify the dominating strategy and thus the proof of dominance can be communicated quicker : if the dominating mixed strategy places positive probability on only k strategies , then it can be specified using k real numbers for the probabilities , plus k log m where m is the number of strategies for the player under consideration bits to indicate which strategies are used .Second , the proof of dominance will be `` cleaner '' : for a dominating mixed strategy , it is typically always in the case of strict dominance possible to spread some of the probability onto any unused pure strategy and still have a dominating strategy , but this obscures which pure strategies are the ones that are key in making the mixed strategy dominating .Third , because by the previous the argument for eliminating the dominated strategy is simpler and easier to understand , it is more likely to be accepted .Fourth , the level of risk neutrality required for the argument to work is reduced , at least in the extreme case where dominance by a single pure strategy can be exhibited no risk neutrality is required here .This motivates the following problem .DEFINITION 4 MINIMUM-DOMINATING-SET .We are given the row player 's utilities of a game in normal form , a distinguished strategy \u03c3 * for the row player , a specification of whether the dominance should be strict or weak , and a number k .We are asked whether there exists a mixed strategy \u03c3 for the row player that places positive probability on at most k pure strategies , and dominates \u03c3 * in the required sense .Unfortunately , this problem is NP-complete .THEOREM 3 .MINIMUM-DOMINATING-SET is NPcomplete , both for strict and for weak dominance .PROOF .The problem is in NP because we can nondeterministically choose a set of at most k strategies to give positive probability , and decide whether we can dominate \u03c3 * with these k strategies as described in Proposition 1 .To show NP-hardness , we reduce an arbitrary SET-COVER instance given a set S , subsets S1 , S2 , ... , S , ., and a number t , can all of S be covered by at most t of the subsets ?to the following MINIMUM-DOMINATING-SET instance .For every element s \u2208 S , there is a pure strategy \u03c33 for the column player .For every subset Si , there is a pure strategy \u03c3Si for the row player .Finally , there is the distinguished pure strategy \u03c3 * for the row player .The row player 's utilities are as follows : u , .\u03c3Si , \u03c33 = t + 1 if s \u2208 Si ; u , .\u03c3Si , \u03c33 = 0 if s \u2208 / Si ; u , .\u03c3 * , \u03c33 = 1 for all s \u2208 S. Finally , we let k = t .We now proceed to show that the two instances are equivalent .First suppose there exists a solution to the SET-COVER instance .Without loss of generality , we can assume that there are exactly k subsets in the cover .Then , for every Si that is in the cover , let the dominating strategy \u03c3 place exactly k1 probability on the corresponding pure strategy \u03c3Si .Now , if we let n s be the number of subsets in the cover containing s we observe that that n s \u2265 1 , then for every strategy \u03c33 for the column player , the row player 's expected utility for playing \u03c3 when the column player is playing \u03c33 isand thus also weakly dominates \u03c3 * , and there exists a solution to the MINIMUM-DOMINATING-SET instance .Now suppose there exists a solution to the MINIMUMDOMINATING-SET instance .Consider the at most k pure strategies of the form \u03c3Si on which the dominating mixed strategy \u03c3 places positive probability , and let T be the collection of the corresponding subsets Si .We claim that T is a cover .For suppose there is some s \u2208 S that is not in any of the subsets in T .Then , if the column player plays \u03c33 , the row player when playing \u03c3 will always receive utility 0 as opposed to the utility of 1 the row player would receive for playing \u03c3 * , contradicting the fact that \u03c3 dominates \u03c3 * whether this dominance is weak or strict .It follows that there exists a solution to the SET-COVER instance .On the other hand , if we require that the dominating strategy only places positive probability on a very small number of pure strategies , then it once again becomes easy to check whether a strategy is dominated .Specifically , to find out whether player i 's strategy \u03c3 * is dominated by a strategy that places positive probability on only k pure strategies , we can simply check , for every subset of k of player i 's pure strategies , whether there is a strategy that places positive probability only on these k strategies and dominates \u03c3 * , using Proposition 1 .This requires only O | \u03a3i | k such checks .Thus , if k is a constant , this constitutes a polynomial-time algorithm .A natural question to ask next is whether iterated strict dominance remains computationally easy when dominating strategies are required to place positive probability on at most k pure strategies , where k is a small constant .We have already shown in Section 4 that iterated weak dominance is hard even when k = 1 , that is , only dominance by pure strategies is allowed .Of course , if iterated strict dominance were path-independent under this restriction , computational easiness would follow as it did in Section 4 .However , it turns out that this is not the case .OBSERVATION 1 .If we restrict the dominating strategies to place positive probability on at most two pure strategies , iterated strict dominance becomes path-dependent .PROOF .Consider the following game : 7 , 1 0 , 0 0 , 0 0 , 0 7 , 1 0 , 0 3 , 0 3 , 0 0 , 0 0 , 0 0 , 0 3 , 1 1 , 0 1 , 0 1 , 0 Let i , j denote the outcome in which the row player plays the ith row and the column player plays the jth column .Because 1 , 1 , 2 , 2 , and 4 , 3 are all Nash equilibria , none of the column player 's pure strategies will ever be eliminated , and neither will rows 1 , 2 , and 4 .We now observe that randomizing uniformly over rows 1 and 2 dominates row 3 , and randomizing uniformly over rows 3 and 4 dominates row 5 .However , if we eliminate row 3 first , it becomes impossible to dominate row 5 without randomizing over at least 3 pure strategies .Indeed , iterated strict dominance turns out to be hard even when k = 3 .PROOF .The problem is in NP because given a sequence of strategies to be eliminated , we can check in polynomial time whether this is a valid sequence of eliminations for any strategy to be eliminated , we can check , for every subset of three other strategies , whether there is a strategy placing positive probability on only these three strategies that dominates the strategy to be eliminated , using Proposition 1 .To show that the problem is NP-hard , we reduce an arbitrary satisfiability instance given by a nonempty set of clauses C over a nonempty set of variables V , with corresponding literals L = + v : v \u2208 V \u222a \u2212 v : v \u2208 V to the following two-player game .For every variable v \u2208 V , the row player has strategies s + v , s_v , s1v , s2v , s3v , s4v , and the column player has strategies t1v , t2v , t3v , t4v .For every clause c \u2208 C , the row player has a strategy sc , and the column player has a strategy tc , as well as , for every literal l occurring in c , an additional strategy tlc .The row player has two additional strategies s1 and s2 .s2 is the strategy that we are seeking to eliminate .Finally , the column player has one additional strategy t1 .The utility function for the row player is given as follows where ~ is some sufficiently small number :The utility function for the column player is given as follows :We now show that the two instances are equivalent .First , suppose that there is a solution to the satisfiability instance .Then , consider the following sequence of eliminations in our game : 1 .For every variable v that is set to true in the satisfying assignment , eliminate s + v with the mixed strategy \u03c3r that places probability 1/3 on s_v , probability 1/3 on s1v , and probability 1/3 on s2v .The expected utility of playing \u03c3r against t1v or t2v is 14/3 > 4 ; against t3 v or t4 v , it is 4/3 > 1 ; and against anything else it is 2 ~ / 3 > 0 .Hence the dominance is valid .2 .Similarly , for every variable v that is set to false in the satisfying assignment , eliminate s_v with the mixed strategy \u03c3r that places probability 1/3 on s + v , probability 1/3 on s3v , and probability 1/3 on s4v .The expected utility of playing \u03c3r against t1 v or t2 v is 4/3 > 1 ; against t3 v or t4 v , it is 14/3 > 4 ; and against anything else it is 2 ~ / 3 > 0 .Hence the dominance is valid .3 .For every c \u2208 C , eliminate tc with any tlc for which l was set to true in the satisfying assignment .This is a valid dominance because tlc performs better than tc against any strategy other than sl , and we eliminated sl in step 1 or in step 2 .4 .Finally , eliminate s2 with s1 .This is a valid dominance because s1 performs better than s2 against any strategy other than those in tc : c \u2208 C , which we eliminated in step 3 .Hence , there is an elimination path that eliminates s2 .Now , suppose that there is an elimination path that eliminates s2 .The strategy that eventually dominates s2 must place most of its probability on s1 , because s1 is the only other strategy that performs well against t1 , which can not be eliminated before s2 .But , s1 performs significantly worse than s2 against any strategy tc with c \u2208 C , so it follows that all these strategies must be eliminated first .Each strategy tc can only be eliminated by a strategy that places most of its weight on the corresponding strategies tlc with l \u2208 c , because they are the only other strategies that perform well against sc , which can not be eliminated before tc .But , each strategy tlc performs significantly worse than tc against sl , so it follows that for every clause c , for one of the literals l occurring in it , sl must be eliminated first .Now , strategies of the form tjv will never be eliminated because they are the unique best responses to the corresponding strategies sjv which are , in turn , the best responses to the corresponding tjv .As a result , if strategy s + v respectively , s_v is eliminated , then its opposite strategy s_v respectively , s + v can no longer be eliminated , for the following reason .There is no other pure strategy remaining that gets a significant utility against more than one of the strategies t1v , t2v , t3v , t4v , but s_v respectively , s + v gets significant utility against all 4 , and therefore can not be dominated by a mixed strategy placing positive probability on at most 3 strategies .It follows that for each v \u2208 V , at most one of the strategies s + v , s_v is eliminated , in such a way that for every clause c , for one of the literals l occurring in it , sl must be eliminated .But then setting all the literals l such that sl is eliminated to true constitutes a solution to the satisfiability instance .In the next section , we return to the setting where there is no restriction on the number of pure strategies on which a dominating mixed strategy can place positive probability .So far , we have focused on normal form games that are flatly represented that is , every matrix entry is given explicitly .However , for many games , the flat representation is too large to write down explicitly , and instead , some representation that exploits the structure of the game needs to be used .Bayesian games , besides being of interest in their own right , can be thought of as a useful structured representation of normal form games , and we will study them in this section .In a Bayesian game , each player first receives privately held preference information the player 's type from a distribution , which determines the utility that that player receives for every outcome of that is , vector of actions played in the game .After receiving this type , the player plays an action based on it .7i 's utility when i 's type is \u03b8i and each player j plays action aj .A pure strategy in a Bayesian game is a mapping from types to actions , \u03c3i : \u0398i + Ai , where \u03c3i \u03b8i denotes the action that player i plays for type \u03b8i .Any vector of pure strategies in a Bayesian game defines an expected utility for each player , and therefore we can translate a Bayesian game into a normal form game .In this normal form game , the notions of dominance and iterated dominance are defined as before .However , the normal form representation of the game is exponentially larger than the Bayesian representation , because each player i has | Ai | I\u0398iI distinct pure strategies .Thus , any algorithm for Bayesian games that relies on expanding the game to its normal form will require exponential time .Specifically , our easiness results for normal form games do not directly transfer to this setting .In fact , it turns out that checking whether a strategy is dominated by a pure strategy is hard in Bayesian games .THEOREM 5 .In a Bayesian game , it is NP-complete to decide whether a given pure strategy \u03c3r : \u0398r + Ar is dominated by some other pure strategy both for strict and weak dominance , even when the row player 's distribution over types is uniform .PROOF .The problem is in NP because it is easy to verify whether a candidate dominating strategy is indeed a dominating strategy .To show that the problem is NP-hard , we reduce an arbitrary satisfiability instance given by a set of clauses C using variables from V to the following Bayesian game .Let the row player 's action set be Ar = t , f , 0 and let the column player 's action set be Ac = ac : c E C .Let the row player 's type set be \u0398r = \u03b8v : v E V , with a distribution \u03c0r that is uniform .Let the row player 's utility function be as follows :Let the pure strategy to be dominated be the one that plays 0 for every type .We show that the strategy is dominated by a pure strategy if and only if there is a solution to the satisfiability instance .First , suppose there is a solution to the satisfiability instance .Then , let \u03c3dr be given by : \u03c3dr \u03b8v = t if v is set to true in the solution to the satisfiability instance , and \u03c3dr \u03b8v = f otherwise .Then , against any action ac by the column player , there is at least one type \u03b8v such that either + v E c and \u03c3dr \u03b8v = t , or \u2212 v E c and \u03c3dr \u03b8v = f. Thus , the row player 's expected utility against action ac is at leastHowever , it turns out that we can modify the linear programs from Proposition 1 to obtain a polynomial time algorithm for checking whether a strategy is dominated by a mixed strategy in Bayesian games .THEOREM 6 .In a Bayesian game , it can be decided in polynomial time whether a given possibly mixed strategy \u03c3r is dominated by some other mixed strategy , using linear programming both for strict and weak dominance .PROOF .We can modify the linear programs presented in Proposition 1 as follows .For strict dominance , again assuming without loss of generality that all the utilities in the game are positive , use the following linear program in which p\u03c3rsuch that for any ac E Ac , E E \u03c0 \u03b8r ur \u03b8r , ar , ac pr \u03b8r , ar >for any \u03b8r E \u0398r , E pr \u03b8r , ar < 1 .arEAr Assuming that \u03c0 \u03b8r > 0 for all \u03b8r E \u0398r , this program will return an objective value smaller than | \u0398r | if and only if \u03c3r is strictly dominated , by reasoning similar to that done in Proposition 1 .For weak dominance , use the following linear program : such that for any ac E Ac , E E \u03c0 \u03b8r ur \u03b8r , ar , ac pr \u03b8r , ar >for any \u03b8r E \u0398r , E pr \u03b8r , ar = 1 .arEAr This program will return an objective value greater than 0 if and only if \u03c3r is weakly dominated , by reasoning similar to that done in Proposition 1 .We now turn to iterated dominance in Bayesian games .Na \u00a8 \u0131vely , one might argue that iterated dominance in Bayesiangames always requires an exponential number of steps when a significant fraction of the game 's pure strategies can be eliminated , because there are exponentially many pure strategies .However , this is not a very strong argument because oftentimes we can eliminate exponentially many pure strategies in one step .For example , if for some type \u03b8r \u2208 \u0398r we have , for all ac \u2208 Ac , that u \u03b8r , a1r , ac > u \u03b8r , a2r , ac , then any pure strategy for the row player which plays action a2r for type \u03b8r is dominated by the strategy that plays action a1r for type \u03b8r instead and there are exponentially many | Ar | | \u0398r | \u2212 1 such strategies .It is therefore conceivable that we need only polynomially many eliminations of collections of a player 's strategies .However , the following theorem shows that this is not the case , by giving an example where an exponential number of iterations that is , alternations between the players in eliminating strategies is required .We emphasize that this is not a result about computational complexity .THEOREM 7 .Even in symmetric 3-player Bayesian games , iterated dominance by pure strategies can require an exponential number of iterations both for strict and weak dominance , even with only three actions per player .PROOF .Let each player i \u2208 1 , 2 , 3 have n + 1 types \u03b81i , \u03b82i , ... , \u03b8n +1 i .Let each player i have 3 actions ai , bi , ci , and let the utility function of each player be defined as follows .In the below , i + 1 and i + 2 are shorthand for i + 1 mod 3 and i + 2 mod 3 when used as player indices .Also , \u2212 \u221e can be replaced by a sufficiently negative number .Finally , \u03b4 and ~ should be chosen to be very small even compared to 2 \u2212 n +1 , and ~ should be more than twice as large as \u03b4 .Let the distribution over each player 's types be given by p \u03b8ji = 2 \u2212 j with the exception that p \u03b82i = 2 \u2212 2 +2 \u2212 n +1 .We will be interested in eliminating strategies of the following form : play bi for type \u03b81i , and play one of bi or ci otherwise .Because the utility function is the same for any type \u03b8ji with j > 1 , these strategies are effectively defined by the total probability that they place on ci ,8 which is t2i 2 \u2212 2 + 2 \u2212 n +1 + n +1 j = 3 tji2 \u2212 j where tji = 1 if player i 8Note that the strategies are still pure strategies ; the probability placed on an action by a strategy here is simply the sum of the probabilities of the types for which the strategy chooses that action .plays ci for type \u03b8ji , and 0 otherwise .This probability is different for any two different strategies of the given form , and we have exponentially many different strategies of the given form .For any probability q which can be expressedlet \u03c3i q denote the unique strategy of the given form for player i which places a total probability of q on ci .Any strategy that plays ci for type \u03b81i or ai for some type \u03b8ji with j > 1 can immediately be eliminated .We will show that , after that , we must eliminate the strategies \u03c3i q with high q first , slowly working down to those with lower q. Claim 1 : If \u03c3i +1 q0 and \u03c3i +2 q0 have not yet been eliminated , and q < q0 , then \u03c3i q can not yet be eliminated .Proof : First , we show that no strategy \u03c3i q00 can eliminate \u03c3i q .Against \u03c3i +1 q000 , \u03c3i +2 q000 , the utility of playing \u03c3i p is \u2212 ~ + p \u00b7 \u03b4 \u2212 p \u00b7 q000/2 .Thus , when q000 = 0 , it is best to set p as high as possible and we note that \u03c3i +1 0 and \u03c3i +2 0 have not been eliminated , but when q000 > 0 , it is best to set p as low as possible because \u03b4 < q000/2 .Thus , whether q > q00 or q < q00 , \u03c3i q will always do strictly better than \u03c3i q00 against some remaining opponent strategies .Hence , no strategy \u03c3i q00 can eliminate \u03c3i q .The only other pure strategies that could dominate \u03c3i q are strategies that play ai for type \u03b81i , and bi or ci for all other types .Let us take such a strategy and suppose that it plays c with probability p. Against \u03c3i +1 q0 , \u03c3i +2 q0 which have not yet been eliminated , the utility of playing this strategy is \u2212 q0 2/2 \u2212 ~ / 2 + p \u00b7 \u03b4 \u2212 p \u00b7 q0/2 .On the other hand , playing \u03c3i q gives \u2212 ~ + q \u00b7 \u03b4 \u2212 q \u00b7 q0/2 .Because q0 > q , we have \u2212 q0 2/2 < \u2212 q \u00b7 q0/2 , and because \u03b4 and ~ are small , it follows that \u03c3i q receives a higher utility .Therefore , no strategy dominates \u03c3i q , proving the claim .Claim 2 : If for all q0 > q , \u03c3i +1 q0 and \u03c3i +2 q0 have been eliminated , then \u03c3i q can be eliminated .Proof : Consider the strategy for player i that plays ai for type \u03b81i , and bi for all other types call this strategy \u03c30i ; we claim \u03c30i dominates \u03c3i q .First , if either of the other players k plays ak for \u03b81k , then \u03c30i performs better than \u03c3i q which receives \u2212 \u221e in some cases .Because the strategies for player k that play ck for type \u03b81k , or ak for some type \u03b8jk with j > 1 , have already been eliminated , all that remains to check is that \u03c30i performs better than \u03c3i q whenever both of the other two players play strategies of the following form : play bk for type \u03b81k , and play one of bk or ck otherwise .We note that among these strategies , there are none left that place probability greater than q on ck .Letting qk denote the probability with which player k plays ck , the expected utility of playing \u03c30i is \u2212 qi +1 \u00b7 qi +2 / 2 \u2212 ~ / 2 .On the other hand , the utility of playing \u03c3i q is \u2212 ~ + q \u00b7 \u03b4 \u2212 q \u00b7 qi +2 / 2 .Because qi +1 \u2264 q , the difference between these two expressions is at least ~ / 2 \u2212 \u03b4 , which is positive .It follows that \u03c30i dominates \u03c3i q .From Claim 2 , it follows that all strategies of the form \u03c3i q will eventually be eliminated .However , Claim 1 shows that we can not go ahead and eliminate multiple such strategies for one player , unless at least one other player simultaneously `` keeps up '' in the eliminated strategies : every time a \u03c3i q is eliminated such that \u03c3i +1 q and \u03c3i +2 q have not yet been eliminated , we need to eliminate one of the latter two strategies before any \u03c3i q0 with q0 > q can be eliminated that is , we need to alternate between players .Because there are exponentially many strategies of the form \u03c3i q , it follows that iterated elimination will require exponentially many iterations to complete .It follows that an efficient algorithm for iterated dominance strict or weak by pure strategies in Bayesian games , if it exists , must somehow be able to perform at least part of many iterations in a single step of the algorithm because if each step only performed a single iteration , we would need exponentially many steps .Interestingly , Knuth et al. 11 argue that iterated dominance appears to be an inherently sequential problem in light of their result that iterated very weak dominance is P-complete , that is , apparently not efficiently parallelizable , suggesting that aggregating many iterations may be difficult .", "conclusions": "While the Nash equilibrium solution concept is studied more and more intensely in our community , the perhaps more elementary concept of iterated dominance has received much less attention .In this paper we studied various computational aspects of this concept .We first studied both strict and weak dominance not iterated , and showed that checking whether a given strategy is dominated by some mixed strategy can be done in polynomial time using a single linear program solve .We then moved on to iterated dominance .We showed that determining whether there is some path that eliminates a given strategy is NP-complete with iterated weak dominance .This allowed us to also show that determining whether there is a path that leads to a unique solution is NP-complete .Both of these results hold both with and without dominance by mixed strategies .A weaker version of the second result only without dominance by mixed strategies was already known 7 .Iterated strict dominance , on the other hand , is path-independent both with and without dominance by mixed strategies and can therefore be done in polynomial time .We then studied what happens when the dominating strategy is allowed to place positive probability on only a few pure strategies .First , we showed that finding the dominating strategy with minimum support size is NP-complete both for strict and weak dominance .Then , we showed that iterated strict dominance becomes path-dependent when there is a limit on the support size of the dominating strategies , and that deciding whether a given strategy can be eliminated by iterated strict dominance under this restriction is NP-complete even when the limit on the support size is 3 .Finally , we studied dominance and iterated dominance in Bayesian games , as an example of a concise representation language for normal form games that is interesting in its own right .We showed that , unlike in normal form games , deciding whether a given pure strategy is dominated by another pure strategy in a Bayesian game is NP-complete both with strict and weak dominance ; however , deciding whether a strategy is dominated by some mixed strategy can still be done in polynomial time with a single linear program solve both with strict and weak dominance .Finally , we showed that iterated dominance using pure strategies can require an exponential number of iterations in a Bayesian game both with strict and weak dominance .There are various avenues for future research .First , there is the open question of whether it is possible to complete iterated dominance in Bayesian games in polynomial time even though we showed that an exponential number of alternations between the players in eliminating strategies is sometimes required .Second , we can study computational aspects of iterated dominance in concise representations of normal form games other than Bayesian games for example , in graphical games 9 or local-effect/action graph games 12 , 2 .How to efficiently perform iterated very weak dominance has already been studied for partially observable stochastic games 8 .Finally , we can ask whether some of the algorithms we described such as the one for iterated strict dominance with mixed strategies can be made faster ."}