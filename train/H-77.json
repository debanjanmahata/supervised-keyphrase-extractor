{"reader_keywords": ["title extraction", "formatting information", "language independence", "metada of document", "linguistic feature", "comparison between model", "generality of model", "model generality", "usefulness of extracted title", "extracted title usefulness", "genre", "classifier", "document retrieval", "automatic title extraction"], "reader_keywords_stem": ["titl extract", "format inform", "languag independ", "metada of document", "linguist featur", "comparison between model", "gener of model", "model gener", "us of extract titl", "extract titl us", "genr", "classifi", "document retriev", "automat titl extract"], "introduction": "Metadata of documents is useful for many kinds of document processing such as search , browsing , and filtering .Ideally , metadata is defined by the authors of documents and is then used by various systems .However , people seldom define document metadata by themselves , even when they have convenient metadata definition tools 26 .Thus , how to automatically extract metadata from the bodies of documents turns out to be an important research issue .Methods for performing the task have been proposed .However , the focus was mainly on extraction from research papers .For instance , Han et al. 10 proposed a machine learning based method to conduct extraction from research papers .They formalized the problem as that of classification and employed Support Vector Machines as the classifier .They mainly used linguistic features in the model .In this paper , we consider metadata extraction from general documents .By general documents , we mean documents that may belong to any one of a number of specific genres .General documents are more widely available in digital libraries , intranets and the internet , and thus investigation on extraction from them issorely needed .Research papers usually have well-formed styles and noticeable characteristics .In contrast , the styles of general documents can vary greatly .It has not been clarified whether a machine learning based approach can work well for this task .There are many types of metadata : title , author , date of creation , etc. .As a case study , we consider title extraction in this paper .General documents can be in many different file formats : Microsoft Office , PDF PS , etc. .As a case study , we consider extraction from Office including Word and PowerPoint .We take a machine learning approach .We annotate titles in sample documents for Word and PowerPoint respectively and take them as training data to train several types of models , and perform title extraction using any one type of the trained models .In the models , we mainly utilize formatting information such as font size as features .We employ the following models : Maximum Entropy Model , Perceptron with Uneven Margins , Maximum Entropy Markov Model , and Voted Perceptron .In this paper , we also investigate the following three problems , which did not seem to have been examined previously .Experimental results indicate that our approach works well for title extraction from general documents .Our method can significantly outperform the baselines : one that always uses the first lines as titles and the other that always uses the lines in the largest font sizes as titles .Precision and recall for title extraction from Word are 0.810 and 0.837 respectively , and precision and recall for title extraction from PowerPoint are 0.875 and 0.895 respectively .It turns out that the use of format features is the key to successful title extraction .We conclude that we can indeed conduct reliable title extraction from general documents and use the extracted results to improve real applications .The rest of the paper is organized as follows .In section 2 , we introduce related work , and in section 3 , we explain the motivation and problem setting of our work .In section 4 , we describe our method of title extraction , and in section 5 , we describe our method of document retrieval using extracted titles .Section 6 gives our experimental results .We make concluding remarks in section 7 .", "title": "Automatic Extraction of Titles from General Documents using Machine Learning", "author_keywords_stem": ["information extraction", "metada extraction", "machine learn", "search"], "abstract": "In this paper , we propose a machine learning approach to title extraction from general documents .By general documents , we mean documents that can belong to any one of a number of specific genres , including presentations , book chapters , technical papers , brochures , reports , and letters .Previously , methods have been proposed mainly for title extraction from research papers .It has not been clear whether it could be possible to conduct automatic title extraction from general documents .As a case study , we consider extraction from Office including Word and PowerPoint .In our approach , we annotate titles in sample documents for Word and PowerPoint respectively and take them as training data , train machine learning models , and perform title extraction using the trained models .Our method is unique in that we mainly utilize formatting information such as font size as features in the models .It turns out that the use of formatting information can lead to quite accurate extraction from general documents .Precision and recall for title extraction from Word is 0.810 and 0.837 respectively , and precision and recall for title extraction from PowerPoint is 0.875 and 0.895 respectively in an experiment on intranet data .Other important new findings in this work include that we can train models in one domain and apply them to another domain , and more surprisingly we can even train models in one language and apply them to another language .Moreover , we can significantly improve search ranking results in document retrieval by using the extracted titles .", "id": "H-77", "combined_keywords_stem": ["titl extract", "format inform", "languag independ", "metada of document", "linguist featur", "comparison between model", "gener of model", "model gener", "us of extract titl", "extract titl us", "genr", "classifi", "document retriev", "automat titl extract", "inform extract", "metada extract", "machin learn", "search"], "evaluation": "We used two data sets in our experiments .First , we downloaded and randomly selected 5,000 Word documents and 5,000 PowerPoint documents from an intranet of Microsoft .We call it MS hereafter .Second , we downloaded and randomly selected 500 Word and 500 PowerPoint documents from the DotGov and DotCom domains on the internet , respectively .In our experiments , we conducted evaluations on title extraction in terms of precision , recall , and F-measure .The evaluation measures are defined as follows :Here , A , B , C , and D are numbers of documents as those defined in Table 2 .We test the accuracies of the two baselines described in section 4.2 .They are denoted as ` largest font size ' and ` first line ' respectively .anWe investigate how many titles in the file properties of the documents are reliable .We view the titles annotated by humans as true titles and test how many titles in the file properties approximately match with the true titles .We use Edit Distance to conduct the approximate match .Approximate match is only used in this evaluation .This is because sometimes human annotated titles can be slightly different from the titles in file properties on the surface , e.g. , contain extra spaces .Given string A and string B : if D == 0 or D / La + Lb < \u03b8 then string A = string B D : Edit Distance between string A and string B La : length of string A Lb : length of string BWe conducted title extraction from the first data set Word and PowerPoint in MS .As the model , we used Perceptron .We conduct 4-fold cross validation .Thus , all the results reported here are those averaged over 4 trials .Tables 4 and 5 show the results .We see that Perceptron significantly outperforms the baselines .In the evaluation , we use exact matching between the true titles annotated by humans and the extracted titles .We see that the machine learning approach can achieve good performance in title extraction .For Word documents both precision and recall of the approach are 8 percent higher than those of the baselines .For PowerPoint both precision and recall of the approach are 2 percent higher than those of the baselines .We conduct significance tests .The results are shown in Table 6 .Here , ` Largest ' denotes the baseline of using the largest font size , ` First ' denotes the baseline of using the first line .The results indicate that the improvements of machine learning over baselines are statistically significant in the sense p-value < 0.05We see , from the results , that the two baselines can work well for title extraction , suggesting that font size and position information are most useful features for title extraction .However , it is also obvious that using only these two features is not enough .There are cases in which all the lines have the same font size i.e. , the largest font size , or cases in which the lines with the largest font size only contain general descriptions like ` Confidential ' , ` White paper ' , etc. .For those cases , the ` largest font size ' method can not work well .For similar reasons , the ` first line ' method alone can not work well , either .With the combination of different features evidence in title judgment , Perceptron can outperform Largest and First .We investigate the performance of solely using linguistic features .We found that it does not work well .It seems that the format features play important roles and the linguistic features are supplements ..We conducted an error analysis on the results of Perceptron .We found that the errors fell into three categories .1 About one third of the errors were related to ` hard cases ' .In these documents , the layouts of the first pages were difficult to understand , even for humans .Figure 8 and 9 shows examples .2 Nearly one fourth of the errors were from the documents which do not have true titles but only contain bullets .Since we conduct extraction from the top regions , it is difficult to get rid of these errors with the current approach .3 .Confusions between main titles and subtitles were another type of error .Since we only labeled the main titles as titles , the extractions of both titles were considered incorrect .This type of error does little harm to document processing like search , however .To compare the performance of different machine learning models , we conducted another experiment .Again , we perform 4-fold crossvalidation on the first data set MS .Table 7 , 8 shows the results of all the four models .It turns out that Perceptron and PMM perform the best , followed by MEMM , and ME performs the worst .In general , the Markovian models perform better than or as well as their classifier counterparts .This seems to be because the Markovian models are trained globally , while the classifiers are trained locally .The Perceptron based models perform better than the ME based counterparts .This seems to be because the Perceptron based models are created to make better classifications , while ME models are constructed for better prediction .We apply the model trained with the first data set MS to the second data set DotCom and DotGov .Tables 9-12 show the results .From the results , we see that the models can be adapted to different domains well .There is almost no drop in accuracy .The results indicate that the patterns of title formats exist across different domains , and it is possible to construct a domain independent model by mainly using formatting information .We apply the model trained with the data in English MS to the data set in Chinese .Tables 13-14 show the results .We see that the models can be adapted to a different language .There are only small drops in accuracy .Obviously , the linguistic features do not work for Chinese , but the effect of not using them is negligible .The results indicate that the patterns of title formats exist across different languages .From the domain adaptation and language adaptation results , we conclude that the use of formatting information is the key to a successful extraction from general documents .We performed experiments on using title extraction for document retrieval .As a baseline , we employed BM25 without using extracted titles .The ranking mechanism was as described in Section 5 .The weights were heuristically set .We did not conduct optimization on the weights .The evaluation was conducted on a corpus of 1.3 M documents crawled from the intranet of Microsoft using 100 evaluation queries obtained from this intranet 's search engine query logs .50 queries were from the most popular set , while 50 queries other were chosen randomly .Users were asked to provide judgments of the degree of document relevance from a scale of 1to 5 1 meaning detrimental , 2 bad , 3 fair , 4 good and 5 excellent .Figure 10 shows the results .In the chart two sets of precision results were obtained by either considering good or excellent documents as relevant left 3 bars with relevance threshold 0.5 , or by considering only excellent documents as relevant right 3 bars with relevance threshold 1.0Figure 10 shows different document retrieval results with different ranking functions in terms of precision @ 10 , precision @ 5 and reciprocal rank :With the additional field of extracted title included in BM25 the precision @ 10 increased from 0.132 to 0.145 , or by ~ 10 % .Thus , it is safe to say that the use of extracted title can indeed improve the precision of document retrieval .", "combined_keywords": ["title extraction", "formatting information", "language independence", "metada of document", "linguistic feature", "comparison between model", "generality of model", "model generality", "usefulness of extracted title", "extracted title usefulness", "genre", "classifier", "document retrieval", "automatic title extraction", "information extraction", "metada extraction", "machine learn", "search"], "author_keywords": ["information extraction", "metada extraction", "machine learn", "search"], "method": "We consider the issue of automatically extracting titles from general documents .By general documents , we mean documents that belong to one of any number of specific genres .The documents can be presentations , books , book chapters , technical papers , brochures , reports , memos , specifications , letters , announcements , or resumes .General documents are more widely available in digital libraries , intranets , and internet , and thus investigation on title extraction from them is sorely needed .Figure 1 shows an estimate on distributions of file formats on intranet and internet 15 .Office and PDF are the main file formats on the intranet .Even on the internet , the documents in the formats are still not negligible , given its extremely large size .In this paper , without loss of generality , we take Office documents as an example .For Office documents , users can define titles as file properties using a feature provided by Office .We found in an experiment , however , that users seldom use the feature and thus titles in file properties are usually very inaccurate .That is to say , titles in file properties are usually inconsistent with the ` true ' titles in the file bodies that are created by the authors and are visible to readers .We collected 6,000 Word and 6,000 PowerPoint documents from an intranet and the internet and examined how many titles in the file properties are correct .We found that surprisingly the accuracy was only 0.265 cf. , Section 6.3 for details .A number of reasons can be considered .For example , if one creates a new file by copying an old file , then the file property of the new file will also be copied from the old file .In another experiment , we found that Google uses the titles in file properties of Office documents in search and browsing , but the titles are not very accurate .We created 50 queries to search Word and PowerPoint documents and examined the top 15 results of each query returned by Google .We found that nearly all the titles presented in the search results were from the file properties of the documents .However , only 0.272 of them were correct .Actually , ` true ' titles usually exist at the beginnings of the bodies of documents .If we can accurately extract the titles from the bodies of documents , then we can exploit reliable title information in document processing .This is exactly the problem we address in this paper .More specifically , given a Word document , we are to extract the title from the top region of the first page .Given a PowerPoint document , we are to extract the title from the first slide .A title sometimes consists of a main title and one or two subtitles .We only consider extraction of the main title .As baselines for title extraction , we use that of always using the first lines as titles and that of always using the lines with largest font sizes as titles .Next , we define a ` specification ' for human judgments in title data annotation .The annotated data will be used in training and testing of the title extraction methods .Summary of the specification : The title of a document should be identified on the basis of common sense , if there is no difficulty in the identification .However , there are many cases in which the identification is not easy .There are some rules defined in the specification that guide identification for such cases .The rules include `` a title is usually in consecutive lines in the same format '' , `` a document can have no title '' , `` titles in images are not considered '' , `` a title should not contain words like ` draft ' ,` whitepaper ' , etc '' , `` if it is difficult to determine which is the title , select the one in the largest font size '' , and `` if it is still difficult to determine which is the title , select the first candidate '' .The specification covers all the cases we have encountered in data annotation .Figures 2 and 3 show examples of Office documents from which we conduct title extraction .In Figure 2 , ` Differences in Win32 API Implementations among Windows Operating Systems ' is the title of the Word document .` Microsoft Windows ' on the top of this page is a picture and thus is ignored .In Figure 3 , ` Building Competitive Advantages through an Agile Infrastructure ' is the title of the PowerPoint document .We have developed a tool for annotation of titles by human annotators .Figure 4 shows a snapshot of the tool .Title extraction based on machine learning consists of training and extraction .The same pre-processing step occurs before training and extraction .During pre-processing , from the top region of the first page of a Word document or the first slide of a PowerPoint document a number of units for processing are extracted .If a line lines are separated by ` return ' symbols only has a single format , then the line will become a unit .If a line has several parts and each of them has its own format , then each part will become a unit .Each unit will be treated as an instance in learning .A unit contains not only content information linguistic information but also formatting information .The input to pre-processing is a document and the output of pre-processing is a sequence of units instances .Figure 5 shows the units obtained from the document in Figure 2 .In learning , the input is sequences of units where each sequence corresponds to a document .We take labeled units labeled as title_begin , title_end , or other in the sequences as training data and construct models for identifying whether a unit is title_begin title_end , or other .We employ four types of models : Perceptron , Maximum Entropy ME , Perceptron Markov Model PMM , and Maximum Entropy Markov Model MEMM .In extraction , the input is a sequence of units from one document .We employ one type of model to identify whether a unit is title_begin , title_end , or other .We then extract units from the unit labeled with ` title_begin ' to the unit labeled with ` title_end ' .The result is the extracted title of the document .The unique characteristic of our approach is that we mainly utilize formatting information for title extraction .Our assumption is that although general documents vary in styles , their formats have certain patterns and we can learn and utilize the patterns for title extraction .This is in contrast to the work by Han et al. , in which only linguistic features are used for extraction from research papers .The four models actually can be considered in the same metadata extraction framework .That is why we apply them together to our current problem .Each input is a sequence of instances x1x2 ... xk together with a sequence of labels y1 y2 ... yk .xi and yi represents an instance and its label , respectively i = 1,2 , ... , k .Recall that an instance here represents a unit .A label represents title_begin , title_end , or other .Here , k is the number of units in a document .In learning , we train a model which can be generally denoted as a conditional probability distribution P Y1 ... Yk | X1 ... Xk where Xi and Yi denote random variables taking instance xi and label yi as values , respectively i = 1,2 , ... , k .We can make assumptions about the general model in order to make it simple enough for training .For example , we can assume that Y1 , ... , Yk are independent of each other given X 1 , ... , X k .Thus , we have In this way , we decompose the model into a number of classifiers .We train the classifiers locally using the labeled data .As the classifier , we employ the Perceptron or Maximum Entropy model .We can also assume that the first order Markov property holds for Y1 , ... , Yk given X 1 , ... , X k .Thus , we have Again , we obtain a number of classifiers .However , the classifiers are conditioned on the previous label .When we employ the Percepton or Maximum Entropy model as a classifier , the models become a Percepton Markov Model or Maximum Entropy Markov Model , respectively .That is to say , the two models are more precise .In extraction , given a new sequence of instances , we resort to one of the constructed models to assign a sequence of labels to the sequence of instances , i.e. , perform extraction .For Perceptron and ME , we assign labels locally and combine the results globally later using heuristics .Specifically , we first identify the most likely title_begin .Then we find the most likely title_end within three units after the title_begin .Finally , we extract as a title the units between the title_begin and the title_end .For PMM and MEMM , we employ the Viterbi algorithm to find the globally optimal label sequence .In this paper , for Perceptron , we actually employ an improved variant of it , called Perceptron with Uneven Margin 13 .This version of Perceptron can work well especially when the number of positive instances and the number of negative instances differ greatly , which is exactly the case in our problem .We also employ an improved version of Perceptron Markov Model in which the Perceptron model is the so-called Voted Perceptron 2 .In addition , in training , the parameters of the model are updated globally rather than locally .There are two types of features : format features and linguistic features .We mainly use the former .The features are used for both the title-begin and the title-end classifiers .If the font size of the unit is the largest in the document , then the first feature will be 1 , otherwise 0 .If the font size is the smallest in the document , then the fourth feature will be 1 , otherwise 0 .If the font size is above the average font size and not the largest in the document , then the second feature will be 1 , otherwise 0 .If the font size is below the average font size and not the smallest , the third feature will be 1 , otherwise 0 .It is necessary to conduct normalization on font sizes .For example , in one document the largest font size might be ` 12pt ' , while in another the smallest one might be ` 18pt ' .The following format features with respect to ` context ' play an important role in title extraction .The linguistic features are based on key words .There are more negative words than positive words .The above linguistic features are language dependent .create four intervals : 1 , 2 , 3 , 6 , 7 , 9 and 9 , \u221e and define one feature for each interval .If the number of words in a title falls into an interval , then the corresponding feature will be 1 ; otherwise 0 .We describe our method of document retrieval using extracted titles .Typically , in information retrieval a document is split into a number of fields including body , title , and anchor text .A ranking function in search can use different weights for different fields ofthe document .Also , titles are typically assigned high weights , indicating that they are important for document retrieval .As explained previously , our experiment has shown that a significant number of documents actually have incorrect titles in the file properties , and thus in addition of using them we use the extracted titles as one more field of the document .By doing this , we attempt to improve the overall precision .In this paper , we employ a modification of BM25 that allows field weighting 21 .As fields , we make use of body , title , extracted title and anchor .First , for each term in the query we count the term frequency in each field of the document ; each field frequency is then weighted according to the corresponding weight parameter :Similarly , we compute the document length as a weighted sum of lengths of each field .Average document length in the corpus becomes the average of all weighted document lengths .Third , a data set in Chinese was also downloaded from the internet .It includes 500 Word documents and 500 PowerPoint documents in Chinese .We manually labeled the titles of all the documents , on the basis of our specification .Not all the documents in the two data sets have titles .Table 1 shows the percentages of the documents having titles .We see that DotCom and DotGov have more PowerPoint documents with titles than MS. This might be because PowerPoint documents published on the internet are more formal than those on the intranet .as In our experiments we used k1 = 1 .8 , b = 0.75 .Weight for content was 1.0 , title was 10.0 , anchor was 10.0 , and extracted title 5.0 .", "conclusions": "In this paper , we have investigated the problem of automatically extracting titles from general documents .We have tried using a machine learning approach to address the problem .Previous work showed that the machine learning approach can work well for metadata extraction from research papers .In this paper , we showed that the approach can work for extraction from general documents as well .Our experimental results indicated that the machine learning approach can work significantly better than the baselines in title extraction from Office documents .Previous work on metadata extraction mainly used linguistic features in documents , while we mainly used formatting information .It appeared that using formatting information is a key for successfully conducting title extraction from general documents .We tried different machine learning models including Perceptron , Maximum Entropy , Maximum Entropy Markov Model , and Voted Perceptron .We found that the performance of the Perceptorn models was the best .We applied models constructed in one domain to another domain and applied models trained in one language to another language .We found that the accuracies did not drop substantially across different domains and across different languages , indicating that the models were generic .We also attempted to use the extracted titles in document retrieval .We observed a significant improvement in document ranking performance for search when using extracted title information .All the above investigations were not conducted in previous work , and through our investigations we verified the generality and the significance of the title extraction approach .", "related work": "Methods have been proposed for performing automatic metadata extraction from documents ; however , the main focus was on extraction from research papers .The proposed methods fall into two categories : the rule based approach and the machine learning based approach .Giuffrida et al. 9 , for instance , developed a rule-based system for automatically extracting metadata from research papers in Postscript .They used rules like `` titles are usually located on the upper portions of the first pages and they are usually in the largest font sizes '' .Liddy et al. 14 and Yilmazel el al. 23 performed metadata extraction from educational materials using rule-based natural language processing technologies .Mao et al. 16 also conducted automatic metadata extraction from research papers using rules on formatting information .The rule-based approach can achieve high performance .However , it also has disadvantages .It is less adaptive and robust when compared with the machine learning approach .Han et al. 10 , for instance , conducted metadata extraction with the machine learning approach .They viewed the problem as that of classifying the lines in a document into the categories of metadata and proposed using Support Vector Machines as the classifier .They mainly used linguistic information as features .They reported high extraction accuracy from research papers in terms of precision and recall .Metadata extraction can be viewed as an application of information extraction , in which given a sequence of instances , we identify a subsequence that represents information in which we are interested .Hidden Markov Model 6 , Maximum Entropy Model 1 , 4 , Maximum Entropy Markov Model 17 , Support Vector Machines 3 , Conditional Random Field 12 , and Voted Perceptron 2 are widely used information extraction models .Information extraction has been applied , for instance , to part-ofspeech tagging 20 , named entity recognition 25 and table extraction 19 .Title information is useful for document retrieval .In the system Citeseer , for instance , Giles et al. managed to extract titles from research papers and make use of the extracted titles in metadata search of papers 8 .In web search , the title fields i.e. , file properties and anchor texts of web pages HTML documents can be viewed as ` titles ' of the pages 5 .Many search engines seem to utilize them for web page retrieval 7 , 11 , 18 , 22 .Zhang et al. , found that web pages with well-defined metadata are more easily retrieved than those without well-defined metadata 24 .To the best of our knowledge , no research has been conducted on using extracted titles from general documents e.g. , Office documents for search of the documents ."}