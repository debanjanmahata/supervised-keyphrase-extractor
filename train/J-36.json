{"reader_keywords": ["game theory", "game-either full omniscient knowledge", "questionand-answer session", "socratic game", "priori probability distribution", "nash equilibrium", "constant-sum game", "unobservable-query model", "missing information", "auction", "arbitrary partial information", "strategic multiplayer environment", "observable-query model"], "reader_keywords_stem": ["game theori", "game-either full omnisci knowledg", "questionand-answer session", "socrat game", "priori probabl distribut", "nash equilibrium", "constant-sum game", "unobserv-queri model", "miss inform", "auction", "arbitrari partial inform", "strateg multiplay environ", "observ-queri model"], "introduction": "Late October 1960 .A smoky room .Democratic Party strategists huddle around a map .How should the Kennedy campaign allocate its remaining advertising budget ?Should it focus on , say , California or New York ?The Nixon campaign faces the same dilemma .Of course , neither campaign knows the effectiveness of its advertising in each state .Perhaps Californians are susceptible to Nixon 's advertising , but are unresponsive to Kennedy 's .In light of this uncertainty , the Kennedy campaign may conduct a survey , at some cost , to estimate the effectiveness of its advertising .Moreover , the larger and more expensive the survey , the more accurate it will be .Is the cost of a survey worth the information that it provides ?How should one balance the cost of acquiring more information against the risk of playing a game with higher uncertainty ?In this paper , we model situations of this type as Socratic games .As in traditional game theory , the players in a Socratic game choose actions to maximize their payoffs , but we model players with incomplete information who can make costly queries to reduce their uncertainty about the state of the world before they choose their actions .This approach contrasts with traditional game theory , in which players are usually modeled as having fixed , exogenously given information about the structure of the game and its payoffs .In traditional games of incomplete and imperfect information , there is information that the players do not have ; in Socratic games , unlike in these games , the players have a chance to acquire the missing information , at some cost .A number of related models have been explored by economists and computer scientists motivated by similar situations , often with a focus on mechanism design and auctions ; a sampling of this research includes the work of Larson and Sandholm 41 , 42 , 43 , 44 , Parkes 59 , Fong 22 , Compte and Jehiel 12 , Rezende 63 , Persico and Matthews 48 , 60 , Cr \u00b4 emer and Khalil 15 , Rasmusen 62 , and Bergemann and V \u00a8 alim \u00a8 aki 4 , 5 .The model of Bergemann and V \u00a8 alim \u00a8 aki is similar in many regards to the one that we explore here ; see Section 7 for some discussion .A Socratic game proceeds as follows .A real world is chosen randomly from a set of possible worlds according to a common prior distribution .Each player then selects an arbitrary query from a set of available costly queries and receives a corresponding piece of information about the real world .Finally each player selects an action and receives a payoff a function of the players ' selected actions and the identity of the real world less the cost of the query that he or she made .Compared to traditional game theory , the distinguishing feature of our model is the introduction of explicit costs to the players for learning arbitrary partial information about which of the many possible worlds is the real world .Our research was initially inspired by recent results in psychology on decision making , but it soon became clear that Socratic game theory is also a general tool for understanding the `` exploitation versus exploration '' tradeoff , well studied in machine learning , in a strategic multiplayer environment .This tension between the risk arising from uncertainty and the cost of acquiring information is ubiquitous in economics , political science , and beyond .Our results .We consider Socratic games under two models : an unobservable-query model where players learn only the response to their own queries and an observable-query model where players also learn which queries their opponents made .We give efficient algorithms to find Nash equilibria i.e. , tuples of strategies from which no player has unilateral incentive to deviate in broad classes of two-player Socratic games in both models .Our first result is an efficient algorithm to find Nash equilibria in unobservable-query Socratic games with constant-sum worlds , in which the sum of the players ' payoffs is independent of their actions .Our techniques also yield Nash equilibria in unobservable-query Socratic games with strategically zero-sum worlds .Strategically zero-sum games generalize constant-sum games by allowing the sum of the players ' payoffs to depend on individual players ' choices of strategy , but not on any interaction of their choices .Our second result is an efficient algorithm to find Nash equilibria in observable-query Socratic games with constant-sum worlds .Finally , we give an efficient algorithm to find correlated equilibria a weaker but increasingly well-studied solution concept for games 2 , 3 , 32 , 56 , 57 in observable-query Socratic games with strategically zero-sum worlds .Like all games , Socratic games can be viewed as a special case of extensive-form games , which represent games by trees in which internal nodes represent choices made by chance or by the players , and the leaves represent outcomes that correspond to a vector of payoffs to the players .Algorithmically , the generality of extensive-form games makes them difficult to solve efficiently , and the special cases that are known to be efficiently solvable do not include even simple Socratic games .Every complete-information classical game is a trivial Socratic game with a single possible world and a single trivial query , and efficiently finding Nash equilibria in classical games has been shown to be hard 10 , 11 , 13 , 16 , 17 , 27 , 54 , 55 .Therefore we would not expect to find a straightforward polynomial-time algorithm to compute Nash equilibria in general Socratic games .However , it is well known that Nash equilibria can be found efficiently via an LP for two-player constant-sum games 49 , 71 and strategically zero-sum games 51 .A Socratic game is itself a classical game , so one might hope that these results can be applied to Socratic games with constant-sum or strategically zero-sum worlds .We face two major obstacles in extending these classical results to Socratic games .First , a Socratic game with constant-sum worlds is not itself a constant-sum classical game rather , the resulting classical game is only strategically zero sum .Worse yet , a Socratic game with strategically zero-sum worlds is not itself classically strategically zero sum indeed , there are no known efficient algorithmic techniques to compute Nash equilibria in the resulting class of classical games .Exponential-time algorithms like Lemke/Howson , of course , can be used 45 .Thus even when it is easy to find Nash equilibria in each of the worlds of a Socratic game , we require new techniques to solve the Socratic game itself .Second , even when the Socratic game itself is strategically zero sum , the number of possible strategies available to each player is exponential in the natural representation of the game .As a result , the standard linear programs for computing equilibria have an exponential number of variables and an exponential number of constraints .For unobservable-query Socratic games with strategically zero-sum worlds , we address these obstacles by formulating a new LP that uses only polynomially many variables though still an exponential number of constraints and then use ellipsoid-based techniques to solve it .For observablequery Socratic games , we handle the exponentiality by decomposing the game into stages , solving the stages separately , and showing how to reassemble the solutions efficiently .To solve the stages , it is necessary to find Nash equilibria in Bayesian strategically zero-sum games , and we give an explicit polynomial-time algorithm to do so .", "title": "Playing Games in Many Possible Worlds", "author_keywords_stem": ["game theory", "information acquisition", "socratic game", "nash equilibrium", "correlate equilibrium", "algorithm"], "abstract": "In traditional game theory , players are typically endowed with exogenously given knowledge of the structure of the game either full omniscient knowledge or partial but fixed information .In real life , however , people are often unaware of the utility of taking a particular action until they perform research into its consequences .In this paper , we model this phenomenon .We imagine a player engaged in a questionand-answer session , asking questions both about his or her own preferences and about the state of reality ; thus we call this setting `` Socratic '' game theory .In a Socratic game , players begin with an a priori probability distribution over many possible worlds , with a different utility function for each world .Players can make queries , at some cost , to learn partial information about which of the possible worlds is the actual world , before choosing an action .We consider two query models : 1 an unobservable-query model , in which players learn only the response to their own queries , and 2 an observable-query model , in which players also learn which queries their opponents made .The results in this paper consider cases in which the underlying worlds of a two-player Socratic game are either constant-sum games or strategically zero-sum games , a class that generalizes constant-sum games to include all games in which the sum of payoffs depends linearly on the interaction between the players .When the underlying worlds are constant sum , we give polynomial-time algorithms to find Nash equilibria in both the observable and unobservable-query models .When the worlds are strategically zero sum , we give efficient algorithms to find Nash equilibria in unobservablequery Socratic games and correlated equilibria in observablequery Socratic games .", "id": "J-36", "combined_keywords_stem": ["game theori", "game-either full omnisci knowledg", "questionand-answer session", "socrat game", "priori probabl distribut", "nash equilibrium", "constant-sum game", "unobserv-queri model", "miss inform", "auction", "arbitrari partial inform", "strateg multiplay environ", "observ-queri model", "inform acquisit", "correl equilibrium", "algorithm"], "combined_keywords": ["game theory", "game-either full omniscient knowledge", "questionand-answer session", "socratic game", "priori probability distribution", "nash equilibrium", "constant-sum game", "unobservable-query model", "missing information", "auction", "arbitrary partial information", "strategic multiplayer environment", "observable-query model", "information acquisition", "correlate equilibrium", "algorithm"], "author_keywords": ["game theory", "information acquisition", "socratic game", "nash equilibrium", "correlate equilibrium", "algorithm"], "method": "In this section , we review background on game theory and formally introduce Socratic games .We present these models in the context of two-player games , but the multiplayer case is a natural extension .Throughout the paper , boldface variables will be used to denote a pair of variables e.g. , a = aI , aII .Let Pr x + \u03c0 denote the probability that a particular value x is drawn from the distribution \u03c0 , and let Ex \u223c \u03c0 g x denote the expectation of g x when x is drawn from \u03c0 .Consider two players , Player I and Player II , each of whom is attempting to maximize his or her utility or payoff .A two-player game is a pair A , u , where , for i E I , II ,We require that A and u be common knowledge .If each Player i chooses strategy ai E Ai , then the payoffs to Players I and II are uI a and uII a , respectively .A game is constant sum if , for all a E A , we have that uI a + uII a = c for some fixed c independent of a. Player i can also play a mixed strategy \u03b1i E Ai , where Ai denotes the space of probability measures over the set Ai .\u03b1I aI \u00b7 \u03b1II aII denotes the joint probability of the independent events that each Player i chooses action ai from the distribution \u03b1i .This generalization to mixed strategies is known as von Neumann/Morgenstern utility 70 , in which players are indifferent between a guaranteed payoff x and an expected payoff of x .A Nash equilibrium is a pair \u03b1 of mixed strategies so that neither player has an incentive to change his or her strategy unilaterally .Formally , the strategy pair \u03b1 is a Nash equilibrium if and only if both uI \u03b1I , \u03b1II = max\u03b1 ~ IEAI uI \u03b1 ~ I , \u03b1II and uII \u03b1I , \u03b1II = max\u03b1 ~ IIEAII uII \u03b1I , \u03b1II ; that is , the strategies \u03b1I and \u03b1II are mutual best responses .A correlated equilibrium is a distribution \u03c8 over A that obeys the following : if a \u2208 A is drawn randomly according to \u03c8 and Player i learns ai , then no Player i has incentive to deviate unilaterally from playing ai .A Nash equilibrium is a correlated equilibrium in which \u03c8 a = \u03b1I aI \u00b7 \u03b1II aII is a product distribution .Formally , in a correlated equilibrium , for every a \u2208 A we must have that aI is a best response to a randomly chosen \u02c6aII \u2208 AII drawn according to \u03c8 aI , \u02c6aII , and the analogous condition must hold for Player II .In this section , we formally define Socratic games .A Socratic game is a 7-tuple ~ A , W , ~ u , S , Q , p , \u03b4 ~ , where , fori \u2208 I , II :Initially , the world wreal is chosen according to the probability distribution p , but the identity of wreal remains unknown to the players .That is , it is as if the players are playing the game ~ A , uwreal ~ but do not know wreal .The players make queries q \u2208 Q , and Player i receives the signal qi wreal .We consider both observable queries and unobservable queries .When queries are observable , each player learns which query was made by the other player , and the results of his or her own query that is , each Player i learns qI , qII , and qi wreal .For unobservable queries , Player i learns only qi and qi wreal .After learning the results of the queries , the players select strategies a \u2208 A and receive as payoffs a \u2212 \u03b4i qi .In the Socratic game , a pure strategy for Player i consists of a query qi \u2208 Qi and a response function mapping any result of the query qi to a strategy ai \u2208 Ai to play .A player 's state of knowledge after a query is a point in R : = Q \u00d7 S or Ri : = Qi \u00d7 S for observable or unobservable queries , respectively .Thus Player i 's response function maps R or Ri to Ai .Note that the number of pure strategies is exponential , as there are exponentially many response functions .A mixed strategy involves both randomly choosing a query qi \u2208 Qi and randomly choosing an action ai \u2208 Ai in response to the results of the query .Formally , we will consider a mixed-strategy-function profile f = ~ fquery , fresp ~ to have two parts :probability that Player i makes query qi .i that maps R or Ri to a probability distribution over actions .Player i chooses an action ai \u2208 Ai according to the probability distribution ffresp i q , qi w for observable queries , and according to resp i qi , qi w for unobservable queries .With unobservable queries , for example , the probability that Player I plays action aI conditioned on making query qI in world w is given by Pr aI \u2190 fresp I qI , qI w .Mixed strategies are typically defined as probability distributions over the pure strategies , but here we represent a mixed strategy by a pair ~ f query , fresp ~ , which is commonly referred to as a `` behavioral '' strategy in the game-theory literature .As in any game with perfect recall , one can easily map a mixture of pure strategies to a behavioral strategy f = ~ fquery , fresp ~ that induces the same probability of making a particular query qi or playing a particular action after making a query qi in a particular world .Thus it suffices to consider only this representation of mixed strategies .For a strategy-function profile f for observable queries , the expected payoff to Player i is given byThe payoffs for unobservable queries are analogous , with fresp j qj , qj w in place of fresp j q , qj w .We can view a Socratic game G with constant-sum worlds as an exponentially large classical game , with pure strategies `` make query qi and respond according to fi . ''However , this classical game is not constant sum .The sum of the players ' payoffs varies depending upon their strategies , because different queries incur different costs .However , this game still has significant structure : the sum of payoffs varies only because of varying query costs .Thus the sum of payoffs does depend on players ' choice of strategies , but not on the interaction of their choices i.e. , for fixed functions gI and gII , we have uI q , f + uII q , f = gI qI , fI + gII qII , fII for all strategies ~ q , f ~ .Such games are called strategically zero sum and were introduced by Moulin and Vial 51 , who describe a notion of strategic equivalence and define strategically zero-sum games as those strategically equivalent to zero-sum games .It is interesting to note that two Socratic games with the same queries and strategically equivalent worlds are not necessarily strategically equivalent .A game ~ A , u ~ is strategically zero sum if there exist labels ~ i , ai for every Player i and every pure strategy ai \u2208 Ai uwreal isuch that , for all mixed-strategy profiles \u03b1 , we have that the sum of the utilities satisfiesNote that any constant-sum game is strategically zero sum as well .It is not immediately obvious that one can efficiently decide if a given game is strategically zero sum .For completeness , we give a characterization of classical strategically zero-sum games in terms of the rank of a simple matrix derived from the game 's payoffs , allowing us to efficiently decide if a given game is strategically zero sum and , if it is , to compute the labels ~ i , ai .THEOREM 3.1 .Consider a game G = ~ A , u ~ with Ai = a1i , ... , ani i .Let MG be the nI-by-nII matrix whose ~ i , j ~ th entry MG i , j satisfies log2 MG i , j = uI aiI , ajII + uII aiI , aj II .Then the following are equivalent :We begin with Socratic games with unobservable queries , where a player 's choice of query is not revealed to her opponent .We give an efficient algorithm to solve unobservablequery Socratic games with strategically zero-sum worlds .Our algorithm is based upon the LP shown in Figure 1 , whose feasible points are Nash equilibria for the game .The LP has polynomially many variables but exponentially many constraints .We give an efficient separation oracle for the LP , implying that the ellipsoid method 28 , 38 yields an efficient algorithm .This approach extends the techniques of Koller and Megiddo 39 see also 40 to solve constant-sum games represented in extensive form .Recall that their result does not directly apply in our case ; even a Socratic game with constant-sum worlds is not a constant-sum classical game .PROOF SKETCH .We begin with a description of the correspondence between feasible points for the LP and Nash equilibria for G. First , suppose that strategy profile f = ~ f query , fresp ~ forms a Nash equilibrium for G .Then the following setting for the LP variables is feasible :We omit the straightforward calculations that verify feasibility .Next , suppose ~ xiai , qi , w , yiqi , \u03c1i ~ is feasible for the LP .Let f be the strategy-function profile defined as ffquery : qi ~ \u2192 yi i qi resp i qi , qi w : ai ~ \u2192 xiai , qi , w/yi qi .Verifying that this strategy profile is a Nash equilibrium requires checking that fresp i qi , qi w is a well-defined function from constraint VI , that fquery i and fresp i qi , qi w are probability distributions from constraints III and IV , and that each player is playing a best response to his or her opponent 's strategy from constraints I and II .Finally , from constraints I and II , the expected payoff to Player i is at most \u03c1i .Because the right-hand side of constraint VII is equal to the expected sum of the payoffs from f and is at most \u03c1I + \u03c1II , the payoffs are correct and imply the lemma .We now give an efficient separation oracle for the LP in Figure 1 , thus allowing the ellipsoid method to solve the LP in polynomial time .Recall that a separation oracle is a function that , given a setting for the variables in the LP , either returns `` feasible '' or returns a particular constraint of the LP that is violated by that setting of the variables .An efficient , correct separation oracle allows us to solve the LP efficiently via the ellipsoid method .LEMMA 4.2 .There exists a separation oracle for the LP in Figure 1 that is correct and runs in polynomial time .PROOF .Here is a description of the separation oracle SP .On input ~ xiai , qi , w , yiqi , \u03c1i ~ :More specifically , given fII and the result qI wreal of the query qI , it is straightforward to compute the probability that , conditioned on the fact that the result of query qI is qI w , the world is w and Player II will play action aII \u2208 AII .Therefore , for each query qI and response qI w , Player I can compute the expected utility of each pure response aI to the induced mixed strategy over AII for Player II .Player I can then select the aI maximizing this expected payoff .\u02c6fI be the response function such that \u02c6fI qI , qI w = \u02c6fII .`` Player i does not prefer ` make query qi , then play according to the function fi ' '' :worlds .The input is a Socratic game A , W , ~ u , S , Q , p , \u03b4 so that world w is strategically zero sum with labels ~ i , ai , w .Player i makes query qi E Qi with probability yi qi and , when the actual world is w E W , makes query qi and plays action ai with probability xiai , qi , w .The expected payoff to Player i is given by \u03c1i .I be the expected payoff to Player I using the strategy `` make query qI and play response function \u02c6fI '' if Player II plays according to fII .Let \u02c6\u03c1I = maxqIEQq \u02c6\u03c1qII and let \u02c6qI = arg maxqIEQq \u02c6\u03c1qI I .Similarly , define \u02c6\u03c1qII II , \u02c6\u03c1II , and \u02c6qII .\u02c6fi and \u02c6qi defined in Step 3 , return constraint I-\u02c6qI-\u02c6fI or II-\u02c6qII-\u02c6fII if either is violated .If both are satisfied , then return `` feasible . ''We first note that the separation oracle runs in polynomial time and then prove its correctness .Steps 1 and 4 are clearly polynomial .For Step 2 , we have described how to compute the relevant response functions by examining every action of Player I , every world , every query , and every action of Player II .There are only polynomially many queries , worlds , query results , and pure actions , so the running time of Steps 2 and 3 is thus polynomial .We now sketch the proof that the separation oracle works correctly .The main challenge is to show that if any constraint I-qI-fI is violated then I-\u02c6qI-\u02c6fI is violated in Step 4 .First , we observe that , by construction , the function \u02c6fI computed in Step 3 must be a best response to Player II playing fII , no matter what query Player I makes .Therefore the \u02c6fI '' must be a best response to Player II playing fII , by definition of \u02c6qI .The right-hand side of each constraint I-qI-fI is equal to the expected payoff that Player I receives when playing the pure strategy `` make query qI and then play response function fI '' against Player II 's strategy of fII .Therefore , because the pure strategy `` make query \u02c6qI and then play response function \u02c6fI '' is a best response to Player II playing fII , the right-hand side of constraint I-\u02c6qI \u02c6fI is at least as large as the right hand side of any constraint I-\u02c6qI-fi .Therefore , if any constraint I-qI-fI is violated , constraint I-\u02c6qI \u02c6fI is also violated .An analogous argument holds for Player II .These lemmas and the well-known fact that Nash equilibria always exist 52 imply the following theorem :In this section , we give efficient algorithms to find 1 a Nash equilibrium for observable-query Socratic games with constant-sum worlds and 2 a correlated equilibrium in the broader class of Socratic games with strategically zero-sum worlds .Recall that a Socratic game G = A , W , ~ u , S , Q , p , \u03b4 with observable queries proceeds in two stages : Stage 1 : The players simultaneously choose queries q E Q. Player i receives as output qI , qII , and qi wreal .Stage 2 : The players simultaneously choose strategies a E A .The payoff to Player i is uwrealUsing backward induction , we first solve Stage 2 and then proceed to the Stage-1 game .For a query q E Q , we would like to analyze the Stage-2 `` game '' \u02c6GQ resulting from the players making queries q in Stage 1 .Technically , however , \u02c6GQ is not actually a game , because at the beginning of Stage 2 the players have different information about the world : Player I knows qI wreal , and 4 .For the strategy `` make query \u02c6qI , then play response functionPlayer II knows q , , wreal .Fortunately , the situation in which players have asymmetric private knowledge has been well studied in the game-theory literature .A Bayesian game is a quadruple ~ A , T , r , u ~ , where :Initially , a type t is drawn randomly from T according to the distribution r. Player i learns his type ti , but does not learn any other player 's type .Player i then plays a mixed strategy \u03b1i \u2208 Ai that is , a probability distribution over Ai and receives payoff ui a , t .A strategy function is a function hi : Ti \u2192 Ai ; Player i plays the mixed strategy hi ti \u2208 Ai when her type is ti .A strategy-function profile h is a Bayesian Nash equilibrium if and only if no Player i has unilateral incentive to deviate from hi if the other players play according to h. For a two-player Bayesian game , if a = h t , then the profile h is a Bayesian Nash equilibrium exactly when the following condition and its analogue for Player II hold : Et r u , a , t = maxh , , Et r u , ~ h ~ , t , , \u03b1 , , ~ , t .These conditions hold if and only if , for all ti \u2208 Ti occurring with positive probability , Player i 's expected utility conditioned on his type being ti is maximized by hi ti .A Bayesian game is constant sum if for all a \u2208 A and all t \u2208 T , we have u , a , t + u , , a , t = ct , for some constant ct independent of a .A Bayesian game is strategically zero sum if the classical game ~ A , u \u00b7 , t ~ is strategically zero sum for every t \u2208 T. Whether a Bayesian game is strategically zero sum can be determined as in Theorem 3.1 .For further discussion of Bayesian games , see 25 , 31 .We now formally define the Stage-2 `` game '' as a Bayesian game .Given a Socratic game G = ~ A , W , ~ u , S , Q , p , 6 ~ and a query profile q \u2208 Q , we define the Stage-2 Bayesian game Gstage2 q : = ~ A , Tq , pstage2 q , ustage2 q ~ , where :We now define the Stage-1 game in terms of the payoffs for the Stage-2 games .Fix any algorithm alg that finds a Bayesian Nash equilibrium hq , alg : = alg Gstage2 q for each Stage-2 game .Define valuealg i Gstage2 q to be the expected payoff received by Player i in the Bayesian game Gstage2 q if each player plays according to hq , alg , that is ,I.e. , players choose queries q and receive payoffs corresponding to valuealg Gstage2 q , less query costs .LEMMA 5.1 .Consider an observable-query Socratic game G = ~ A , W , ~ u , S , Q , p , 6 ~ .Let Gstage2 q be the Stage-2 games for all q \u2208 Q , let alg be an algorithm finding a Bayesian Nash equilibrium in each Gstage2 q , and let Galg stage1 be the Stage-1 game .Let a be a Nash equilibrium for Galg stage1 , and let hq , alg : = alg Gstage2 q be a Bayesian Nash equilibrium for each Gstage2 q .Then the following strategy profile is a Nash equilibrium for G :We now find equilibria in the stage games for Socratic games with constant or strategically zero-sum worlds .We first show that the stage games are well structured in this setting :stage1 is strategically zero sum for every algorithm alg , and every Stage-2 game Gstage2 q is Bayesian constant sum .If the worlds of G are strategically zero sum , then every Gstage2 q is Bayesian strategically zero sum .We now show that we can efficiently compute equilibria for these well-structured stage games .THEOREM 5.3 .There exists a polynomial-time algorithm BNE finding Bayesian Nash equilibria in strategically zerosum Bayesian and thus classical strategically zero-sum or Bayesian constant-sum two-player games .PROOF SKETCH .Let G = ~ A , T , r , u ~ be a strategically zero-sum Bayesian game .Define an unobservable-query Socratic game G * with one possible world for each t \u2208 T , one available zero-cost query qi for each Player i so that qi reveals ti , and all else as in G. Bayesian Nash equilibria in G correspond directly to Nash equilibria in G * , and the worlds of G * are strategically zero sum .Thus by Theorem 4.3 we can compute Nash equilibria for G * , and thus we can compute Bayesian Nash equilibria for G. LP 's for zero-sum two-player Bayesian games have been previously developed and studied 61 .THEOREM 5.4 .We can compute a Nash equilibrium for an arbitrary two-player observable-query Socratic game G = ~ A , W , ~ u , S , Q , p , 6 ~ with constant-sum worlds in polynomial time .PROOF .Because each world of G is constant sum , Lemma 5.2 implies that the induced Stage-2 games Gstage2 q are all Bayesian constant sum .Thus we can use algorithm BNE to compute a Bayesian Nash equilibrium hq , BNE : = BNE Gstage2 q for each q \u2208 Q , by Theorem 5.3 .Furthermore , again by Lemma 5.2 , the induced Stage-1 gamestage1 is classical strategically zero sum .Therefore we can again use algorithm BNE to compute a Nash equilibrium a : = BNE GBNE stage1 , again by Theorem 5.3 .Therefore , by Lemma 5.1 , we can assemble a and the hq , BNE 's into a Nash equilibrium for the Socratic game G.We would like to extend our results on observable-query Socratic games to Socratic games with strategically zerosum worlds .While we can still find Nash equilibria in the Stage-2 games , the resulting Stage-1 game is not in general strategically zero sum .Thus , finding Nash equilibria in observable-query Socratic games with strategically zerosum worlds seems to require substantially new techniques .However , our techniques for decomposing observable-query Socratic games do allow us to find correlated equilibria in this case .LEMMA 5.5 .Consider an observable-query Socratic game G = A , W , ~ u , S , Q , p , \u03b4 .Let alg be an arbitrary algorithm that finds a Bayesian Nash equilibrium in each of the derived Stage-2 games Gstage2 q , and let Galg stage1 be the derived Stagestage1 , and let hq , alg : = alg Gstage2 q be a Bayesian Nash equilibrium for each Gstage2 q .Then the following distribution over pure strategies is a correlated equilibrium for G :Thus to find a correlated equilibrium in an observable-query Socratic game with strategically zero-sum worlds , we need only algorithm BNE from Theorem 5.3 along with an efficient algorithm for finding a correlated equilibrium in a general game .Such an algorithm exists the definition of correlated equilibria can be directly translated into an LP 3 , and therefore we have the following theorem : THEOREM 5.6 .We can provide both efficient oracle access and efficient sampling access to a correlated equilibrium for any observable-query two-player Socratic game with strategically zero-sum worlds .Because the support of the correlated equilibrium may be exponentially large , providing oracle and sampling access is the natural way to represent the correlated equilibrium .By Lemma 5.5 , we can also compute correlated equilibria in any observable-query Socratic game for which Nash equilibria are computable in the induced Gstage2 q games e.g. , when Gstage2 q is of constant size .Another potentially interesting model of queries in Socratic games is what one might call public queries , in which both the choice and outcome of a player 's query is observable by all players in the game .This model might be most appropriate in the presence of corporate espionage or media leaks , or in a setting in which the queries and thus their results are done in plain view .The techniques that we have developed in this section also yield exactly the same results as for observable queries .The proof is actually simpler : with public queries , the players ' payoffs are common knowledge when Stage 2 begins , and thus Stage 2 really is a complete-information game .There may still be uncertainty about the real world , but all players use the observed signals to infer exactly the same set of possible worlds in which wreal may lie ; thus they are playing a complete-information game against each other .Thus we have the same results as in Theorems 5.4 and 5.6 more simply , by solving Stage 2 using a non-Bayesian Nash-equilibrium finder and solving Stage 1 as before .Our results for observable queries are weaker than for unobservable : in Socratic games with worlds that are strategically zero sum but not constant sum , we find only a correlated equilibrium in the observable case , whereas we find a Nash equilibrium in the unobservable case .We might hope to extend our unobservable-query techniques to observable queries , but there is no obvious way to do so .The fundamental obstacle is that the LP 's payoff constraint becomes nonlinear if there is any dependence on the probability that the other player made a particular query .This dependence arises with observable queries , suggesting that observable Socratic games with strategically zero-sum worlds may be harder to solve .", "conclusions": "Efficiently finding Nash equilibria in Socratic games with non-strategically zero-sum worlds is probably difficult because the existence of such an algorithm for classical games has been shown to be unlikely 10 , 11 , 13 , 16 , 17 , 27 , 54 , 55 .There has , however , been some algorithmic success in finding Nash equilibria in restricted classical settings e.g. , 21 , 46 , 47 , 57 ; we might hope to extend our results to analogous Socratic games .An efficient algorithm to find correlated equilibria in general Socratic games seems more attainable .Suppose the players receive recommended queries and responses .The difficulty is that when a player considers a deviation from his recommended query , he already knows his recommended response in each of the Stage-2 games .In a correlated equilibrium , a player 's expected payoff generally depends on his recommended strategy , and thus a player may deviate in Stage 1 so as to land in a Stage-2 game where he has been given a `` better than average '' recommended response .Socratic games are `` succinct games of superpolynomial type , '' so Papadimitriou 's results 56 do not imply correlated equilibria for them .Socratic games can be extended to allow players to make adaptive queries , choosing subsequent queries based on previous results .Our techniques carry over to O 1 rounds of unobservable queries , but it would be interesting to compute equilibria in Socratic games with adaptive observable queries or with \u03c9 1 rounds of unobservable queries .Special cases of adaptive Socratic games are closely related to single-agent problems like minimum latency 1 , 7 , 26 , determining strategies for using priced information 9 , 29 , 37 , and an online version of minimum test cover 18 , 50 .Although there are important technical distinctions between adaptive Socratic games and these problems , approximation techniques from this literature may apply to Socratic games .The question of approximation raises interesting questions even in non-adaptive Socratic games .An e-approximate Nash equilibrium is a strategy profile \u03b1 so that no player can increase her payoff by an additive e by deviating from \u03b1 .Finding approximate Nash equilibria in both adaptive and non-adaptive Socratic games is an interesting direction to pursue .Another natural extension is the model where query results are stochastic .In this paper , we model a query as deterministically partitioning the possible worlds into subsets that the query can not distinguish .However , one could instead model a query as probabilistically mapping the set of possible worlds into the set of signals .With this modification , our unobservable-query model becomes equivalent to the model of Bergemann and V \u00a8 alim \u00a8 aki 4 , 5 , in which the result of a query is a posterior distribution over the worlds .Our techniques allow us to compute equilibria in such a `` stochastic-query '' model provided that each query is represented as a table that , for each world/signal pair , lists the probability that the query outputs that signal in that world .It is also interesting to consider settings in which the game 's queries are specified by a compact representation of the relevant probability distributions .For example , one might consider a setting in which the algorithm has only a sampling oracle for the posterior distributions envisioned by Bergemann and V \u00a8 alim \u00a8 aki .Efficiently finding equilibria in such settings remains an open problem .Another interesting setting for Socratic games is when the set Q of available queries is given by Q = P \u0393 i.e. , each player chooses to make a set q E P \u0393 of queries from a specified groundset \u0393 of queries .Here we take the query cost to be a linear function , so that \u03b4 q = P\u03b3 \u2208 q \u03b4 y .Natural groundsets include comparison queries `` if my opponent is playing strategy aII , would I prefer to play aI or \u02c6aI ? '', strategy queries `` what is my vector of payoffs if I play strategy aI ? '', and world-identity queries `` is the world w E W the real world ? ''.When one can infer a polynomial bound on the number of queries made by a rational player , then our results yield efficient solutions .For example , we can efficiently solve games in which every groundset element y E \u0393 has \u03b4 y = \u03a9 M \u2212 M , where M and M denote the maximum and minimum payoffs to any player in any world .Conversely , it is NP-hard to compute a Nash equilibrium for such a game when every \u03b4 y < 1 / | W | 2 , even when the worlds are constant sum and Player II has only a single available strategy .Thus even computing a best response for Player I is hard .This proof proceeds by reduction from set cover ; intuitively , for sufficiently low query costs , Player I must fully identify the actual world through his queries .Selecting a minimum-sized set of these queries is hard .Computing Player I 's best response can be viewed as maximizing a submodular function , and thus a best response can be 1 \u2212 1/e \u2248 0.63 approximated greedily 14 .An interesting open question is whether this approximate best-response calculation can be leveraged to find an approximate Nash equilibrium .", "related work": "Our work was initially motivated by research in the social sciences indicating that real people seem irrationally paralyzed when they are presented with additional options .In this section , we briefly review some of these social-science experiments and then discuss technical approaches related to Socratic game theory .Prima facie , a rational agent 's happiness given an added option can only increase .However , recent research has found that more choices tend to decrease happiness : for example , students choosing among extra-credit options are more likely to do extra credit if given a small subset of the choices and , moreover , produce higher-quality work 35 .See also 19 .The psychology literature explores a number of explanations : people may miscalculate their opportunity cost by comparing their choice to a `` component-wise maximum '' of all other options instead of the single best alternative 65 , a new option may draw undue attention to aspects of the other options 67 , and so on .The present work explores an economic explanation of this phenomenon : information is not free .When there are more options , a decision-maker must spend more time to achieve a satisfactory outcome .See , e.g. , the work of Skyrms 68 for a philosophical perspective on the role of deliberation in strategic situations .Finally , we note the connection between Socratic games and modal logic 34 , a formalism for the logic of possibility and necessity .The observation that human players typically do not play `` rational '' strategies has inspired some attempts to model `` partially '' rational players .The typical model of this socalled bounded rationality 36 , 64 , 66 is to postulate bounds on computational power in computing the consequences of a strategy .The work on bounded rationality 23 , 24 , 53 , 58 differs from the models that we consider here in that instead of putting hard limitations on the computational power of the agents , we instead restrict their a priori knowledge of the state of the world , requiring them to spend time and therefore money/utility to learn about it .Partially observable stochastic games POSGs are a general framework used in AI to model situations of multi-agent planning in an evolving , unknown environment , but the generality of POSGs seems to make them very difficult 6 .Recent work has been done in developing algorithms for restricted classes of POSGs , most notably classes of cooperative POSGs e.g. , 20 , 30 which are very different from the competitive strategically zero-sum games we address in this paper .The fundamental question in Socratic games is deciding on the comparative value of making a more costly but more informative query , or concluding the data-gathering phase and picking the best option , given current information .This tradeoff has been explored in a variety of other contexts ; a sampling of these contexts includes aggregating results \u03c8 q , f : = 0 q Y Y i \u2208 I , II s \u2208 Sfrom delay-prone information sources 8 , doing approximate reasoning in intelligent systems 72 , deciding when to take the current best guess of disease diagnosis from a beliefpropagation network and when to let it continue inference 33 , among many others .This issue can also be viewed as another perspective on the general question of exploration versus exploitation that arises often in AI : when is it better to actively seek additional information instead of exploiting the knowledge one already has ?See , e.g. , 69 .Most of this work differs significantly from our own in that it considers single-agent planning as opposed to the game-theoretic setting .A notable exception is the work of Larson and Sandholm 41 , 42 , 43 , 44 on mechanism design for interacting agents whose computation is costly and limited .They present a model in which players must solve a computationally intractable valuation problem , using costly computation to learn some hidden parameters , and results for auctions and bargaining games in this model ."}