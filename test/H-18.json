{"abstract": "Topic detection and tracking 26 and topic segmentation 15 play an important role in capturing the local and sequential information of documents .Previous work in this area usually focuses on single documents , although similar multiple documents are available in many domains .In this paper , we introduce a novel unsupervised method for shared topic detection and topic segmentation of multiple similar documents based on mutual information MI and weighted mutual information WMI that is a combination of MI and term weights .The basic idea is that the optimal segmentation maximizes MI or WMI .Our approach can detect shared topics among documents .It can find the optimal boundaries in a document , and align segments among documents at the same time .It also can handle single-document segmentation as a special case of the multi-document segmentation and alignment .Our methods can identify and strengthen cue terms that can be used for segmentation and partially remove stop words by using term weights based on entropy learned from multiple documents .Our experimental results show that our algorithm works well for the tasks of single-document segmentation , shared topic detection , and multi-document segmentation .Utilizing information from multiple documents can tremendously improve the performance of topic segmentation , and using WMI is even better than using MI for the multi-document segmentation .", "id": "H-18", "conclusions": "We proposed a novel method for multi-document topic segmentation and alignment based on weighted mutual information , which can also handle single-document cases .We used dynamic programming to optimize our algorithm .Our approach outperforms all the previous methods on singledocument cases .Moreover , we also showed that doing segmentation among multiple documents can improve the performance tremendously .Our results also illustrated that using weighted mutual information can utilize the information of multiple documents to reach a better performance .We only tested our method on limited data sets .More data sets especially complicated ones should be tested .More previous methods should be compared with .Moreover , natural segmentations like paragraphs are hints that can be used to find the optimal boundaries .Supervised learning also can be considered .", "reader_keywords_stem": ["topic detect", "track", "topic segment", "local and sequenti inform of document", "singl document", "multipl document", "wmu", "share topic", "optim boundari", "singl-document segment", "multi-document segment", "cue term", "stop word", "term weight", "perform of topic segment", "topic segment perform"], "combined_keywords_stem": ["topic detect", "track", "topic segment", "local and sequenti inform of document", "singl document", "multipl document", "wmu", "share topic", "optim boundari", "singl-document segment", "multi-document segment", "cue term", "stop word", "term weight", "perform of topic segment", "topic segment perform", "share topic detect", "topic align", "mutual inform"], "introduction": "Many researchers have worked on topic detection and tracking TDT 26 and topic segmentation during the past decade .Topic segmentation intends to identify the boundaries in a document with the goal to capture the latent topical structure .Topic segmentation tasks usually fall into two categories 15 : text stream segmentation where topic transition is identified , and coherent document segmentation in which documents are split into sub-topics .The former category has applications in automatic speech recognition , while the latter one has more applications such as partial-text query of long documents in information retrieval , text summary , and quality measurement of multiple documents .Previous research in connection with TDT falls into the former category , targeted on topic tracking of broadcast speech data and newswire text , while the latter category has not been studied very well .Traditional approaches perform topic segmentation on documents one at a time 15 , 25 , 6 .Most of them perform badly in subtle tasks like coherent document segmentation 15 .Often , end-users seek documents that have the similar content .Search engines , like , Google , provide links to obtain similar pages .At a finer granularity , users may actually be looking to obtain sections of a document similar to a particular section that presumably discusses a topic of the users interest .Thus , the extension of topic segmentation from single documents to identifying similar segments from multiple similar documents with the same topic is a natural and necessary direction , and multi-document topic segmentation is expected to have a better performance since more information is utilized .Traditional approaches using similarity measurement based on term frequency generally have the same assumption that similar vocabulary tends to be in a coherent topic segment 15 , 25 , 6 .However , they usually suffer the issue of identifying stop words .For example , additional document-dependent stop words are removed together with the generic stop words in 15 .There are two reasons that we do not remove stopwords directly .First , identifying stop words is another issue 12 that requires estimation in each domain .Removing common stop words may result in the loss of useful information in a specific domain .Second , even though stop words can be identified , hard classification of stop words and nonstop words can not represent the gradually changing amount of information content of each word .We employ a soft classification using term weights .In this paper , we view the problem of topic segmentation as an optimization issue using information theoretic techniques to find the optimal boundaries of a document given the number of text segments so as to minimize the loss of mutual information MI or a weighted mutual information WMI after segmentation and alignment .This is equal to maximizing the MI or WMI .The MI focuses on measuring the difference among segments whereas previous research focused on finding the similarity e.g. cosine distance of segments 15 , 25 , 6 .Topic alignment of multiple similar documents can be achieved by clustering sentences on the same topic into the same cluster .Single-document topic segmentation is just a special case of the multi-document topic segmentation and alignment problem .Terms can be co-clustered as in 10 at the same time , given the number of clusters , but our experimental results show that this method results in a worse segmentation see Tables 1 , 4 , and 6 .Usually , human readers can identify topic transition based on cue words , and can ignore stop words .Inspired by this , we give each term or term cluster a weight based on entropy among different documents and different segments of documents .Not only can this approach increase the contribution of cue words , but it can also decrease the effect of common stop words , noisy word , and document-dependent stop words .These words are common in a document .Many methods based on sentence similarity require that these words are removed before topic segmentation can be performed 15 .Our results in Figure 3 show that term weights are useful for multi-document topic segmentation and alignment .The major contribution of this paper is that it introduces a novel method for topic segmentation using MI and shows that this method performs better than previously used criteria .Also , we have addressed the problem of topic segmentation and alignment across multiple documents , whereas most existing research focused on segmentation of single documents .Multi-document segmentation and alignment can utilize information from similar documents and improves the performance of topic segmentation greatly .Obviously , our approach can handle single documents as a special case when multiple documents are unavailable .It can detect shared topics among documents to judge if they are multiple documents on the same topic .We also introduce the new criterion of WMI based on term weights learned from multiple similar documents , which can improve performance of topic segmentation further .We propose an iterative greedy algorithm based on dynamic programming and show that it works well in practice .Some of our prior work is in 24 .The rest of this paper is organized as follows : In Section 2 , we review related work .Section 3 contains a formulation of the problem of topic segmentation and alignment of multiple documents with term co-clustering , a review of the criterion of MI for clustering , and finally an introduction to WMI .In Section 4 , we first propose the iterative greedy algorithm of topic segmentation and alignment with term co-clustering , and then describe how the algorithm can be optimized by using dynamic programming .In Section 5 , experiments about single-document segmentation , shared topic detection , and multi-document segmentation are described , and results are presented and discussed to evaluate the performance of our algorithm .Conclusions and some future directions of the research work are discussed in Section 6 .", "title": "Topic Segmentation with Shared Topic Detection and Alignment of Multiple Documents", "method": "Our goal is to segment documents and align the segments across documents Figure 1 .Let T be the set of terms t1 , t2 , ... , tl , which appear in the unlabelled set of documents D = d1 , d2 , ... , dm .Let Sd be the set of sentences for document d \u2208 D , i.e. s1 , s2 , ... , snd .We have a 3D matrix of term frequency , in which the three dimensions are random variables of D , Sd , and T. Sd actually is a randomvector including a random variable for each d \u2208 D .The term frequency can be used to estimate the joint probability distribution P D , Sd , T , which is p t , d , s = T t , d , s / ND , where T t , d , s is the number of t in d 's sentence s and ND is the total number of terms in D. S '' represents the set of segments `` s1 , s `` 2 , ... , `` sp after segmentation and alignment among multiple documents , where the number of segments | `` S | = p .A segment `` si of document d is a sequence of adjacent sentences in d .Since for different documents si may discuss different sub-topics , our goal is to cluster adjacent sentences in each document into segments , and align similar segments among documents , so that for different documents `` si is about the same sub-topic .The goal is to find the optimal topic segmentation and alignment mappingand Alid `` s ~ i : `` s ~ 1 , `` s ~ 2 , ... , `` s ~ p \u2192 `` s1 , `` s2 , ... , `` sp , for all d \u2208 D , where `` si is ith segment with the constraint that only adjacent sentences can be mapped to the same segment , i.e. for d , si , si +1 , ... , sj \u2192 `` s ~ q , where q \u2208 1 , ... , p , where p is the segment number , and if i > j , then for d , `` sq is missing .After segmentation and alignment , random vector Sd becomes an aligned random variable `` S. Thus , P D , Sd , T becomes P D , `` S , T .Term co-clustering is a technique that has been employed 10 to improve the accuracy of document clustering .We evaluate the effect of it for topic segmentation .A term t is mapped to exactly one term cluster .Term co-clustering involves simultaneously finding the optimal term clustering mapping Clu t : t1 , t2 , ... , tl \u2192 `` t1 , `` t2 , ... , `` tk , where k \u2264 l , l is the total number of words in all the documents , and k is the number of clusters .We now describe a novel algorithm which can handle singledocument segmentation , shared topic detection , and multidocument segmentation and alignment based on MI or WMI .MI I X ; Y is a quantity to measure the amount of information which is contained in two or more random variables 8 , 10 .For the case of two random variables , we haveObviously , when random variables X and Y are independent , I X ; Y = 0 .Thus , intuitively , the value of MI depends on how random variables are dependent on each other .The optimal co-clustering is the mapping Clux : X \u2192 X '' and Cluy : Y \u2192 Y '' that minimizes the loss : I X ; Y \u2212 I `` X ; Y '' , which is equal to maximizing I `` X ; Y '' .This is the criterion of MI for clustering .In the case of topic segmentation , the two random variables are the term variable T and the segment variable S , and each sample is an occurrence of a term T = t in a particular segment S = s. I T ; S is used to measure how dependent T and S are .However , I T ; S can not be computed for documents before segmentation , since we do not have a set of S due to the fact that sentences of Document d , si \u2208 Sd , is not aligned with other documents .Thus , instead of minimizing the loss of MI , we can maximize MI after topicwhere p `` t , `` s are estimated by the term frequency tf of Term Cluster t '' and Segment s '' in the training set D. Note that here a segment s '' includes sentences about the the same topic among all documents .The optimal solution is the mapping Clut : T \u2192 T '' , Segd : Sd \u2192 `` S ~ , and Alid : `` S ~ \u2192 `` S , which maximizes I T '' ; `` S .In topic segmentation and alignment of multiple documents , if P D , `` S , T is known , based on the marginal distributions P D | T and P `` S | T for each term t \u2208 T , we can categorize terms into four types in the data set :Entropy based on P D | T and P `` S | T can be used to identify different types of terms .To reinforce the contribution of cue words in the MI computation , and simultaneously reduce the effect of the other three types of words , similar as the idea of the tf-idf weight 22 , we use entropies of each term along the dimensions of document D and segment `` S , i.e. ED `` t and E\u02c6S `` t , to compute the weight .A cue word usually has a large value of ED `` t but a small value of E\u02c6S `` t .We introduce term weights or term cluster weightspowers to adjust term weights .Usually a = 1 and b = 1 as default , and max\u02c6t , \u2208 T\u02c6 ED `` t ~ and max\u02c6t , \u2208 T\u02c6 E\u02c6S `` t ~ are used to normalize the entropy values .Term cluster weights are used to adjust p `` t , `` s , where pw `` t and pw `` s are marginal distributions of pw `` t , `` s .However , since we do not know either the term weights or P D , `` S , T , we need to estimate them , but w\u02c6t depends on p `` s | t and `` S , while S '' and p `` s | t also depend on w\u02c6t that is still unknown .Thus , an iterative algorithm is required to estimate term weights w\u02c6t and find the best segmentation and alignment to optimize the objective function Iw concurrently .After a document is segmented into sentences andand each sentence is segmented into words , each word is stemmed .Then the joint probability distribution P D , Sd , T can be estimated .Finally , this distribution can be used to compute MI in our algorithm .Our goal is to maximize the objective function , I T\u02c6 ; \u02c6S or Iw T\u02c6 ; \u02c6S , which can measure the dependence of term occurrences in different segments .Generally , first we do not know the estimate term weights , which depend on the optimal topic segmentation and alignment , and term clusters .Moreover , this problem is NP-hard 10 , even though if we know the term weights .Thus , an iterative greedy algorithm is desired to find the best solution , even though probably only local maxima are reached .We present the iterative greedy algorithm in Figure 2 to find a local maximum of I T\u02c6 ; \u02c6S or Iw T\u02c6 ; \u02c6S with simultaneous term weight estimation .This algorithm can is iterative and greedy for multi-document cases or single-document cases with term weight estimation and/or term co-clustering .Otherwise , since it is just a one step algorithm to solve the task of single-document segmentation 6 , 15 , 25 , the global maximum of MI is guaranteed .We will show later that term co-clustering reduces the accuracy of the results and is not necessary , and for singledocument segmentation , term weights are also not required .In Step 0 , the initial term clustering Clut and topic segmentation and alignment Segd and Alid are important to avoid local maxima and reduce the number of iterations .First , a good guess of term weights can be made by using the distributions of term frequency along sentences for each document and averaging them to get the initial values of w\u02c6t :where Dt is the set of documents which contain Term t. Then , for the initial segmentation Seg 0 , we can simply segment documents equally by sentences .Or we can find the optimal segmentation just for each document d which maximizes the WMI , Seg 0assume that the order of segments for each d is the same .For the initial term clustering Clu 0 , first cluster labels can be set randomly , and after the first time of Step 3 , a good initial term clustering is obtained .After initialization , there are three stages for different cases .Totally there are eight cases , | D | = 1 or | D | > 1 , k = l or k < l , w = 0 or w = 1 .Single document segmentation without term clustering and term weight estimation | D | = 1 , k = l , w = 0 only requires Stage 1 Step 1 .If term clustering is required k < l , Stage 2 Step 2.1 , 2.2 , and 2.3 is executed iteratively .If term weight estimation is required w = 1 , Stage 3 Step 3.1 , 3.2 , and 3.3 is executed iteratively .If both are required k < l , w = 1 , Stage 2 and 3 run one after the other .For multi-document segmentation without term clustering and term weight estimation | D | > 1 , k = l , w = 0 , only iteration of Step 2.2 and 2.3 are required .At Stage 1 , the global maximum can be found based on I T\u02c6 ; \u02c6S using dynamic programming in Section 4.4 .Simultaneously finding a good term clustering and estimated term weights is impossible , since when moving a term to a new term cluster to maximize Iw T\u02c6 ; \u02c6S , we do not know that the weight of this term should be the one of the new cluster or the old cluster .Thus , we first do term clustering at Stage 2 , and then estimate term weights at Stage 3 .At Stage 2 , Step 2.1 is to find the best term clustering and Step 2.2 is to find the best segmentation .This cycle is repeated to find a local maximum based on MI I until it converges .The two steps are : 1 based on current term clustering Clu\u02c6t , for each document d , the algorithm segments all the sentences Sd into p segments sequentially some segments may be empty , and put them into the p segments S\u02c6 of the whole training set D all possible cases of different segmentation Segd and alignment Alid are checked to find the optimal case , and 2 based on the current segmentationand alignment , for each term t , the algorithm finds the best term cluster of t based on the current segmentation Segd and alignment Alid .After finding a good term clustering , term weights are estimated if w = 1 .At Stage 3 , similar as Stage 2 , Step 3.1 is term weight re-estimation and Step 3.2 is to find a better segmentation .They are repeated to find a local maximum based on WMI Iw until it converges .However , if the term clustering in Stage 2 is not accurate , then the term weight estimation at Stage 3 may have a bad result .Finally , at Step 3.3 , this algorithm converges and return the output .This algorithm can handle both single-document and multi-document segmentation .It also can detect shared topics among documents by checking the proportion of overlapped sentences on the same topics , as described in Sec 5.2 .In many previous works on segmentation , dynamic programming is a technique used to maximize the objective function .Similarly , at Step 1 , 2.2 , and 3.2 of our algorithm , we can use dynamic programming .For Stage 1 , using dynamic programming can still find the global optimum , but for Stage 2 and Stage 3 , we can only find the optimum for each step of topic segmentation and alignment of a document .Here we only show the dynamic programming for Step 3.2 using WMI Step 1 and 2.2 are similar but they can use either I or Iw .There are two cases that are not shown in the algorithm in Figure 2 : a single-document segmentation or multi-document segmentation with the same sequential order of segments , where alignment is not required , and b multi-document segmentation with different sequential orders of segments , where alignment is necessary .The alignment mapping function of the former case is simply just Alid `` s ~ i = `` si , while for the latter one 's alignment mapping function Alid `` s ~ i = `` sj , i and j may be different .The computational steps for the two cases are listed below : Case 1 no alignment : For each document d : 1 Compute pw `` t , partial pw `` t , `` s and partial pw `` s without counting sentences from d .Then put sentences from i to j into Part k , and compute partial WMIwhere Alid si , si +1 , ... , sj = k , k E 1 , 2 , ... , p , 1 < i < j < nd , and Segd sq = `` sk for all i < q < j.where 0 < m < nd , 1 < L < p , 1 < i < m + 1 , and when i > m , no sentences are put into `` sk when compute PIw note PIw T '' ; `` s si , ... , sm = 0 for single-document segmentation .Iw is found and the corresponding segmentation is the best .Case 2 alignment required : For each document d :where 0 < m < nd , 1 < L < p , 1 < i < m + 1 , kL E Set p , L , which is the set of all p !L !p \u2212 L !combinations of L segments chosen from all p segments , j E kL , the set of L segments chosen from all p segments , and kL/j is the combination of L \u2212 1 segments in kL except Segment j.where kp is just the combination of all p segments and 1 < i < nd + 1 , which is the optimal Iw and the corresponding segmentation is the best .The steps of Case 1 and 2 are similar , except in Case 2 , alignment is considered in addition to segmentation .First , basic items of probability for computing Iw are computed excluding Doc d , and then partial WMI by putting every possible sequential segment including empty segment of d into every segment of the set .Second , the optimal sum of PIw for L segments and the leftmost m sentences , M sm , L , is found .Finally , the maximal WMI is found among different sums of M sm , p \u2212 1 and PIw for Segment p.", "evaluation": "In this section , single-document segmentation , shared topic detection , and multi-document segmentation will be tested .Different hyper parameters of our method are studied .For convenience , we refer to the method using I as MIk if w = 0 , and Iw as WMIk if w = 2 or as WMI ~ k if w = 1 , where k is the number of term clusters , and if k = l , where l is the total number of terms , then no term clustering is required , i.e. MIl and WMIl .The first data set we tested is a synthetic one used in previous research 6 , 15 , 25 and many other papers .It has 700 samples .Each is a concatenation of ten segments .Each segment is the first n sentence selected randomly from the Brown corpus , which is supposed to have a different topic from each other .Currently , the best results on this data set is achieved by Ji et.al .15 .To compare the performance of our methods , the criterion used widely in previous research is applied , instead of the unbiased criterion introduced in 20 .It chooses a pair of words randomly .If they are in different segments different for the real segmentation real , but predicted pred as in the same segment , it is a miss .If they are in the same segment same , but predicted as in different segments , it is a false alarm .Thus , the error rate is computed using the following equation : p err | real , pred = p miss | real , pred , dif f p dif f | real + p false alarm | real , pred , same p same | real .We tested the case when the number of segments is known .Table 1 shows the results of our methods with different hyper parameter values and three previous approaches , C99 25 , U00 6 , and ADDP03 15 , on this data set when the segment number is known .In WMI for single-document segmentation , the term weights are computed as follows : w\u02c6t = 1 \u2212 E\u02c6S `` t / max\u02c6t \u2208 T\u02c6 E\u02c6S `` t ~ .For this case , our methods MIl and WMIl both outperform all the previous approaches .We compared our methods with ADDP03using one-sample one-sided t-test and p-values are shown in Table 2 .From the p-values , we can see that mostly the differences are verysignificant .We also compare the error rates between our two methods using two-sample two-sided t-test to check the hypothesis that they are equal .We can not reject the hypothesis that they are equal , so the difference are not significant , even though all the error rates for MIl are smaller than WMIl .However , we can conclude that term weights contribute little in single-document segmentation .The results also show that MI using term co-clustering k = 100 decreases the performance .We tested different number of term clusters , and found that the performance becomes better when the cluster number increases to reach l. WMIk < l has similar results that we did not show in the table .As mentioned before , using MI may be inconsistent on optimal boundaries given different numbers of segments .This situation occurs especially when the similarities among segments are quite different , i.e. some transitions are very obvious , while others are not .This is because usually a document is a hierarchical structure instead of only a sequential structure .When the segments are not at the same level , this situation may occur .Thus , a hierarchical topic segmentation approach is desired , and the structure highly depends on the number of segments for each internal node and the stop criteria of splitting .For this data set of singledocument segmentation , since it is just a synthetic set , which is just a concatenation of several segments about different topics , it is reasonable that approaches simply based on term frequency have a good performance .Usually for the tasks of segmenting coherent documents for sub-topics , the effectiveness decreases much .The second data set contains 80 news articles from Google News .There are eight topics and each has 10 articles .We randomly split the set into subsets with different document numbers and each subset has all eight topics .We compare our approach MIl and WMIl with LDA 4 .LDA treats a document in the data set as a bag of words , finds its distribution on topics , and its major topic .MIl and WMIl views each sentence as a bag of words and tag it with a topic label .Then for each pair of documents , LDA determines if they are on the same topic , while MIl and#Doc 10 20 40 80 LDA 8.89 % 16.33 % 1.35 % 0.60 % MIl , 0 = 0.6 4.17 % 1.71 % 1.47 % 0.0 % WMIl , 0 = 0.8 18.6 % 3.16 % 1.92 % 0.0 % WMIl check whether the proportion overlapped sentences on the same topic is larger than the adjustable threshold 0 .That is , in MIl and WMIl , for a pair of documents d , d' , if dI > 0 , where s \u2208 Sd , s \u2208 S d 1 topics = topics / min ISdI , IS ' Sd is the set of sentences of d , and ISdI is the number of sentences of d , then d and d' have the shared topic .For a pair of documents selected randomly , the error rate is computed using the following equation : p errIreal , pred = p missIreal , pred , same p sameIreal + p f alse alarmIreal , pred , dif f p dif f Ireal , where a miss means if they have the same topic same for the real case real , but predicted pred as on the same topic .If they are on different topics dif f , but predicted as on the same topic , it is a false alarm .The results are shown in Table 3 .If most documents have different topics , in WMIl , the estimation of term weights in Equation 3 is not correct .Thus , WMIl is not expected to have a better performance than MIl , when most documents have different topics .When there are fewer documents in a subset with the same number of topics , more documents have different topics , so WMIl is more worse than MIl .We can see that for most cases MIl has a better or at least similar performance than LDA .After shared topic detection , multi-document segmentation of documents with the shared topics is able to be executed .For multi-document segmentation and alignment , our goal is to identify these segments about the same topic among multiple similar documents with shared topics .Using Iw is expected to perform better than I , since without term weights the result is affected seriously by document-dependent stop words and noisy words which depends on the personal writing style .It is more likely to treat the same segments of different documents as different segments under the effect of document-dependent stop words and noisy words .Term weights can reduce the effect of document-dependent stop words and noisy words by giving cue terms more weights .The data set for multi-document segmentation and alignment has 102 samples and 2264 sentences totally .Each is the introduction part of a lab report selected from the course of Biol 240W , Pennsylvania State University .Each sample has two segments , introduction of plant hormones and the content in the lab .The length range of samples is from two to 56 sentences .Some samples only have one part and some have a reverse order the these two segments .It is not hard to identify the boundary between two segments for human .We labelled each sentence manually for evaluation .The criterion of evaluation is just using the proportion of the number of sentences with wrong predicted segment labels in the total number of sentences in the whole trainingset as the error rate : p error | predicted , realIn order to show the benefits of multi-document segmentation and alignment , we compared our method with different parameters on different partitions of the same training set .Except the cases that the number of documents is 102 and one they are special cases of using the whole set and the pure single-document segmentation , we randomly divided the training set into m partitions , and each has 51 , 34 , 20 , 10 , 5 , and 2 document samples .Then we applied our methods on each partition and calculated the error rate of the whole training set .Each case was repeated for 10 times for computing the average error rates .For different partitions of the training set , different k values are used , since the number of terms increases when the document number in each partition increases .From the experiment results in Table 4 , we can see the following observations : 1 When the number of documents increases , all methods have better performances .Only from one to two documents , MIl has decrease a little .We can observe this from Figure 3 at the point of document number = 2 .Most curves even have the worst results at this point .There are two reasons .First , because samples vote for the best multi-document segmentation and alignment , but if only two documents are compared with each other , the one with missing segments or a totally different sequence will affect the correct segmentation and alignment of the other .Second , as noted at the beginning of this section , if two documents have more document-dependent stop words or noisy words than cue words , then the algorithm may view them as two different segments and the other segment is missing .Generally , we can only expect a better performance when the number of documents is larger than the number of segments .2 Except single-document segmentation , W MIl is always better than MIl , and when the number of documents is reaching one or increases to a very large number , their performances become closer .Table 5 shows p-values of twosample one-sided t-test between MIl and WMIl .We also can see this trend from p-values .When document number = 5 , we reached the smallest p-value and the largest difference between error rates of MIl and WMIl .For single-documentsegmentation , W MIl is even a little bit worse than MIl , which is similar as the results of the single-document segmentation on the first data set .The reason is that for singledocument segmentation , we can not estimate term weights accurately , since multiple documents are unavailable .3 Using term clustering usually gets worse results than MIl and WMIl .4 Using term clustering in WMIk is even worse than in MIk , since in WMIk term clusters are found first using I before using Iw .If the term clusters are not correct , then the term weights are estimated worse , which may mislead the algorithm to reach even worse results .From the results we also found that in multi-document segmentation and alignment , most documents with missing segments and a reverse order are identified correctly .Table 6 illustrates the experiment results for the case of 20 partitions each has five document samples of the training set and topic segmentation and alignment using MIk with different numbers of term clusters k. Notice that when the number of term clusters increases , the error rate becomes smaller .Without term clustering , we have the best result .We did not show results for WMIk with term clustering , but the results are similar .We also tested W MIl with different hyper parameters of a and b to adjust term weights .The results are presented in Figure 3 .It was shown that the default case W MIl : a = 1 , b = 1 gave the best results for different partitions of the training set .We can see the trend that when the document number is very small or large , the difference between MIl : a = 0 , b = 0 and W MIl : a = 1 , b = 1 becomes quite small .When the document number is not large about from 2 to 10 , all the cases using term weights have better performances than MIl : a = 0 , b = 0 without term weights , but when the document number becomes larger , the cases W MIl : a = 1 , b = 0 and W MIl : a = 2 , b = 1 become worse than MIl : a = 0 , b = 0 .When the document number becomes very large , they are even worse than cases with small document numbers .This means that a proper way to estimate term weights for the criterion of WMI is very important .Figure 4 shows the term weights learned from the whole training set .Four types of words are categorized roughly even though the transition among them are subtle .Figure 5 illustrates the change in weighted mutual information for MIl and WMIl .As expected , mutual information for MIl increases monotonically with the number of steps , while W MIl does not .Finally , MIl and W MIl are scalable , with computational complexity shown in Figure 6 .One advantage for our approach based on MI is that removing stop words is not required .Another important advantage is that there are no necessary hyper parameters to adjust .In single-document segmentation , the performance based on MI is even better for that based on WMI , so no extra hyper parameter is required .In multi-document segmentation , we show in the experiment , a = 1 and b = 1 is the best .Our method gives more weights to cue terms .However , usually cue terms or sentences appear at the beginning of a segment , while the end of the segment may bemuch noisy .One possible solution is giving more weights to terms at the beginning of each segment .Moreover , when the length of segments are quite different , long segments have much higher term frequencies , so they may dominate the segmentation boundaries .Normalization of term frequencies versus the segment length may be useful .", "author_keywords_stem": ["topic segment", "share topic detect", "topic align", "mutual inform", "multipl document", "term weight"], "related work": "Generally , the existing approaches to text segmentation fall into two categories : supervised learning 19 , 17 , 23 and unsupervised learning 3 , 27 , 5 , 6 , 15 , 25 , 21 .Supervised learning usually has good performance , since it learns functions from labelled training sets .However , often getting large training sets with manual labels on document sentences is prohibitively expensive , so unsupervised approaches are desired .Some models consider dependence between sentences and sections , such as Hidden Markov Model 3 , 27 , Maximum Entropy Markov Model 19 , and Conditional Random Fields 17 , while many other approaches are based on lexical cohesion or similarity of sentences 5 , 6 , 15 , 25 , 21 .Some approaches also focus on cue words as hints of topic transitions 11 .While some existing methods only consider information in single documents 6 , 15 , others utilize multiple documents 16 , 14 .There are not many works in the latter category , even though the performance of segmentation is expected to be better with utilization of information from multiple documents .Previous research studied methods to find shared topics 16 and topic segmentation and summarization between just a pair of documents 14 .Text classification and clustering is a related research area which categorizes documents into groups using supervised or unsupervised methods .Topical classification or clustering is an important direction in this area , especially co-clustering of documents and terms , such as LSA 9 , PLSA 13 , and approaches based on distances and bipartite graph partitioning 28 or maximum MI 2 , 10 , or maximum entropy 1 , 18 .Criteria of these approaches can be utilized in the issue of topic segmentation .Some of those methods have been extended into the area of topic segmentation , such as PLSA 5 and maximum entropy 7 , but to our best knowledge , using MI for topic segmentation has not been studied ."}