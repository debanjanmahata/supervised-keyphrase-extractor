{"abstract": "The paper deals with on-board planning for a satellite swarm via communication and negotiation .We aim at defining individual behaviours that result in a global behaviour that meets the mission requirements .We will present the formalization of the problem , a communication protocol , a solving method based on reactive decision rules , and first results .", "id": "I-18", "reader_keywords_stem": ["on-board plan", "satellit swarm", "commun and negoti", "reactiv decis rule", "inform system applic", "multiag system", "task and resourc alloc", "objectag architectur", "teamag", "dip", "prospect ant"], "combined_keywords_stem": ["on-board plan", "satellit swarm", "commun and negoti", "reactiv decis rule", "inform system applic", "multiag system", "task and resourc alloc", "objectag architectur", "teamag", "dip", "prospect ant", "cooper distribut problem solv", "coordin", "cooper and teamwork"], "introduction": "Much research has been undertaken to increase satellite autonomy such as enabling them to solve by themselves problems that may occur during a mission , adapting their behaviour to new events and transferring planning on-board ; even if the development cost of such a satellite is increased , there is an increase in performance and mission possibilities 34 .Moreover , the use of satellite swarms sets of satellites flying in formation or in constellation around the Earth makes it possible to consider joint activities , to distribute skills and to ensure robustness .Multi-agent architectures have been developed for satellite swarms 36 , 38 , 42 but strong assumptions on deliberation and communication capabilities are made in order to build a collective plan .Mono-agent planning 4 , 18 , 28 and task allocation 20 are widely studied .In a multi-agent context , agents that build a collective plan must be able to change their goals , reallocate resources and react to environment changes and to the others ' choices .A coordination step must be added to the planning step 40 , 30 , 11 .However , this step needs high communication and computation capabilities .For instance , coalition-based 37 , contract-based 35 and all negotiationbased 25 mechanisms need these capabilities , especially in dynamic environments .In order to relax communication constraints , coordination based on norms and conventions 16 or strategies 17 are considered .Norms constraint agents in their decisions in such a way that the possibilities of conflicts are reduced .Strategies are private decision rules that allow an agent to draw benefit from the knowledgeable world without communication .However , communication is still needed in order to share information and build collective conjectures and plans .Communication can be achieved through a stigmergic approach via the environment or through message exchange and a protocol .A protocol defines interactions between agents and can not be uncoupled from its goal , e.g. exchanging information , finding a trade-off , allocating tasks and so on .Protocols can be viewed as an abstraction of an interaction 9 .They may be represented in a variety of ways , e.g. AUML 32 or Petri-nets 23 .As protocols are originally designed for a single goal , some works aim at endowing them with flexibility 8 , 26 .However , an agent can not always communicate with another agent or the communication possibilites are restricted to short time intervals .The objective of this work is to use intersatellite connections , called InterSatellite Links or ISL , in an Earth observation constellation inspired from the Fuego mission 13 , 19 , in order to increase the system reactivity and to improve the mission global return through a hybrid agent approach .At the individual level , agents are deliberative in order to create a local plan but at the collective level , they use normative decision rules in order to coordinate with one another .We will present the features of our problem , a communication protocol , a method for request allocation and finally , collaboration strategies .", "title": "Collaboration Among a Satellite Swarm", "method": "An observation satellite constellation is a set of satellites in various orbits whose mission is to take pictures of various areas on the Earth surface , for example hot points corresponding to volcanos or forest fires .The ground sends the constellation observation requests characterized by their geographical positions , priorities specifying if the requests are urgent or not , the desired dates of observation and the desired dates for data downloading .The satellites are equipped with a single observation instrument whose mirror can roll to shift the line of sight .A minimum duration is necessary to move the mirror , so requests that are too close together can not be realized by the same satellite .The satellites are also equipped with a detection instrument pointed forward that detects hot points and generates observation requests on-board .The constellations that we consider are such as the orbits of the various satellites meet around the poles .A judicious positioning of the satellites in their orbits makes it possible to consider that two or more satellites meet in the polar areas , and thus can communicate without the ground intervention .Intuitively , intersatellite communication increases the reactivity of the constellation since each satellite is within direct view of a ground station and thus can communicate with it only 10 % of the time .The features of the problem are the following : 3 to 20 satellites in the constellation ; pair communication around the poles ; no ground intervention during the planning process ; asynchronous requests with various priorities .As each satellite is a single entity that is a piece of the global swarm , a multi-agent system fits to model satellite constellations 39 .This approach has been developped through the ObjectAgent architecture 38 , TeamAgent 31 , DIPS 14 or Prospecting ANTS 12 .An observation satellite swarm1 is a multi-agent system where the requests do not have to be carried out in a fixed order and the agents the satellites do not have any physical interaction .Carrying out a request can not prevent another agent from carrying out another one , even the same one .At most , there will be a waste of resources .Formally , a swarm is defined as follows :In the sequel , we will assume that the agents share a common clock .For a given agent and a given time , the vicinity relation returns the set of agents with whom it can communicate at that time .As we have seen previously , this relation exists when the agents meet .Requests are the observation tasks that the satellite swarm must achieve .As we have seen previously , the requests are generated both on the ground and on board .Each agent is allocated a set of initial requests .During the mission , new requests are sent to the agents by the ground or agents can generate new requests by themselves .Formally , a request is defined as follows :The priority prio R of a request represents how much it is important for the user , namely the request sender , that the request should be carried out .Thus a request with a high priority must be realized at all costs .In our application , priorities are comprised between 1 and 5 the highest .In the sequel , we will note Rtsi the set of the requests that are known by agent si at time t \u2208 T. For each request R in Rtsi , there is a cost value , noted costsi R \u2208 R , representing how far from the desired date of observation tbeg R an agent si can realize R. So , the more an agent can carry out a request in the vicinity of the desired date of observation , the lower the cost value .An agent may have several intentions about a request , i.e. for a request R , an agent si may : propose to carry out R : si may realize R ; commit to carry out R : si will realize R ; not propose to carry out R : si may not realize R ; refuse to carry out R : si will not realize R .We can notice that these four propositions are modalities of proposition C : si realizes R :Then , our problem is the following : we would like each agent to build request allocations i.e a plan dynamically such as if these requests are carried out their number is the highest possible or the global cost is minimal .More formally , DEFINITION 4 PROBLEM .Let E be a swarm .Agents si in E must build a set Ats1 ... Atsn where Atsi \u2286 Rtsi suchAs the choices of an agent will be influenced by the choices of the others , it is necessary that the agents should reason on a common knowledge about the requests .It is thus necessary to set up an effective communication protocol .Communication is commonly associated with cooperation .Deliberative agents need communication to cooperate , whereas it is not necessarily the case for reactive agents 2 , 41 .Gossip protocols 22 , 24 , or epidemic protocols , are used to share knowledge with multicast .Each agent selects a set of agents at a given time in order to share information .The speed of information transmission is contingent upon the length of the discussion round .The suggested protocol is inspired from what we name the corridor metaphor , which represents well the satellite swarm problem .Various agents go to and fro in a corridor where objects to collect appear from time to time .Two objects that are too close to each other can not be collected by the same agent because the action takes some time and an agent can not stop its movement .In order to optimize the collection , the agents can communicate when they meet .EXAMPLE 1 .Let us suppose three agents , s1 , s2 , s3 and an object A to be collected .At time t , s1 did not collect A and s2 does not know that A exists .When s1 meets s2 , it communicates the list of the objects it knows , that is to say A. s2 now believes that A exists and prepares to collect it .It is not certain that A is still there because another agent may have passed before s2 , but it can take it into account in its plan .At time t ' , s3 collects A .In the vicinity of s2 , s3 communicates its list of objects and A is not in the list .As both agents meet in a place where it is possible for s3 to have collected A , the object would have been in the list if it had not been collected .s2 can thus believe that A does not exist anymore and can withdraw it from its plan .In order to build up their plans , agents need to know the current requests and the others agents ' intentions .For each agent two kinds of knowledge to maintain are defined : requests Definition 2 ; candidacies Definition 3 .In the sequel , we will note Kt si the knowledge of agent si at time t \u2208 T.From the corridor metaphor , we can define a communication protocol that benefits from all the communication opportunities .An agent notifies any change within its knowledge and each agent must propagate these changes to its vicinity who update their knowledge bases and reiterate the process .This protocol is a variant of epidemic protocols 22 inspired from the work on overhearing 27 .PROTOCOL 1 COMMUNICATION .Let si be an agentTwo kinds of updates exist for an agent : an internal update from a knowledge modification by the agent itself ; an external update from received knowledge .For an internal update , updating K depends on data K : a candidacy C is modified when its modality changes and a request R is modified when an agent realizes it .When K is updated , the timestamp is updated too .PROTOCOL 2 INTERNAL UPDATE .Let si \u2208 S be an agent .An internal update from si at time t \u2208 T is performed : when knowledge K is created ; when data K is modified .In both cases :For an external update , only the most recent knowledge K is taken into account because timestamps change only when data K is modified .If K is already known , it is updated if the content or the set of agents knowing it have been modified .If K is unknown , it is simply added to the agent 's knowledge .PROTOCOL 3 EXTERNAL UPDATE .Let si be an agent and K the knowledge transmitted by agent sj .\u2200 K \u2208 K , the external update at time t \u2208 T is defined as follows :If the incoming information has a more recent timestamp , it means that the receiver agent has obsolete information .Consequently , it replaces the old information by the new one and adds itself to the set of agents knowing K 1 .a.i .If both timestamps are the same , both pieces of information are the same .Only the set of the agents knowing K may have changed because agents si and sj may have already transmitted the information to other agents .Consequently , the sets of agents knowing K are unified 1 .a.ii .Communication between two agents when they meet is made of the conjunction of Protocol 1 and Protocol 3 .In the sequel , we call this conjunction a communication occurrence .The structure of the transmitted information and the internal update mechanism Protocol 2 allow the process to converge .Indeed , a request R can only be in two states realized or not given by the boolean bR .Once an internal update is made i.e. R is realized R can not go back to its former state .Consequently , an internal update can only be performed once .As far as candidacies are concerned , updates only modify the modalities , which may change many times and go back to previous states .Then it seems that livelocks2 would be likely to appear .However , a candidacy C is associated to a request and a realization date the deadline given by obsC .After the deadline , the candidacy becomes meaningless .Thus for each candidacy , there exists a date t \u2208 T when changes will propagate no more .It has been shown that in a set of N agents where a single one has a new piece of information , an epidemic protocol takes O logN steps to broadcast the information 33 .During one step , each agent has a communication occurrence .As agents do not have much time to communicate , such a communication occurrence must not have a too big temporal complexity , which we can prove formally : PROPOSITION 1 .The temporal complexity of a communication occurrence at time t \u2208 T between two agents si and sj is , for agent si , O | Rt si | .| Rt sj | .| S | 2 PROOF 1 .For the worst case , each agent sk sends | Rtsk | pieces of information on requests and | Rtsk | .| S | pieces of informations on candidacies one candidacy for each request and for each agent of the swarm .Let si and sj two agents meeting at time t \u2208 T. For agent si , the complexity of Protocol 1 isFor each received piece of information , agent si uses Protocol 3 and searches through its knowledge bases : | Rtsi | pieces of information for each received request and | Rt si | .| S | pieces of 2Communicating endlessly without converging .information for each received candidacy .Consequently , the complexity of Protocol 3 isIn space contexts , 5 , 21 , 6 present multi-agent architectures for on-board planning .However , they assume high communication and computation capabilities 10 .13 relax these constraints by cleaving planning modules : on the first hand , satellites have a planner that builds plans on a large horizon and on the second hand , they have a decision module that enables them to choose to realize or not a planned observation .In an uncertain environment such as the one of satellite swarms , it may be advantageous to delay the decision until the last moment i.e. the realization date , especially if there are several possibilities for a given request .The main idea in contingency planning 15 , 29 is to determine the nodes in the initial plan where the risks of failures are most important and to incrementally build contingency branches for these situations .Inspired from both approaches , we propose to build allocations made up of a set of unquestionable requests and a set of uncertain disjunctive requests on which a decision will be made at the end of the decision horizon .This horizon corresponds to the request realization date .Proposing such partial allocations allows conflicts to be solved locally without propagating them through the whole plan .In order to build the agents ' initial plans , let us assume that each agent is equipped with an on-board planner .A plan is defined as follows : DEFINITION 6 PLAN .Let si be an agent , Rtsi a set of requests and Ctsi a set of candidacies .Let us define three sets : the set of potential requests :A plan At si generated at time t \u2208 T is a set of requests such as Rm \u2286 At si \u2286 Rp and ~ \u2203 R \u2208 Rg such as R \u2208 At si .Building a plan generates candidacies .an agent and At1 si a possibly empty plan at time t1 .Letsi be the plan generated at time t2 with t2 > t1 .When two agents compare their respective plans some conflicts may appear .It is a matter of redundancies between allocations on a given request , i.e. : several agents stand as candidates to carry out this request .Whereas such redundancies may sometimes be useful to ensure the realization of a request the realization may fail , e.g. because of clouds , it may also lead to a loss of opportunity .Consequently , conflict has to be defined : DEFINITION 8 CONFLICT .Let si and sj be two agents with , at time t , candidacies Csi and Csj respectively sCsi = si and sCsj = sj .si and sj are in conflict if and only if : RCsi = RCsj modCsi and modCsj \u2208 \u2751 , O Let us notice that the agents have the means to know whether they are in conflict with another one during the communication process .Indeed , they exchange information not only concerning their own plan but also concerning what they know about the other agents ' plans .All the conflicts do not have the same strength , meaning that they can be solved with more or less difficulty according to the agents ' communication capacities .A conflict is soft when the concerned agents can communicate before one or the other carries out the request in question .A conflict is hard when the agents can not communicate before the realization of the request .A conflict is soft if it exists a chain of agents between the two agents in conflict such as information can propagate before both agents realize the request .If this chain does not exist , it means that the agents in conflict can not communicate directly or not .Consequently , the conflict is hard .In satellite swarms , the geographical positions of the requests are known as well as the satellite orbits .So each agent is able to determine if a conflict is soft or hard .We can define the conflict cardinality :The conflict cardinality corresponds to the number of agents that are candidates or committed to the same request .Thus , a conflict has at least a cardinality of 2 .In space contexts , communication time and agents ' computing capacities are limited .When they are in conflict , the agents must find a local agreement instead of an expensive global agreement by using the conflict in order to increase the number of realized requests , to decrease the time of mission return , to increase the quality of the pictures taken or to make sure that a request is carried out .EXAMPLE 2 .Let us suppose a conflict on request R between agents si and sj .We would like that the most expert agent , i.e. the agent that can carry out the request under the best conditions , does it .Let us suppose si is the expert .si must allocate R to itself .It remains to determine what sj must do : sj can either select a substitute for R in order to increase the number of requests potentially realized , or do nothing in order to preserve resources , or allocate R to itself to ensure redundancy .Consequently , we can define collaboration strategies dedicated to conflict solving .A strategy is a private namely intrinsic to an agent decision process that allows an agent to make a decision on a given object .In our application , strategies specify what to do with redundancies .In our application , cost is linked to the realization dates .Carrying out a request consumes the agents ' resources e.g. : on-board energy , memory .Consequently , an observation has a cost for each agent which depends on when it is realized : the closer the realization date to the desired date of observation , the lower the cost .From this cost notion , we can formally define an expert notion between two agents .The expertise for an agent means it can realize the request at the lower cost .DEFINITION 12 EXPERTISE .Let si and sj \u2208 S be two agents and R a request .Agent si is an expert for R if and only if costsi R \u2264 costsj R .Three strategies are proposed to solve a conflict .The expert strategy means that the expert agent maintains its candidacy whereas the other one gives up .The altruist strategy means that the agent that can download first3 , provided the cost increase is negligible , maintains its candidacy whereas the other one gives up .The insurance strategy means that both agents maintain their candidacies in order to ensure redundancy .STRATEGY 1 EXPERT .Let si and sj be two agents in conflict on their respective candidacies Csi and Csj such as si is the expert agent .The expert strategy is : modCsi = \u2751 and modCsj = \u00ac \u2751 .STRATEGY 2 ALTRUIST .Let si and sj be two agents in conflict on their respective candidacies Csi and Csj such as si is the expert agent .Let e \u2208 R + be a threshold on the cost increase .The altruist strategy is : if dnlCsi > dnlCsj and | costsi R \u2212 costsj R | < e then modCsi = \u00ac \u2751 and modCsj = \u2751 .STRATEGY 3 INSURANCE .Let si and sj be two agents in conflict on their respective candidacies Csi and Csj such as si is the expert agent .Let \u03b1 \u2208 R be a priority threshold .The insurance strategy is : if prio R cardc R \u2212 1 > \u03b1 then modCsi = O and modCsj = O. 3i .e. the agent using memory resources during a shorter time .In the insurance strategy , redundancy triggering is adjusted by the conflict cardinality cardc R .The reason is the following : the more redundancies on a given request , the less a new redundancy on this request is needed .The three strategies are implemented in a negotiation protocol dedicated to soft conflicts .The protocol is based on a subsumption architecture 7 on strategies : the insurance strategy 1 is the major strategy because it ensures redundancy for which the swarm is implemented .Then the altruist strategy comes 2 in order to allocate the resources so as to enhance the mission return .Finally , the expert strategy that does not have preconditions 3 enhances the cost of the plan .PROTOCOL 4 SOFT CONFLICT SOLVING .Let R be a request in a soft conflict between two agents , si and sj .These agents have Csi and Csj for respective candidacies .Let si be the expert agent .Agents apply strategies as follows :The choice of parameters \u03b1 and a allows to adjust the protocol results .For example , if e = 0 , the altruist strategy is never used .In case of a hard conflict , the agent that is not aware will necessarily realize the request with success or not .Consequently , a redundancy is useful only if the other agent is more expert or if the priority of the request is high enough to need redundancy .Therefore , we will use the insurance strategy refer to Section 6.2 and define a competitive strategy .The latter is defined for two agents , si and sj , in a hard conflict on a request R. Let si be the agent that is aware of the conflict4 .STRATEGY 4 COMPETITIVE .Let \u03bb E R + be an cost threshold .The competitive strategy is : if costsi R < costsj R \u03bb then modCsi = \u2738 .PROTOCOL 5 HARD CONFLICT SOLVING .Let si bean agent in a hard conflict with an agent sj on a request R. si applies strategies as follows :Although agents use pair communication , they may have information about several agents and conflict cardinality may be more than 2 .Therefore , we define a k-conflict as a conflict with a cardinality of k on a set of agents proposing or committing to realize the same request .Formally ,set of agents with respective candidacies Cs1 ... Csk at time t .The set S is in a k-conflict if and only if :As previously , a k-conflict can be soft or hard .A k-conflict is soft if each pair conflict in the k-conflict is a soft conflict with respect to Definition 9 .As conflicts bear on sets of agents , expertise is a total order on agents .We define rank-i-expertise where the concerned agent is the ith expert .In case of a soft k-conflict , the rank-i-expert agent makes its decision with respect to the rank i + 1 expert agent according to Protocol 4 .The protocol is applied recursively and \u03b1 and a parameters are updated at each step in order to avoid cost explosion5 .In case of a hard conflict , the set S of agents in conflict can be splitted in SS the subset of agents in a soft conflict and SH the subset of unaware agents .Only agents in SS can take a decision and must adapt themselves to agents in SH .The rank-i-expert agent in SS uses Protocol 5 on the whole set SH and the rank i 1 expert agent in SS .If an agent in SS applies the competitive strategy all the others withdraws .", "conclusions": "Satellite swarm simulations have been implemented in JAVA with the JADE platform 3 .The on-board planner is implemented with linear programming using ILOG CPLEX 1 .The simulation scenario implements 3 satellites on 6hour orbits .Two scenarios have been considered : the first one with a set of 40 requests with low mutual exclusion and conflict rate and the second one with a set of 74 requests with high mutual exclusion and conflict rate .For each scenario , six simulations have been performed : one with centralized planning all requests are planned by the ground station before the simulation , one where agents are isolated they can not communicate nor coordinate with one another , one informed simulation agents only communicate requests and three other simulations implementing the instanciated collaboration strategies politics : neutral politics : \u03b1 , a and \u03bb are set to average values ; drastic politics : \u03b1 and \u03bb are set to higher values , i.e. agents will ensure redundancy only if the priorities are high and , in case of a hard conflict , if the cost payoff is much higher ; lax politics : \u03b1 is set to a lower value , i.e. redundancies are more frequent .In the case of low mutual exclusion and conflict rate Table 1 , centralized and isolated simulations lead to the same number of observations , with the same average priorities .Isolation leading to a lower cost is due to the high number of redundancies : many agents carry out the same request at different costs .The informed simulation reduces the number of redundancies but sligthly increases the average cost for the same reason .We can notice that the use of 5For instance , the rank-1-expert agent withdraws due to the altruist strategy and the cost increases by a in the worst case , then rank-2-expert agent withdraws due to the altruist strategy and the cost increases by e in the worst case .So the cost has increased by 2e in the worst case .collaboration strategies allows the number of redundancies to be much more reduced but the number of observations decreases owing to the constraint created by commitments .Furthermore , the average cost is increased too .Nevertheless each avoided redundancy corresponds to saved resources to realize on-board generated requests during the simulation .In the case of high mutual exclusion and conflict rate Table 2 , noteworthy differences exist between the centralized and isolated simulations .We can notice that all informed simulations with or without strategies allow to perform more observations than isolated agents do with less redundancies .Likewise , we can notice that all politics reduce the average cost contrary to the first scenario .The drastic politics is interesting because not only does it allow to perform more observations than isolated agents do but it allows to highly reduce the average cost with the lowest number of redundancies .As far as the number of exchanged messages is concerned , there are 12 meetings between 2 agents during the simulations .In the worst case , at each meeting each agent sends N pieces of information on the requests plus 3N pieces of information on the agents ' intentions plus 1 message for the end of communication , where N is the total number of requests .Consequently , 3864 messages are exchanged in the worst case for the 40-request simulations and 7128 messages for the 74-request simulations .These numbers are much higher than the number of messages that are actually exchanged .We can notice that the informed simulations , that communicate only requests , allow a higher reduction .In the general case , using communication and strategies allows to reduce redundancies and saves resources but increases the average cost : if a request is realized , agents that know it do not plan it even if its cost can be reduce afterwards .It is not the case with isolated agents .Using strategies on little constrained problems such as scenario 1 constrains the agents too much and causes an additional cost increase .Strategies are more useful on highly constrained problems such as scenario 2 .Although agents constrain themselves on the number of observations , the average cost is widely reduce .8 .CONCLUSION AND FUTURE WORK An observation satellite swarm is a cooperative multiagent system with strong constraints in terms of communication and computation capabilities .In order to increase the global mission outcome , we propose an hybrid approach : deliberative for individual planning and reactive for collaboration .Agents reason both on requests to carry out and on the other agents ' intentions candidacies .An epidemic communication protocol uses all communication opportunities to update this information .Reactive decision rules strategies are proposed to solve conflicts that may arise between agents .Through the tuning of the strategies \u03b1 , e and \u03bb and their plastic interlacing within the protocol , it is possible to coordinate agents without additional communication : the number of exchanged messages remains nearly the same between informed simulations and simulations implementing strategies .Some simulations have been made to experimentally validate these protocols and the first results are promising but raise many questions .What is the trade-off between the constraint rate of the problem and the need of strategies ?To what extent are the number of redundancies and the average cost affected by the tuning of the strategies ?Future works will focus on new strategies to solve new conflicts , specially those arising when relaxing the independence assumption between the requests .A second point is to take into account the complexity of the initial planning problem .Indeed , the chosen planning approach results in a combinatory explosion with big sets of requests : an anytime or a fully reactive approach has to be considered for more complex problems .", "author_keywords_stem": ["multiag system", "cooper distribut problem solv", "task and resourc alloc", "coordin", "cooper and teamwork"]}