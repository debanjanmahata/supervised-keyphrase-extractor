{"abstract": "Multiattribute auction mechanisms generally either remain agnostic about traders ' preferences , or presume highly restrictive forms , such as full additivity .Real preferences often exhibit dependencies among attributes , yet may possess some structure that can be usefully exploited to streamline communication and simplify operation of a multiattribute auction .We develop such a structure using the theory of measurable value functions , a cardinal utility representation based on an underlying order over preference differences .A set of local conditional independence relations over such differences supports a generalized additive preference representation , which decomposes utility across overlapping clusters of related attributes .We introduce an iterative auction mechanism that maintains prices on local clusters of attributes rather than the full space of joint configurations .When traders ' preferences are consistent with the auction 's generalized additive structure , the mechanism produces approximately optimal allocations , at approximate VCG prices .", "id": "J-15", "reader_keywords_stem": ["auction", "multiattribut auction", "prefer handl", "theori of measur valu function", "measur valu function theori", "iter auction mechan", "mvf", "gau", "gai base auction"], "combined_keywords_stem": ["auction", "multiattribut auction", "prefer handl", "theori of measur valu function", "measur valu function theori", "iter auction mechan", "mvf", "gau", "gai base auction"], "introduction": "Multiattribute trading mechanisms extend traditional , price-only mechanisms by facilitating the negotiation over a set of predefined attributes representing various non-price aspects of the deal .Rather than negotiating over a fully defined good or service , a multiattribute mechanism delays commitment to specific configurations until the most promising candidates are identified .For example , a procurement department of a company may use a multiattribute auction to select a supplier of hard drives .Supplier offers may be evaluated not only over the price they offer , but also over various qualitative attributes such as volume , RPM , access time , latency , transfer rate , and so on .In addition , suppliers may offer different contract conditions such as warranty , delivery time , and service .In order to account for traders ' preferences , the auction mechanism must extract evaluative information over a complex domain of multidimensional configurations .Constructing and communicating a complete preference specification can be a severe burden for even a moderate number of attributes , therefore practical multiattribute auctions must either accommodate partial specifications , or support compact expression of preferences assuming some simplified form .By far the most popular multiattribute form to adopt is the simplest : an additive representation where overall value is a linear combination of values associated with each attribute .For example , several recent proposals for iterative multiattribute auctions 2 , 3 , 8 , 19 require additive preference representations .Such additivity reduces the complexity of preference specification exponentially compared to the general discrete case , but precludes expression of any interdependencies among the attributes .In practice , however , interdependencies among natural attributes are quite common .For example , the buyer may exhibit complementary preferences for size and access time since the performance effect is more salient if much data is involved , or may view a strong warranty as a good substitute for high reliability ratings .Similarly , the seller 's production characteristics such as `` increasing access time is harder for larger hard drives '' can easily violate additivity .In such cases an additive value function may not be able to provide even a reasonable approximation of real preferences .On the other hand , fully general models are intractable , and it is reasonable to expect multiattribute preferences to exhibit some structure .Our goal , therefore , is to identify the subtler yet more widely applicable structured representations , and exploit these properties of preferences in trading mechanisms .We propose an iterative auction mechanism based on just such a flexible preference structure .Our approach is inspired by the design of an iterative multiattribute procurement auction for additive preferences , due to Parkes and Kalagnanam PK 19 .PK propose two types of iterative auctions : the first NLD makes no assumptions about traders ' preferences , and lets sellers bid on the full multidimensional attribute space .Because NLD maintains an exponential price structure , it is suitable only for small domains .The other auction AD assumes additive buyer valuation and seller cost functions .It collects sell bids per attribute level and for a single discount term .The price of a configuration is defined as the sum of the prices of the chosen attribute levels minus the discount .The auction we propose also supports compact price spaces , albeit for levels of clusters of attributes rather than singletons .We employ a preference decomposition based on generalized additive independence GAI , a model flexible enough to accommodate interdependencies to the exact degree of accuracy desired , yet providing a compact functional form to the extent that interdependence can be limited .Given its roots in multiattribute utility theory 13 ,the GAI condition is defined with respect to the expected utility function .To apply it for modeling values for certain outcomes , therefore , requires a reinterpretation for preference under certainty .To this end , we exploit the fact that auction outcomes are associated with continuous prices , which provide a natural scale for assessing magnitude of preference .We first lay out a representation framework for preferences that captures , in addition to simple orderings among attribute configuration values , the difference in the willingness to pay wtp for each .That is , we should be able not only to compare outcomes but also decide whether the difference in quality is worth a given difference in price .Next , we build a direct , formally justified link from preference statements over priced outcomes to a generalized additive decomposition of the wtp function .After laying out this infrastructure , we employ this representation tool for the development of a multiattribute iterative auction mechanism that allows traders to express their complex preferences in GAI format .We then study the auction 's allocational , computational , and practical properties .In Section 2 we present essential background on our representation framework , the measurable value function MVF .Section 3 develops new multiattribute structures for MVF , supporting generalized additive decompositions .Next , we show the applicability of the theoretical framework to preferences in trading .The rest of the paper is devoted to the proposed auction mechanism .", "title": "Generalized Value Decomposition and Structured Multiattribute Auctions", "method": "As mentioned , most tools facilitating expression of multiattribute value for trading applications assume that agents ' preferences can be represented in an additive form .By way of background , we start by introducing the formal prerequisites justifying the additive representation , as provided by multiattribute utility theory .We then present the generalized additive form , and develop the formal underpinnings for measurable value needed to extend this model to the case of choice under certainty .Let \u0398 denote the space of possible outcomes , with a preference relation weak total order over \u0398 .Let A = a0 , ... , am be a set of attributes describing \u0398 .Capital letters denote subsets of variables , small letters with or without numeric subscripts denote specific variables , and X \u00af denotes the complement of X with respect to A .We indicate specific variable assignments with prime signs or superscripts .To represent an instantiation of subsets X , Y at the same time we use a sequence of instantiation symbols , as in X ' Y ' .The preference relation when no uncertainty is modeled is usually represented by a value function v 17 .The following fundamental result greatly simplifies the value function representation .THEOREM 1 9 .A preference order over set of attributes A has an additive value function representationEssentially , the additive forms used in trading mechanisms assume mutual preferential independence over the full set of attributes , including the money attribute .Intuitively that means that willingness to pay for value of an attribute or attributes can not be affected by the value of other attributes .A cardinal value function representing an ordering over certain outcomes need not in general coincide with the cardinal utility function that represents preference over lotteries or expected utility EU .Nevertheless , EU functions may possess structural properties analogous to that for value functions , such as additive decomposition .Since the present work does not involve decisions under uncertainty , we do not provide a full exposition of the EU concept .However we do make frequent reference to the following additive independence relations .An expected utility function u \u00b7 can be decomposed additively according to its possibly overlapping GAI sub-configurations .What is now known as the GAI condition was originally introduced by Fishburn 13 for EU , and was named GAI and brought to the attention of AI researchers by Bacchus and Grove 1 .Graphical models and elicitation procedures for GAI decomposable utility were developed for EU 4 , 14 , 6 , for a cardinal representation of the ordinal value function 15 , and for an ordinal preference relations corresponding to a TCP-net structure by Brafman et al. 5 .Apart from the work on GAI in the context of preference handling that were discussed above , GAI have been recently used in the context of mechanism design by Hyafil and Boutilier 16 , as an aid in direct revelation mechanisms .As shown by Bacchus and Grove 1 , GAI structure can be identified based on a set of CAI conditions , which are much easier to detect and verify .In general , utility functions may exhibit GAI structure not based on CAI .However , to date all proposals for reasoning and eliciting utility in GAI form take advantage of the GAI structure primarily to the extent that it represents a collection of CAI conditions .For example , GAI trees 14 employ triangulation of the CAI map , and Braziunas and Boutilier 's 6 conditional set Cj of a set Ij corresponds to the CAI separating set of Ij .Since the CAI condition is also defined based on preferences over lotteries , we can not apply Bacchus and Grove 's result without first establishing an alternative framework based on priced outcomes .We develop such a framework using the theory of measurable value functions , ultimately producing a GAI decompositionEq .1 of the wtp function .Readers interested primarily in the multiattribute auction and willing to grant the well-foundedness of the preference structure may skip down to Section 5 .Trading decisions represent a special case of decisions under certainty , where choices involve multiattribute outcomes and corresponding monetary payments .In such problems , the key decision often hinges on relative valuations of price differences compared to differences in alternative configurations of goods and services .Theoretically , price can be treated as just another attribute , however , such an approach fails to exploit the special character of the money dimension , and can significantly add to complexity due to the inherent continuity and typical wide range of possible monetary outcome values .We build on the fundamental work of Dyer and Sarin 10 , 11 on measurable value functions MVFs .As we show below , wtp functions in a quasi-linear setting can be interpreted as MVFs .However we first present the MVF framework in a more generic way , where the measurement is not necessarily monetary .We present the essential definitions and refer to Dyer and Sarin for more detailed background and axiomatic treatment .The key concept is that of preference difference .Let \u03b81 , \u03b82 , \u03d11 , \u03d12 E \u0398 such that \u03b81 ~ \u03b82 and \u03d11 _ \u03d12 .\u03b82 , \u03b81 denotes the preference difference between \u03b82 and \u03b81 , interpreted as the strength , or degree , to which \u03b82 is preferred over \u03b81 .Let \u2217 denote a preference order over \u0398 x \u0398 .We interpret the statementas `` the preference of \u03d12 over \u03d11 is at least as strong as the preference of \u03b82 over \u03b81 '' .We use the symbol \u2217 to represent equality of preference differences .Note that an MVF can also be used as a value function representing , since \u03b8 ~ , \u03b8 \u2217 \u03b8 ~ ~ , \u03b8 iff \u03b8 ~ \u03b8 ~ ~ .DEFINITION 6 11 .Attribute set X C A is called difference independent of X \u00af iffor any two assignments X1 \u00af X ~ X2 \u00af X ~ , X1 \u00af X ~ , X2 \u00af X ~ _ \u2217 X1 \u00af X ~ ~ , X2 \u00af X ~ ~ for any assignment \u00af X ~ ~ .Or , in words , the preference differences on assignments to X given a fixed level of X \u00af do not depend on the particular level chosen for \u00af X .As with additive independence for EU , this condition is stronger than preferential independence of X. Also analogously to EU , mutual preferential independence combined with other conditions leads to additive decomposition of the MVF .Moreover , Dyer and Sarin 11 have defined analogs of utility independence 17 for MVF , and worked out a parallel set of decomposition results .Our first step is to generalize Definition 6 to a conditional version .Since the conditional set is always the complement , we sometimes leave it implicit , using the abbreviated notation CDI X , Y .CDI leads to a decomposition similar to that obtained from CAI 17 .LEMMA 3 .Let u A be an MVF representing preference differences .Then CDI X , Y I Z iffTo complete the analogy with CAI , we generalize Lemma 3 as follows .An immediate result of Proposition 4 is that CDI is a symmetric relation .The conditional independence condition is much more applicable than the unconditional one .For example , if attributes a E X and b E / X are complements or substitutes , X can not be difference independent of \u00af X. However , X \\ a may still be CDI of X \u00af given a.A single CDI condition decomposes the value function into two parts .We seek a finer-grain global decomposition of the utility function , similar to that obtained from mutual preferential independence .For this purpose we are now ready to employ the results of Bacchus and Grove 1 , who establish that the CAI condition has a perfect map 20 ; that is , there exists a graph whose nodes correspond to the set A , and its node separation reflects exactly the complete set of CAI conditions on A. Moreover , they show that the utility function decomposes over the set of maximal cliques of the perfect map .Their proofs can be easily adapted to CDI , since they only rely on the decomposition property of CAI that is also implied by CDI according to Proposition 4 .where I1 , ... , Ig are overlapping subsets of A , each corresponding to a maximal clique of G. Given Theorem 5 , we can now identify an MVF GAI structure from a collection of CDI conditions .The CDI conditions , in turn , are particularly intuitive to detect when the preference differences carry a direct interpretation , as in the case with monetary differences discussed below .Moreover , the assumption or detection of CDI conditions can be performed incrementally , until the MVF is decomposed to a reasonable dimension .This is in contrast with the fully additive decomposition of MVF that requires mutual preferential independence 11 .Theorem 5 defines a decomposition structure , but to represent the actual MVF we need to specify the functions over the cliques .The next theorem establishes that the functional constituents of MVF are the same as those for GAI decompositions as defined by Fishburn 13 for EU .We adopt the following conventional notation .Let a01 , ... , a0m be a predefined vector called the reference outcome .For any I C _ A , the function u I stands for the projection of u A to I where the rest of the attributes are fixed at their reference levels .The proof directly shows that if graph G = A , E is a perfect map of CDI , u A decomposes to a sum over the functions defined in 4 .1 Thus this proof does not rely on the decomposition result of Theorem 5 , only on the existence of the perfect map .To summarize , the results of this section generalize additive MVF theory .In particular it justifies the application of methods recently developed under the EU framework 1 , 4 , 14 , 6 to representation of value under certainty .In this section we apply measurable value to represent differences of willingness to pay for outcomes .We assume that the agent has a preference order over outcome space , represented by a set of attributes A , and an attribute p representing monetary consequence .Note that in evaluating a purchase decision , p would correspond to the agent 's money holdings net of the transaction i.e. , wealth after purchase , not the purchase price .An outcome in this space is represented for example by \u03b8 ~ , p ~ , where \u03b8 ~ is an instantiation of A and p ~ is a value of p .We further assume that preferences are quasi-linear in p , that is there exists a value function of the form v A , p = u A + L p , where L is a positive linear function .2 The quasi-linear form immediately qualifies money as a measure of preference differences , and establishes a monetary scale for u A .DEFINITION 8 .Let v A , p = u A + L p represent , where p is the attribute representing money .We call u A a willingnessto-pay wtp function .Note that wtp may also refer to the seller 's `` willingness to accept '' function .The wtp u A is a cardinal function , unique up to a positive linear transformation .Sincewhere \u03b81 , \u03b81 E \u0398 , the domain of A the wtp function can be used to choose among priced outcomes .1This proof and most other proofs in this paper are omitted for space consideration , and are available in an online appendix .2In many procurement applications , the deals in question are small relative to the enterprises involved , so the quasi-linearity assumption is warranted .This assumption can be relaxed to a condition called corresponding tradeoffs 17 , which does not require the value over money to be linear .To simplify the presentation , however , we maintain the stronger assumption .Naturally , elicitation of wtp function is most intuitive when using direct monetary values .In other words , we elicit a function in which L p = p , so v A , p = u A + p .We define a reference outcome \u03b80 , p0 , and assuming continuity of p , for any assignment \u03b8\u02c6 there exists a p\u02c6 such that \u02c6\u03b8 , \u02c6p \u223c \u03b80 , p0 .As v is normalized such that v \u03b80 , p0 = 0 , p\u02c6 is interpreted as the wtp for \u02c6\u03b8 , or the reserve price of \u02c6\u03b8 .PROPOSITION 7 .The wtp function is an MVF over differences in the reserve prices .We note that the wtp function is used extensively in economics , and that all the development in Section 3 could be performed directly in terms of wtp , relying on quasi-linearity for preference measurement , and without formalization using MVFs .This formalization however aligns this work with the fundamental difference independence theory by Dyer and Sarin .In addition to facilitating the detection of GAI structure , the CDI condition supports elicitation using local queries , similar to how CAI is used by Braziunas and Boutilier 6 .We adopt their definition of conditional set of Ir , noted here Sr , as the set of neighbors of attributes in Ir not including the attributes of Ir .Clearly , Sr is the separating set of Ir in the CDI map , hence CDI Ir , Vr , whereEliciting the wtp function therefore amounts to eliciting the utility wtp of one full outcome the reference outcome \u03b80 , and then obtaining the function over each maximal clique using monetary differences between its possible assignments technique known as pricing out 17 , keeping the variables in the conditional set fixed .These ceteris paribus elicitation queries are local in the sense that the agent does not need to consider the values of the rest of the attributes .Furthermore , in eliciting MVFs we can avoid the global scaling step that is required for EU functions .Since the preference differences are extracted with respect to specific amounts of the attribute p , the utility is already scaled according to that external measure .Hence , once the conditional utility functions u Ij are obtained , we can calculate u A according to 4 .This last step may require in the worst case computation of a number of terms that is exponential in the number of max cliques .In practice however we do not expect the intersection of the cliques to go that deep ; intersection of more than just a few max cliques would normally be empty .To take advantage of that we can use the search algorithm suggested by Braziunas and Boutilier 6 , which efficiently finds all the nonempty intersections for each clique .As shown , the wtp function can be used directly for pairwise comparisons of priced outcomes .Another preference query often treated in the literature is optimization , or choice of best outcome , possibly under constraints .Typical decisions about exchange of a good or service exhibit what we call first-order preferential independence FOPI , under which most or all single attributes have a natural ordering of quality , independent of the values of the rest .3 For example , when choosing a PC we always prefer more memory , faster CPU , longer warranty , and so on .Under FOPI , the unconstrained optimization of 3This should not be mistaken with the highly demanding condition of mutual preferential independence , that requires all tradeoffs between attributes to be independent .unpriced outcomes is trivial , hence we consider choice among attribute points with prices .Since any outcome can be best given enough monetary compensation , this problem is not well-defined unless the combinations are constrained somehow .A particularly interesting optimization problem arises in the context of negotiation , where we consider the utility of both buyers and sellers .The multiattribute matching problem MMP 12 is concerned with finding an attribute point that maximizes the surplus of a trade , or the difference between the utilities of the buyer and the seller , ub A \u2212 us A .GAI , as an additive decomposition , has the property that if ub and us are in GAI form then ub A \u2212 us A is in GAI form as well .We can therefore use combinatorial optimization procedures for GAI decomposition , based on the well studied variable elimination schemes e.g. , 15 to find the best trading point .Similarly , this optimization can be done to maximize surplus between a trader 's utility function and a pricing system that assigns a price to each level of each GAI element , and this way guide traders to their optimal bidding points .In the rest of the paper we develop a multiattribute procurement auction that builds on this idea .In the procurement setting a single buyer wishes to procure a single good , in some configuration 0 \u2208 \u0398 from one of the candidate sellers s1 , ... , sn .The buyer has some private valuation function wtp ub : \u0398 \u2192 R , and similarly each seller si has a private valuation function willingness-to-accept .For compliance with the procurement literature we refer to seller si 's valuation as a cost function , denoted by ci .The multiattribute allocation problem MAP 19 is the welfare optimization problem in procurement over a discrete domain , and it is defined as : i \u2217 , 0 \u2217 = arg max ub 0 \u2212 ci 0 .5 i , \u03b8 To illustrate the need for a GAI price space we consider the case of traders with non-additive preferences bidding in an additive price space such as in PK 's auction AD .If the buyer 's preferences are not additive , choosing preferred levels per attribute as in auction AD admits undesired combinations and fails to guide the sellers to the efficient configurations .Non-additive sellers face an exposure problem , somewhat analogous to traders with complementary preferences that participate in simultaneous auctions .A value a1 for attribute a may be optimal given that the value of another attribute b is b1 , and arbitrarily suboptimal given other values of b. Therefore bidding a1 and b1 may result in a poor allocation if the seller is '' outbid '' on b1 but left '' holding '' a1 .4 Instead of assuming full additivity , the auction designer can come up with a GAI preference structure that captures the set of common interdependencies between attributes .If traders could bid on clusters of interdependent attributes , it would solve the problems discussed above .For example , if a and b are interdependent meaning CDI a , b does not hold , we should be able to bid on the cluster ab .If b in turn depends on c , we need another cluster bc .This is still better than a general pricing structure that solicits bids for the cluster abc .We stress that each trader may have a different set of interdependencies , and therefore to be completely general the 4If only the sellers are non-additive , the auction design could potentially alleviate this problem by collecting a new set of bids each round and `` forgetting '' bids from previous rounds , and also guiding non-additive sellers to bid on only one level per attribute in order to avoid undesired combinations .GAI structure needs to account for all .5 However , in practice many domains have natural dependencies that are mutual to traders .Assume that preferences of all traders are reflected in a GAI structure I1 , ... , Ig .We call each Ir a GAI element , and any assignment to Ir a sub-configuration .We use 0r to denote the subconfiguration formed by projecting configuration 0 to element Ir .Note that a consistent cover \u03b11 , ... , \u03b1g represents a full configuration , which we denote by \u03b11 , ... , \u03b1g .A GAI network is a graph G whose nodes correspond to the GAI elements I1 , ... , Ig , with an edge between Ir , Ir iff Ir \u2229 Ir = ~ \u2205 .Equivalently , a GAI network is the clique graph of a CDI-map .In order to justify the compact pricing structure we require that for any set of optimal configurations wrt a given utility function , with a corresponding collection of sub-configurations y , all consistent covers in y must be optimal configurations as well .To ensure this see Lemmas 8 and 10 , we assume a GAI decomposition in the form of a tree or a forest the GAI tree .A tree structure can be achieved for any set of CDI conditions by triangulation of the CDI-map prior to construction of the clique graph GAI networks and GAI trees are defined by Gonzales and Perny 14 , who also provide a triangulation algorithm .Under GAI , the buyer 's value function ub and sellers ' cost functions ci can be decomposed as in 1 .We use fb , r and fi , r to denote the local functions of buyer and sellers respectively , according to 4 .For example , consider the procurement of a good with three attributes , a , b , c. Each attribute 's domain has two values e.g. , a1 , a2 is the domain of A .Let the GAI structure be I1 = a , b , I2 = b , c .Figure 1 shows the simple CDI map and the corresponding GAI network , which is a GAI tree .Here , subconfigurations are assignments of the form a1b1 , a1b2 , b1c1 , and so on .The set of sub-configurations a1b1 , b1c1 is a consistent cover , corresponding to the configuration a1b1c1 .In contrast , the set a1b1 , b2c1 is inconsistent .We define an iterative multiattribute auction that maintains a GAI pricing structure : that is , a price pt \u00b7 corresponding to each subconfiguration of each GAI-tree element .The price of a configuration 0 at time t is defined asBidders submit sub-bids on sub-configurations and on an additional global discount term \u0394 .6 Sub-bids are always submitted for current prices , and need to be resubmitted at each round , therefore they do not need to explicitly carry the price .The set of full bids of a seller contains all consistent covers that can be generated from that seller 's current set of sub-bids .The existence of a full bid over a configuration \u03b8 represents the seller 's willingness to accept the price pt \u03b8 for supplying \u03b8 .At the start of the auction , the buyer reports to the auction , not to sellers her complete valuation in GAI form .The initial prices of sub-configurations are set at some level above the buyer 's valuations , that is , p1 \u03b8r > fb , r \u03b8r for all \u03b8r .The discount \u0394 is initialized to zero .The auction has the dynamics of a descending clock auction : at each round t , bids are collected for current prices and then prices are reduced according to price rules .A seller is considered active in a round if she submits at least one full bid .In round t > 1 , only sellers who where active in round t \u2212 1 are allowed to participate , and the auction terminates when no more than a single seller is active .We denote the set of sub-bids submitted by si by Bit , and the corresponding set of full bids isIn our example , a seller could submit sub-bids on a set of subconfigurations such as a1b1 and b1c1 , and that combines to a full bid on a1b1c1 .The auction proceeds in two phases .In the first phase A , at each round t the auction computes a set of preferred sub-configurations Mt. Section 5.4 shows how to define Mt to ensure convergence , and Section 5.5 shows how to efficiently compute it .In phase A , the auction adjusts prices after each round , reducing the price of every sub-configuration that has received a bid but is not in the preferred set .Let be the prespecified price increment parameter .Specifically , the phase A price change rule is applied to all \u03b8r \u2208 Sni = 1 Bti \\ Mt : The RHS maximum ensures that prices do not get reduced below the buyer 's valuation in phase A. Let Mt denote the set of configurations that are consistent covers in Mt :The auction switches to phase B when all active sellers have at least one full bid in the buyer 's preferred set :Let T be the round at which SWITCH becomes true .At this point , the auction selects the buyer-optimal full bid \u03b7i for each seller si .In phase B , si may bid only on \u03b7i .The prices of sub-configurations are fixed at pT \u00b7 during this phase .The only adjustment in phase B is to \u0394 , which is increased in every round by .The auction terminates when at most one seller if exactly one , designate it s\u02c6i is active .There are four distinct cases :The overall auction is described by high-level pseudocode in Algorithm 1 .As explained in Section 5.4 , the role of phase A is to guide the traders to their efficient configurations .Phase B is a one-dimensional competition over the surplus that remaining seller candidates can provide to the buyer .In Section 5.5 we discuss the computational tasks associated with the auction , and Section 5.6 provides a detailed example .implement allocation and payment to winning sellerWhen the optimal solution to MAP 5 provides negative welfare and sellers do not bid below their cost , the auction terminates in phase A , no trade occurs and the auction is trivially efficient .We therefore assume throughout the analysis that the optimal seller , configuration pair provides non-negative welfare .The buyer profit from a configuration \u03b8 is defined as7and similarly \u03c0i \u03b8 = p \u03b8 \u2212 ci \u03b8 is the profit of si .In addition , for \u03bc \u2286 1 , ... , g we denote the corresponding set of subconfigurations by \u03b8\u03bc , and define the profit from a configuration \u03b8 over the subset \u03bc asThe function \u03c3i : \u0398 \u2192 R represents the welfare , or surplus function ub \u00b7 \u2212 ci \u00b7 .For any price system p ,7We drop the t superscript in generic statements involving price and profit functions , understanding that all usage is with respect to the currently applicable prices .Since we do not assume anything about the buyer 's strategy , the analysis refers to profit and surplus with respect to the face value of the buyer 's report .The functions \u03c0i and \u03c3i refer to the true cost functions of si .Intuitively , an SB seller follows a myopic best response strategy MBR , meaning they bid myopically rather than strategically by optimizing their profit with respect to current prices .To calculate Bti sellers need to optimize their current profit function , as discussed in Section 4.2 .The following lemma bridges the apparent gap between the compact pricing and bid structure and the global optimization performed by the traders .LEMMA 8 .Let \u03a8 be a set of configurations , all maximizing profit for a trader \u03c4 seller or buyer at the relevant prices .Let 4 = \u03b8r | \u03b8 \u2208 \u03a8 , r \u2208 1 , ... , g .Then any consistent cover in 4 is also a profit-maximizing configuration for \u03c4 .Proof sketch full proof in the online appendix : A source of an element \u03b8r is a configuration \u03b8\u02dc \u2208 \u03a8 from which it originated mean\u02dc\u03b8r = \u03b8r .Starting from the supposedly suboptimal cover \u03b81 , we build a series of covers \u03b81 , ... , \u03b8L .At each \u03b8j we flip the value of a set of sub-configurations \u03bcj corresponding to a subtree , with the sub-configurations of the configuration \u02c6\u03b8j \u2208 \u03a8 which is the source of the parent \u03b3j of \u03bcj .That ensures that all elements in \u03bcj \u222a \u03b3j have a mutual source \u02c6\u03b8j .We show that all \u03b8j are consistent and that they must all be suboptimal as well , and since all elements of \u03b8L have a mutual source , meaning \u03b8L = \u02c6\u03b8L \u2208 \u03a8 , it contradicts optimality of \u03a8 .Next we consider combinations of configurations that are only within some \u03b4 of optimality .LEMMA 10 .Let \u03a8 be a set of configurations , all are within \u03b4 of maximizing profit for a trader \u03c4 at the prices , and 4 defined as in Lemma 8 .Then any consistent cover in 4 is within \u03b4g of maximizing utility for \u03c4 .This bound is tight , that is for any GAI tree and a non-trivial domain we can construct a set \u03a8 as above in which there exists a consistent cover whose utility is exactly \u03b4g below the maximal .Next we formally define Mt. For connected GAI trees , Mt is the set of sub-configurations that are part of a configuration within of optimal .When the GAI tree is in fact a forest , we apportion the error proportionally across the disconnected trees .Let G be comprised of trees G1 , ... , Gh .We use \u03b8j to denote the projection of a configuration \u03b8 on the tree Gj , and gj denotes the number of GAI elements in Gj .Let ej = gj \u2212 1 denote the number of edges in Gj .We define the connectivity parameter , e = maxj = 1 , ... , h ej .As shown below , this connectivity parameter is an important factor in the performance of the auction .In the fully additive case this loss of efficiency reduces to .On the other extreme , if the GAI network is connected then e + 1 = g .We also note that without assuming any preference structure , meaning that the CDI map is fully connected , g = 1 and the efficiency loss is again .Lemmas 12 through 15 show that through the price system , the choice of buyer preferred configurations , and price change rules , Phase A leads the buyer and each of the sellers to their mutually efficient configuration .LEMMA 12 .max\u03b8E\u0398 \u03c0tb \u03b8 does not change in any round t of phase A. PROOF .We prove the lemma per each tree Gj .The optimal values for disconnected components are independent of each other hence if the maximal profit for each component does not change the combined maximal profit does not change as well .If the price of \u03b8 ' j was reduced during phase A , that is pt +1 \u03b8 ` j = pt \u03b8 ` j \u2212 \u03b4 , it must be the case that some w \u2264 gj sub-configurations of \u03b8 ' j are not in Mtj , and \u03b4 = w ~This is true for any configuration whose profit improves , therefore the maximal buyer profit does not change during phase A. LEMMA 13 .The price of at least one sub-configuration must be reduced at every round in phase A. PROOF .In each round t < T of phase A there exists an active seller i for whom Bti \u2229 Mt = \u2205 .However to be active in round t , Bti = ~ \u2205 .Let \u03b8\u02c6 \u2208 Bti .If \u2200 r.\u02c6\u03b8r \u2208 Mt , then \u03b8\u02c6 \u2208 Mt by definition of Mt. Therefore there must be \u02c6\u03b8r \u2208 ~ Mt. We need to prove that for at least one of these sub-configurations , \u03c0tb \u02c6\u03b8r < 0 to ensure activation of rule A .\u02c6\u03b8r \u2208 \u00af Mt , \u03c0tb \u02c6\u03b8r \u2265 0 .Assume for contradiction that for any For simplicity we assume that for any \u03b8r , \u03c01b \u03b8r is some product of ~ g that can be easily done , and that ensures that \u03c0tb \u02c6\u03b8r = 0 because once profit hits 0 it can not increase by rule A .If \u02c6\u03b8r \u2208 \u00af Mt , \u2200 r = 1 , ... , g then \u03c0tb \u02c6\u03b8 = 0 .This contradicts Lemma 12 since we set high initial prices .Therefore some of the sub-configurations of \u03b8\u02c6 are in Mt , and WLOG we assume it is \u02c6\u03b81 , ... , \u02c6\u03b8k .To be in Mt these k sub-configurations must have been in some preferred full configuration , meaning there exists \u03b8 ' \u2208 Mt such thatSince \u03b8\u02c6 \u2208 / Mt It must be that case that \u03c0tb \u02c6\u03b8 < \u03c0tb \u03b8 ' .ThereforeHence for at least one r \u2208 k + 1 , ... , g , \u03c0tb \u03b8 ` r > 0 contradicting rule A .Mt j = \u03b8r | \u03c0tb \u03b8j \u2265 max \u03b8 ~ j E\u0398j Then define Mt = Shj = 1 Mtj .LEMMA 14 .When the solution to MAP provides positive surplus , and at least the best seller is SB , the auction must reach phase B. PROOF .By Lemma 13 prices must go down in every round of phase A. Rule A sets a lower bound on all prices therefore the auction either terminates in phase A or must reach condition SWITCH .We set the initial prices are high such that max\u03b8E\u0398 \u03c01b \u03b8 < 0 , and by Lemma 12 max\u03b8E\u0398 \u03c0tb \u03b8 < 0 during phase A .We assume that the efficient allocation \u03b8 * , i * provides positive welfare , that is \u03c3i * \u03b8 * = \u03c0tb \u03b8 * + \u03c0t i * \u03b8 * > 0 .si * is SB therefore she will leave the auction only when \u03c0t i * \u03b8 * < 0 .This can happen only when \u03c0tb \u03b8 * > 0 , therefore si * does not drop in phase A hence the auction can not terminate before reaching condition SWITCH .LEMMA 15 .For SB seller si , \u03b7i is e + 1 efficient .PROOF .\u03b7i is chosen to maximize the buyer 's surplus out of Bti at the end of phase A .Since Bti \u2229 Mt = ~ \u2205 , clearly \u03b7i \u2208 Mt. From Corollary 11 and Corollary 9 , for any \u02dc\u03b8 ,This establishes the approximate bilateral efficiency of the results of Phase A at this point under the assumption of SB .Based on Phase B 's simple role as a single-dimensional bidding competition over the discount , we next assert that the overall result is efficient under SB , which in turn proves to be an approximately ex-post equilibrium strategy in the two phases .LEMMA 16 .If sellers si and sj are SB , and si is active at least as long as sj is active in phase B , thenFollowing PK , we rely on an equivalence to the one-sided VCG auction to establish incentive properties for the sellers .In the onesided multiattribute VCG auction , buyer and sellers report valuation and cost functions \u02c6ub , \u02c6ci , and the buyer pays the sell-side VCG payment to the winning seller .DEFINITION 11 .Let \u03b8 * , i * be the optimal solution to MAP .Let \u02dc\u03b8 , \u02dci be the best solution to MAP when i * does not participate .The sell-side VCG payment isIt is well-known that truthful bidding is a dominant strategy for sellers in the one-sided VCG auction .It is also shown by PK that the maximal regret for buyers from bidding truthfully in this mechanism is ub \u03b8 * \u2212 ci * \u03b8 * \u2212 ub \u02dc\u03b8 \u2212 \u02c6c\u02dci \u02dc\u03b8 , that is , the marginal product of the efficient seller .Usually in iterative auctions the VCG outcome is only nearly achieved , but the deviation is bounded by the minimal price change .We show a similar result , and therefore define \u03b4-VCG payments .When payment is guaranteed to be \u03b4-VCG sellers can only affect their payment within that range , therefore their gain by falsely reporting their cost is bounded by 2\u03b4 .In practice , however , sellers are unlikely to have the information that would let them exploit that potential gain .They are much more likely to lose from bidding on their less attractive configurations .The size of the price space maintained in the auction is equal to the total number of sub-configurations , meaning it is exponential in maxr | Ir | .This is also equivalent to the tree-width plus one of the original CDI-map .For the purpose of the computational analysislet dj denote the domain of attribute aj , and I = Sg jEIr dj , r = 1 the collection of all sub-configurations .The first purpose of this sub-section is to show that the complexity of all the computations required for the auction depends only on | I | , i.e. , no computation depends on the size of the full exponential domain .We are first concerned with the computation of Mt. Since Mt grows monotonically with t , a naive application of optimization algorithm to generate the best outcomes sequentially might end up enumerating significant portions of the fully exponential domain .However as shown below this plain enumeration can be avoided .PROPOSITION 20 .The computation of Mt can be done in time O | I | 2 .Moreover , the total time spent on this task throughout the auction is O | I | | I | + T .The bounds are in practice significantly lower , based on results on similar problems from the probabilistic reasoning literature 18 .One of the benefits of the compact pricing structure is the compact representation it lends for bids : sellers submit only sub-bids , and therefore the number of them submitted and stored per seller is bounded by | I | .Since the computation tasks : Bti = ~ \u2205 , rule SWITCH and choice of \u03b7i are all involving the set Bit , it is important to note that their performance only depend on the size of the set Bit , since they are all subsumed by the combinatorial optimization task over Bti or Bti \u2229 Mt. Next , we analyze the number of rounds it takes for the auction to terminate .Phase B requires maxi = 1 , ... n \u03c0Ti \u03b7i ~ 1 .Since this is equivalent to price-only auctions , the concern is only with the time complexity of phase A .Since prices can not go below fb , r \u03b8r , an upper bound on the number of rounds required isHowever phase A may converge faster .Let the initial negative profit chosen by the auctioneer be m = max\u03b8E\u0398 \u03c01b \u03b8 .In the worst case phase A needs to run until \u2200 \u03b8 \u2208 \u0398.\u03c0b \u03b8 = m .This happens for example when \u2200 \u03b8r \u2208 I.pt \u03b8r = fb , r \u03b8r + mg .In general , the closer the initial prices reflect buyer valuation , the faster phase A converges .One extreme is to choose p1 \u03b8r =resents the buyer 's valuation , and f1 and f2 costs of the sellers s1 and s2 .fb , r \u03b8r + mg .That would make phase A redundant , at the cost of full initial revelation of buyer 's valuation as done in other mechanisms discussed below .Between this option and the other extreme , which is ` d\u03b1 , \u03b1\u02c6 G I , p1 \u03b1 = p1 \u02c6\u03b1 the auctioneer has a range of choices to determine the right tradeoff between convergence time and information revelation .In the example below the choice of a lower initial price for the domain of I1 provides some speedup by revealing a harmless amount of information .Another potential concern is the communication cost associated with the Japanese auction style .The sellers need to send their bids over and over again at each round .A simple change can be made to avoid much of the redundant communication : the auction can retain sub-bids from previous rounds on sub-configurations whose price did not change .Since combinations of sub-bids from different rounds can yield sub-optimal configurations , each sub-bid should be tagged with the number of the latest round in which it was submitted , and only consistent combinations from the same round are considered to be full bids .With this implementation sellers need not resubmit their bid until a price of at least one sub-configuration has changed .We use the example settings introduced in Section 5.2 .Recall that the GAI structure is I1 = fa , b , I2 = fb , c note that e = 1 .Table 1 shows the GAI utilities for the buyer and the two sellers s1 , s2 .The efficient allocation is s1 , a1b2c1 with a surplus of 45 .The maximal surplus of the second best seller , s2 , is 25 , achieved by a1b1c1 , a2b1c1 , and a2b2c2 .We set all initial prices over I1 to 75 , and all initial prices over I2 to 90 .We set = 8 , meaning that price reduction for sub-configurations is 4 .Though with these numbers it is not guaranteed by Theorem 17 , we expect s1 to win on either the efficient allocation or on a1b2c2 which provides a surplus of 39 .The reason is that these are the only two configurations which are within e + 1 = 16 of being efficient for s1 therefore one of them must be chosen by Phase A , and both provide more than surplus over s2 's most efficient configuration and this is sufficient in order to win in Phase B .Table 2 shows the progress of phase A. Initially all configuration have the same cost 165 , so sellers bid on their lowest cost configuration which is a2b1c1 for both with profit 80 to s1 and 90 to s2 , and that translates to sub-bids on a2b1 and b1c1 .M1 contains the sub-configurations a2b2 and b2c1 of the highest value configuration a2b2c1 .Price is therefore decreased on a2b1 and b1c1 .After the price change , s1 has higher profit 74 on a1b2c2 and she therefore bids on a1b2 and b2c2 .Now round 2 their prices go down , reducing the profit on a1b2c2 to 66 and therefore in round 3 s1 prefers a2b1c2 profit 67 .After the next price change the configurations a1b2c1 and a1b2c2 both become optimal profit 66 , and the subbids a1b2 , b2c1 and b2c2 capture the two .These configurations stay optimal for another round 5 , with profit 62 .At this point s1 has a full bid in fact two full bids : a1b2c2 and a1b2c1 in M5 , andtherefore she no longer changes her bids since the price of her optimal configurations does not decrease .s2 sticks to a2b1c1 during the first four rounds , switching to a1b1c1 in round 5 .It takes four more rounds for s2 and Mt to converge M10 nB10 2 = fa1b1c1 .After round 9 the auction sets \u03b71 = a1b2c1 which yields more buyer profit than a1b2c2 and \u03b72 = a1b1c1 .For the next round 10 \u0394 = 8 , increased by 8 for each subsequent round .Note that p9 a1b1c1 = 133 , and c2 a1b1c1 = 90 , therefore \u03c0T2 \u03b72 = 43 .In round 15 , \u0394 = 48 meaning p15 a1b1c1 = 85 and that causes s2 to drop out , setting the final allocation to s1 , a1b2c1 and p15 a1b2c1 = 157 \u2212 48 = 109 .That leaves the buyer with a profit of 31 and s1 with a profit of 14 , less than below the VCG profit 20 .The welfare achieved in this case is optimal .To illustrate how some efficiency loss could occur consider the case that c1 b2c2 = 60 .In that case , in round 3 the configuration a1b2c2 provides the same profit 67 as a2b1c2 , and s1 bids on both .While a2b1c2 is no longer optimal after the price change , a1b2c2 remains optimal on subsequent rounds because b2c2 G Mt , and the price change of a1b2 affects both a1b2c2 and the efficient configuration a1b2c1 .When phase A ends B101 n M10 = fa1b2c2 so the auction terminates with the slightly suboptimal configuration and surplus 40 .", "author_keywords_stem": ["auction", "multiattribut auction", "prefer handl"]}