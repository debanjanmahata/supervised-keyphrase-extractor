{"abstract": "Up to now , the way institutions and organizations have been used in the development of open systems has not often gone further than a useful heuristics .In order to develop systems actually implementing institutions and organizations , formal methods should take the place of heuristic ones .The paper presents a formal semantics for the notion of institution and its components abstract and concrete norms , empowerment of agents , roles and defines a formal relation between institutions and organizational structures .As a result , it is shown how institutional norms can be refined to constructs organizational structures which are closer to an implemented system .It is also shown how such a refinement process can be fully formalized and it is therefore amenable to rigorous verification .", "id": "I-33", "reader_keywords_stem": ["formal method", "institut norm", "abstract constraint", "formal for repres organiz structur", "entiti", "properti", "descript logic", "dynam logic", "terminolog axiom", "role", "infrastructur"], "combined_keywords_stem": ["formal method", "institut norm", "abstract constraint", "formal for repres organiz structur", "entiti", "properti", "descript logic", "dynam logic", "terminolog axiom", "role", "infrastructur", "institut", "norm", "logic", "organiz structur"], "introduction": "The opportunity of a `` technology transfer '' from the field of organizational and social theory to distributed AI and multiagent systems MASs has long been advocated 8 .In MASs the application of the organizational and institutional metaphors to system design has proven to be useful for the development of methodologies and tools .In many cases , however , the application of these conceptual apparatuses amounts to mere heuristics guiding the high level design of the systems .It is our thesis that the application of those apparatuses can be pushed further once their key concepts aretreated formally , that is , once notions such as norm , role , structure , etc. obtain a formal semantics .This has been the case for agent programming languages after the relevant concepts borrowed from folk psychology belief , intention , desire , knowledge , etc. have been addressed in comprehensive formal logical theories such as , for instance , BDICTL 22 and KARO 17 .As a matter of fact , those theories have fostered the production of architectures and programming languages .What is lacking at the moment for the design and development of open MASs is , in our opinion , something that can play the role that BDI-like formalisms have played for the design and development of single-agent architectures .Aim of the present paper is to fill this gap with respect to the notion of institution providing formal foundations for the application of the institutional metaphor and for its relation to the organizational one .The main result of the paper consists in showing how abstract constraints institutions can be step by step refined to concrete structural descriptions organizational structures of the to-be-implemented system , bridging thus the gap between abstract norms and concrete system specifications .Concretely , in Section 2 , a logical framework is presented which provides a formal semantics for the notions of institution , norm , role , and which supports the account of key features of institutions such as the translation of abstract norms into concrete and implementable ones , the institutional empowerment of agents , and some aspects of the design of norm enforcement .In Section 3 the framework is extended to deal with the notion of the infrastructure of an institution .The extended framework is then studied in relation to the formalism for representing organizational structures presented in 11 .In Section 4 some conclusions follow .", "title": "A Formal Road from Institutional Norms to Organizational Structures", "method": "Social theory usually thinks of institutions as `` the rules of the game '' 18 , 23 .From an agent perspective institutions are , to paraphrase this quote , `` the rules of the various games agents can play in order to interact with one another '' .To assume an institutional perspective on MASs means therefore to think of MASs in normative terms : ... law , computer systems , and many other kinds of organizational structure may be viewed as instances of normative systems .We use the term to refer to any set of interacting agents whose behavior can usefully be regarded as governed by norms 15 , p. 276 .The normative system perspective on institutions is , as such , nothing original and it is already a quite acknowledged position within the community working on electronic institutions , or eInstitutions 26 .What has not been sufficiently investigated and understood with formal methods is , in our view , the question : what does itamount to , for a MAS , to be put under a set of norms ?Or in other words : what does it mean for a designer of an eInstitution to state a set of norms ?We advance a precise thesis on this issue , which is also inspired by work in social theory : Now , as the original manner of producing physical entities is creation , there is hardly a better way to describe the production of moral entities than by the word ` imposition ' impositio .For moral entities do not arise from the intrinsic substantial principles of things but are superadded to things already existent and physically complete 21 , pp. 100-101 .By ignoring for a second the philosophical jargon of the Seventeenth century we can easily extract an illuminating message from the excerpt : what institutions do is to impose properties on already existing entities .That is to say , institutions provide descriptions of entities by making use of conceptualizations that are not proper of the common descriptions of those entities .For example , that cars have wheels is a common factual property , whereas the fact that cars count as vehicles in some technical legal sense is a property that law imposes on the concept `` car '' .To say it with 25 , the fact that cars have wheels is a brute fact , while the fact that cars are vehicles is an institutional fact .Institutions build structured descriptions of institutional properties upon brute descriptions of a given domain .At this point , the step toward eInstitutions is natural .eInstitutions impose properties on the possible states of a MAS : they specify what are the states in which an agent i enacts a role r ; what are the states in which a certain agent is violating the norms of the institution , etc. .They do this via linking some institutional properties of the possible states and transitions of the system e.g. , agent i enacts role r to some brute properties of those states and transitions e.g. , agent i performs protocol No. 56 .An institutional property is therefore a property of system states or system transitions i.e. , a state type or a transition type that does not belong to a merely technical , or factual , description of the system .To sum up , institution are viewed as sets of norms normative system perspective , and norms are thought of as the imposition of an institutional description of the system upon its description in terms of brute properties .In a nutshell , institutions are impositions of institutional terminologies upon brute ones .The following sections provide a formal analysis of this thesis and show its explanatory power in delivering a rigorous understanding of key features of institutions .Because of its suitability for representing complex domain descriptions , the formal framework we will make use of is the one of Description Logics DL .The use of such formalism will also stress the idea of viewing institutions as the impositions of domain descriptions .The description logic language enabling the necessary expressivity expands the standard description logic language ALC 3 with relational operators ~ , \u25e6 , \u00ac , id to express complex transition types , and relational hierarchies H to express inclusion between transition types .Following a notational convention common within DL we denote this language with ALCH ~ , \u25e6 , \u00ac , id .where a and c are atomic transition types and , respectively , atomic state types .It is worth providing the intuitive reading of a couple of the operators and the constructs just introduced .In particular \u2200 \u03b1.ry has to be read as : `` after all executions of transitions of type \u03b1 , states of type ry are reached '' .The operator \u25e6 denotes the concatenation of transition types .The operator id applies to a state description ry and yields a transition description , namely , the transition ending in ry states .It is the description logic variant of the test operator in Dynamic Logic 5 .Notice that we use the same symbols ~ and \u00ac for denoting the boolean operators of disjunction and negation of both state and transition types .Atomic state types c are often indexed by an agent identifier i in order to express agent properties e.g. , dutch i , and atomic transition types a are often indexed by a pair of agent identifiers i , j e.g. , PAY i , j denoting the actor and , respectively , the recipient of the transition .By removing the agent identifiers from state types and transition types we obtain state type forms e.g. , dutch or rea r and transition type form e.g. , PAY .A terminological box henceforth TBox T = ~ \u0393 , A ~ consists of a finite set \u0393 of state type inclusion assertions ry1 ry2 , and of a finite set A of transition type inclusion assertions \u03b11 \u03b12 .The semantics of ALCH ~ , \u25e6 , \u00ac , id is model theoretical and it is given in terms of interpreted transition systems .As usual , state types are interpreted as sets of states and transition types as sets of state pairs .An interpreted transition system m is a model of a state type inclusion assertion ry1 ry2 if I ry1 \u2286 I ry2 .It is a model of a transition type inclusion assertion \u03b11 \u03b12 if I \u03b11 \u2286 I \u03b12 .An interpreted transition system m is a model of a TBox T = ~ \u0393 , A ~ if m is a model of each inclusion assertion in \u0393 and A. REMARK 1 .Derived constructs The correspondence between description logic and dynamic logic is well-known 31 .In fact , the language presented in Definitions 1 and 2 is a notational variant of the language of Dynamic Logic 51 without the iteration operator of transition types .As a consequence , some key constructs are still definable in ALCH ~ , \u25e6 , \u00ac , id .In particular we will make use of the following definition of the if-then-else transition type : if ry then \u03b11else \u03b12 = id ry \u25e6 \u03b11 ~ id \u00ac ry \u25e6 \u03b12 .Boolean operators are defined as usual .We will come back to some complexity features of this logic in Section 2.5 .We have upheld that institutions `` impose '' new system descriptions which are formulated in terms of sets of norms .The step toward a formal grounding of this view of institutions is now short : norms can be thought of as terminological axioms , and institutions as sets of terminological axioms , i.e. , terminological boxes .An institution can be specified as a terminological box Ins = Pins , Ains , where each inclusion statement in Pins and Ains models a norm of the institution .Obviously , not every TBox can be considered to be an institution specification .In particular , an institution specification Ins must have some precise linguistic relationship with the ` brute ' descriptions upon which the institution is specified .We denote by Gins the non-logical alphabet containing only institutional state and transition types , and by Gbrute the nonlogical alphabet containing those types taken to talk about , instead , ` brute ' states and transitions1 .A TBox Ins = Pins , Ains is an institution specification if :The definition states that an institution specification needs to be expressed on a language including institutional as well as brute terms 1 ; that a part of the specification concerns a description of mere institutional terms 3 ; and that there needs to be a part of the specification which connects institutional terms to brute ones 2 .Terminological axioms in Pbridge and Abridge formalize in DL the Searlean notion of counts-as conditional 25 , that is , rules stating what kind of meaning an institution gives to certain brute facts and transitions e.g. , checking box No. 4 in form No. 2 counts as accepting your personal data to be used for research purposes .A formal theory of counts-as statements has been thoroughly developed in a series of papers among which 10 , 13 .The technical content of the present paper heavily capitalizes on that work .Notice also that given the semantics presented in Definition 2 , if institutions can be specified via TBoxes then the meaning of such specifications is a set of interpreted transition systems , i.e. , the models of those TBoxes .These transitions systems can be in turn thought of as all the possible MASs which model the specified institution .To illustrate Definition 3 , and show its explanatory power , an example follows which depicts an essential phenomenon of institutions .EXAMPLE 1 .From abstract to concrete norms Consider an institution supposed to regulate access to a set of public web services .It may contain the following norm : `` it is forbidden to discriminate access on the basis of citizenship '' .Suppose now a system has to be built which complies with this norm .The first question is : what does it mean , in concrete , `` to discriminate on the basis of citizenship '' ?The system designer should make some concrete choices for interpreting the norm and these choices should be kept track of in order to explicitly link the abstract norm to its concrete interpretation .The problem can be represented as follows .The abstract norm is formalized by Formula 1 by making use of a standard reduction technique of deontic notions see 16 : the statement `` it is forbidden to discriminate on the basis of citizenship '' amounts to the statement `` after every execution of a transition of type DISCR i , j the system always ends up in a violation state '' .Together with the norm also some intuitive background knowledge about the discrimination action needs to be formalized .Here , as well as in the rest of the examples in the paper , we provide just that part of the formalization which is strictly functional to show how the formalism works in practice .Formulae 2 and 3 express two effect laws : if the requester j is Dutch then after all executions of transitions of type DISCR i , j j is accepted by i , whereas if it is not all the executions of the transitions of the same type have as an effect that it is not accepted .All formulae have to be read as schemata determining a finite number of subsumption expressions depending on the number of agents i , j considered .The rest of the axioms concern the translation of the abstract type DISCR i , j to concrete transition types .Formula 4 refines it by making explicit that a precise if-then-else procedure counts as a discriminatory act of agent i. Formulae 5 and 6 specify which messages of i to j count as acceptance and rejection .If the designer uses transition types SEND msg33 , i , j and SEND msg38 , i , j for the concrete system specification , then Formulae 5 and 6 can be thought of as bridge axioms connecting notions belonging to the institutional alphabet to accept , and to reject to concrete ones to send specific messages .Finally , Formulae 7 and 8 state two intuitive effect laws concerning the ACCEPT i , j and REJECT i , j types .It is easy to see , on the grounds of the semantics exposed in Definition 2 , that the following concrete inclusion statement holds w.r.t.This scenario exemplifies a pervasive feature of human institutions which , as extensively argued in 10 , should be incorporated by electronic ones .Current formal approaches to institutions , such as ISLANDER 6 , do not allow for the formal specification of explicit translations of abstract norms into concrete ones , and focus only on norms that can be specified at the concrete system specification level .What Example 1 shows is that the problem of the abstractness of norms in institutions can be formally addressed and can be given a precise formal semantics .The scenario suggests that , just by modifying an appropriate set of terminological axioms , it is possible for the designer to obtain a different institution by just modifying the sets of bridge axioms without touching the terminological axioms expressed only in the institutional language Lins .In fact , it is the case that a same set of abstract norms can be translated to different and even incompatible sets of concrete norms .This translation can nevertheless not be arbitrary 1 .EXAMPLE 2 .Acceptable and unacceptable translations of abstract norms Reconsider again the scenario sketched in Example 1 .The transition type DISCR i , j has been translated to a complex procedure composed by concrete transition types .Would any translation do ?Consider an alternative institution specification Ins ' containing Formulae 1-3 and the following translation rule :Would this formula be an acceptable translation of the abstract norm expressed in Formula 1 ?The axiom states that transitions where i receives $ 10 from j count as transitions of type DISCR i , j .Needless to say this is not intuitive , because the abstract transition type DISCR i , j obeys some intuitive conceptual constraints Formulae 2 and 3 that all its translations should also obey .In fact , the following inclusions would then hold in Ins ' :In fact , there properties of the transition type PAY j , i , $ 10 look at least awkward : if an agent is Dutch than by paying $ 10 it would be accepted , while if it was not Dutch the same action would make it not accepted .The problem is that the meaning of ` paying ' is not intuitively subsumed by the meaning of ` discriminating ' .In other words , a transition type PAY j , i , $ 10 does not intuitively yield the effects that a sub-type of DISCR i , j yields .It is on the contrary perfectly intuitive that Formula 9 obeys the constraints in Formulae 2 and 3 , which it does , as it can be easily checked on the grounds of the semantics .It is worth stressing that without providing a model-theoretic semantics for the translation rules linking the institutional notions to the brute ones , it would not be so straightforward to model the logical constraints to which the translations are subjected Example 2 .This is precisely the advantage of viewing translation rules as specific terminological axioms , i.e. , \u0393bridge and Abridge , working as a bridge between two languages Definition 3 .In 12 , we have thoroughly compared this approach with approaches such as 9 which conceive of translation rules as inference rules .The two examples have shown how our approach can account for some essential features of institutions .In the next section the same framework is applied to provide a formal analysis of the notion of role .Viewing institutions as the impositions of institutional descriptions on systems ' states and transitions allows for analyzing the normative system perspective itself i.e. , institutions are sets of norms at a finer granularity .We have seen that the terminological axioms specifying an institution concern complex descriptions of new institutional notions .Some of the institutional state types occurring in the institution specification play a key role in structuring the specification of the institution itself .The paradigmatic example in this sense 25 are facts such as `` agent i enacts role r '' which will be denoted by state types rea i , r .By stating how an agent can enact and ` deact ' a role r , and what normative consequences follow from the enactment of r , an institution describes expected forms of agents ' behavior while at the same time abstracting from the concrete agents taking part to the system .The sets of norms specifying an institution can be clustered on the grounds of the rea state types .For each relevant institutional state type e.g. , rea i , r , the terminological axioms which define an institution , i.e. , its norms , can be clustered in possibly overlapping sets of three different types : the axioms specifying how states of that institutional type can be reached e.g. , how an agent i can enact the role r ; how states of that type can be left e.g. , how an agent i can ` deact ' the a role r ; and what kind of institutional consequences do those states bear e.g. , what rights and power does agent i acquire by enacting role r .Borrowing the terminology from work in legal and institutional theory 23 , 25 , these clusters of norms can be called , respectively , institutive , terminative and status modules .Status modules We call status modules those sets of terminological axioms which specify the institutional consequences of the occurrence of a given institutional state-of-affairs , for instance , the fact that agent i enacts role r.If agent i enacts the buyer role and j the seller role , every time agent i bids b to j this action results in an institutional state testifying that the corresponding bid has been placed by i Formula 14 .Formula 15 states how the bidding action can be executed by sending a specific message to j SEND i , j , msg49 .Some observations are in order .As readers acquainted with deontic logic have probably already noticed , our treatment of the notionof obligation Formula 13 makes again use of a standard reduction approach 16 .More interesting is instead how the notion of institutional power is modeled .Essentially , the empowerment phenomenon is analyzed in term of two rules : one specifying the institutional effects of an institutional action Formula 14 , and one translating the institutional transition type in a brute one Formula 15 .Systems of rules of this type empower the agents enacting some relevant role by establishing a connection between the brute actions of the agents and some institutional effect .Whether the agents are actually able to execute the required ` brute ' actions is a different issue , since agent i can be in some states or even all states unable to effectuate a SEND i , j , msg49 transition .This is the case also in human societies : priests are empowered to give rise to marriages but if a priest is not in state of performing the required speech acts he is actually unable to marry anybody .There is a difference between `` being entitled '' to make a bid and `` being in state of '' making a bid 4 .In other words , Formulae 14 and 15 express only that agents playing the buyer role are entitled to make bids .The actual possibility of performing the required ` brute ' actions is not an institutional issue , but rather an issue concerning the implementation of an institution in a concrete system .We address this issue extensively in Section 33 .Institutive modules We call institutive modules those sets of terminological axioms of an institution specification describing how states with certain institutional properties can be reached , for instance , how an agent i can reach a state in which it enacts role r .They can be seen as procedures that the institution define in order for the agents to bring institutional states of affairs about .17 specifies instead the procedure counting as an action of type ENACT i , r .Such a procedure is performed through a system infrastructure s , which notifies to i that it has been registered as enacting role r after sending the necessary piece ofdata d SEND i , s , d , e.g. , a valid credit card number .Terminative modules Analogously , we call terminative modules those sets of terminological axioms stating how a state with certain institutional properties can be left .Rules of this kind state for instance how an agent can stop enacting a certain role .They can be thus thought of as procedures that the institution defines in order for the agent to see to it that certain institutional states stop holding .EXAMPLE 5 .A terminative module for roles Terminative modules for roles specify , for instance , how a transition type DEACT i , r can be executed which has as consequence the reaching of a state of type rea i , r :That is to say , i deacting a role r always leads to a state where 3See in particular Example 6 and Definition 5 i does not enact role r ; and i sending message No. 9 to a specific interface infrastructure s count as i deacting role r. Examples 3-5 have shown how roles can be formalized in our framework thereby getting a formal semantics : roles are also sets of terminological axioms concerning state types of the sort rea i , r .It is worth noticing that this modeling option is aligned with work on social theory addressing the concept of role such as 20 .In the previous sections we fully deployed the expressivity of the language introduced in Section 2.1 and used its semantics to provide a formal understanding of many essential aspects of institutions in terms of transition systems .This section spends a few words about the viability of performing automated reasoning in the logic presented .The satisfiability problem4 in logic ALCW ~ , \u25e6 , \u00ac , id is undecidable since transition type inclusion axioms correspond to a version of what in Description Logic are known as `` role-value maps '' and logics extending ALC with role-value maps are known to be undecidable 3 .Tractable i.e. , polynomial time decidable fragments of logic ALCW ~ , \u25e6 , \u00ac , id can however be isolated which still exhibit some key expressive features .One of them is logic ELW \u25e6 .It is obtained from description logic EL , which contains only state types intersection n , existential restriction 3 and T5 , but extended with the \u22a5 state type and with transition type inclusion axioms of a complex form : a1 o. ..o an C a with n finite number .Logic ELW \u25e6 is also a fragment of the well investigated description logic EL + + whose satisfiability problem has been shown in 2 to be decidable in polynomial time .Despite the very limited expressivity of this fragment , some rudimentary institutional specifications can still be successfully represented .Specifically , institutive and terminative modules can be represented which contain transition types inclusion axioms .Restricted versions of status modules can also be represented enabling two essential deontic notions : `` it is possible respectively , impossible to reach a violation state by performing a transition of a certain type '' , and `` it is possible respectively , impossible to reach a legal state by performing a transition of a certain type '' .To this aim language Lins would need to be expanded with a set of state types legal i 0 \u2264 i \u2264 n whose intuitive meaning is to denote legal states as opposed to states of type viol i .Fragments like ELW \u25e6 could be used as target logics within theory approximation approaches 24 by aiming at compiling TBoxes expressed in ALCW ~ , \u25e6 , \u00ac , id into approximations in those fragments .In discussing Example 3 we observed how `` being entitled '' to make a bid does not imply `` being in state of '' making a bid .In other words , an institution can empower agents by means of appropriate rules but this empowerment can remain dead letter .Similar 4This problem amounts to check whether a state description \u03b3 is satisfiable w.r.t. a given TBox T , i.e. , to check if there exists a model m of T such that 0 \u2282 Z \u03b3 .Notice that language ALCW ~ , \u25e6 , \u00ac , id contains negation and intersection of arbitrary state types .It is well-known that if these operators are available then all most typical reasoning tasks at the TBox level can be reduced to the satisfiability problem .5Notice therefore that EL is a seriously restricted fragment of ALC since it does not contain the negation operator for state types operators u and t1 remain thus undefinable .observations apply also to deontic notions : agents might be allowed to perform certain transactions under some relevant conditions but they might be unable to do so under those same conditions .We refer to this kind of problems as infrastructural .The implementation of an institution in a concrete system calls therefore for the design of appropriate infrastructures or artifacts 19 .The formal specification of an infrastructure amounts to the formal specification of interaction requirements , that is to say , the specification of which relevant transition types are executable and under what conditions .DEFINITION 4 .Infrastructures as TBoxes An infrastructure Inf = ~ \u0393inf , Ainf ~ for institution Ins is a TBox on Lbrute such that for all a \u2208 L Abridge there exist terminological axioms in \u0393inf of the following form : \u03b3 \u2261 \u2203 a. ~ a is executable exactly in \u03b3 states and \u03b3 \u2261 \u2203 \u00ac a. ~ the negation of a is executable exactly in \u03b3 states .In other words , an infrastructure specification states all and only the conditions under which an atomic brute transition type and its negation are executable , which occur in the brute alphabet of the bridge axioms of Ins .It states what can be in concrete done and under what conditions .EXAMPLE 6 .Infrastructure specification Consider the institution specified in Example 1 .A simple infrastructure Inf for that institution could contain for instance the following terminological axioms for any pair of different agents i , j and message type msg :Notice that the executability condition is just ~ .We call a concrete institution specification Ins an institution specification Ins coupled with an infrastructure specification Inf .A concrete institution obtained by joining the institution Ins = ~ \u0393ins , Ains ~ and the infrastructure Inf = ~ \u0393inf , Ainf ~ is a TBox Ins = ~ \u0393 , A ~ such that \u0393 = \u0393ins \u222a \u0393inf and A = Ains \u222a Ainf .Obviously , different infrastructures can be devised for a same institution giving rise to different concrete institutions which makes precise implementation choices explicit .Of particular relevance are the implementation choices concerning abstract norms like the one represented in Formula 13 .A designer can choose to regiment such norm 15 , i.e. , make violation states unreachable , via an appropriate infrastructure .EXAMPLE 7 .Regimentation via infrastructure specification Consider Example 3 and suppose the following translation rule to be also part of the institution :In other words , in states of type condition pay i , j , b the only executable brute actions are BANK i , j , b or CC i , j , b and , therefore , PAY i , j , b would necessarily be executed .As a result , the following inclusion does not hold with respect to the corresponding concrete institution : condition pay i , j , b ~ \u2203 \u00ac PAY i .viol i .This section briefly summarizes and adapts the perspective and results on organizational structures presented in 14 , 11 .We refer to that work for a more comprehensive exposition .Organizational structures typically concern the way agents interact within organizations .These interactions can be depicted as the links of a graph defined on the set of roles of the organization .Such links are then to be labeled on the basis of the type of interaction they stand for .First of all , it should be clear whether a link denotes that a certain interaction between two roles can , or ought to , or may etc. take place .Secondly , links should be labeled according to the transition type \u03b1 they refer to and the conditions \u03b3 in which that transition can , ought to , may etc. take place .Links in a formal specification of an organizational structure stand therefore for statements of the kind : `` role r can ought to , may execute \u03b1 w.r.t. role s if \u03b3 is the case '' .For the sake of simplicity , the following definition will consider only the `` can '' and `` ought-to '' interaction modalities .State and transition types in Lins \u222a Lbrute will be used to label the links of the structure .Interaction modalities can therefore be of an institutional kind or of a brute kind .where :cutability of the related \u03b1 in \u03b3 , whereas O `` ought '' denotes links to be interpreted in terms of the obligation to execute the related \u03b1 in \u03b3 .By the expressions r , s \u2208 C\u03b3 : \u03b1 and r , s \u2208 O\u03b3 : \u03b1 we mean therefore : agents enacting role r can and , respectively , ought to interact with agents enacting role s by performing \u03b1 in states of type \u03b3 .As shown in 11 such formal representations of organizational structures are of use for investigating the structural properties robustness , flexibility , etc. that a given organization exhibits .At this point all the formal means are put in place which allow us to formally represent institutions as well as organizational structures .The next and final step of the work consists in providing a formal relation between the two frameworks .This formal relation will make explicit how institutions are related to organizational structures and vice versa .In particular , it will become clear how a normative conception of the notion of role relates to a structural one , that is , how the view of roles as a sets of norms specifying how an agent can enact and deact the role , and what social status it obtains by doing that relates to the view of roles as positions within social structures .To translate a given concrete institution into a corresponding organizational structure we need a function t assigning pairs of roles to axioms .Let us denote with Sub the set of all state type inclusion statements y1 C y2 that can be expressed on Lins U Lbrute .Function t is a partial function Sub + Roles x Roles such that , for any x \u2208 Sub if x = rea i , r fl rea j , s fl y C 3\u03b1 .T executability or x = rea i , r fl rea j , s fl y C b ' \u03b1.viol i obligation then t x = r , s , where \u03b1 is an atomic transition-type indexed with a pair i , j .That is to say , executability and obligation laws containing the enactment configuration rea i , r fl rea j , s as a premise and concerning transition of types \u03b1 , with i actor and j recipient of the \u03b1 transition , are translated into role pairs r , s .A concrete institution CIns = \u0393 , A is said to correspond to an organizational structure OS and vice versa if , for every x \u2208 \u0393 :Intuitively , function t takes axioms from \u0393 i.e. , the set of state type terminological axioms of CIns and yields pairs of roles .Definition 7 labels the yielded pairs accordingly to the syntactic form of the translated axioms .More concretely , axioms of the form rea i , r fl rea j , s fl y C 3\u03b1 .T executability laws are translated into the pair r , s belonging to the executability dimension i.e. , C of the organizational structure w.r.t. the execution of \u03b1 under circumstances y. Analogously , axioms of the form rea i , r fl rea j , s fl y C b ' \u03b1.viol i obligation laws are translated into the pair r , s belonging to the obligation dimension i.e. , O of the organizational structure w.r.t. the execution of \u03b1 under circumstances y. Leaving technicalities aside , function t distills thus the terminological and infrastructural constraints of CIns into structural ones .The institutive , terminative and status modules of roles are translated into definitions of positions within a OS .From a design perspective the interpretation of Definition 7 is twofold .On the one hand from left to right , it can make explicit what the structural consequences are of a given institution supported by a given infrastructure .On the other hand from right to left , it can make explicit what kind of institution is actually implemented by a given organizational structure .Let us see this in some more details .Given a concrete institution CIns , Definition 7 allows a designer to be aware of the impact that specific terminological choices in particular , the choice of certain bridge axioms and infrastructural ones have at a structural level .Notice that Definition 7 supports the inference of links in a structure .By checking whether a given inclusion statement of the relevant syntactic form follows from CIns i.e. , the so-called subsumption problem of DL it is possible , via t , to add new links to the corresponding organizational structure .This can be recursively done by just adding any new inferred inclusion x to the previous set of axioms \u0393 , thus obtaining an updated institutional specification containing \u0393 U x .This process can be thought of as the inference of structural links from institutional specifications .In other words , it is possible to use institution specifications as inference tools for structural specifications .For instance , the infrastructural choice formalized in Example 7 implies that for the pair of roles buyer , seller , it is always the case that buyer , seller \u2208 CT : PAY i , j , b .This link follows from links buyer , seller \u2208 CT : BNK i , j , b and buyer , seller \u2208 CT : CC i , j , b on the grounds of the bridge axioms of the institution Formula 22 .Suppose now a designer to be interested in a system which , besides implementing an institution , also incorporates an organizational structure enjoying desirable structural properties such as flexibility , or robustness6 .By relating structural links to state type inclusions it is therefore possible to check whether adding a link in OS results in a stronger institutional specification , that is , if the corresponding inclusion statement is not already implied by Ins .To draw a parallelism with what just said in the previous paragraph , this process can be thought of as the inference of norms and infrastructural constraints from the specification of organizational structures .To give a simple example consider again Example 6 but from a reversed perspective .Suppose a designer wants a fully connected graph in the dimension CT : SEND i , j of the organizational structure .Exploiting Definition 7 , we would obtain a number of executability laws in the fashion of Formula 20 for all roles in Roles thus 21Roles1 axioms .Definition 7 establishes a correspondence between two essentially different perspectives on the design of open systems allowing for feedbacks between the two to be formally analyzed .One last observation is in order .While given a concrete institution an organizational structure can be in principle fully specified by checking for all finitely many relevant inclusion statements whether they are implied or not by the institution , it is not possible to obtain a full terminological specification from an organizational structure .This lies on the fact that in Definition 6 the strictly terminological information contained in the specification of an institution eminently , the set of transition type axioms A and therefore the bridge axioms is lost while moving to a structural description .This shows , in turn , that the added value of the specification of institutions lies precisely in the terminological link they establish between institutional and brute , i.e. , system level notions .", "conclusions": "The paper aimed at providing a comprehensive formal analysis of the institutional metaphor and its relation to the organizational one .The predominant formal tool has been description logic .TBoxes has been used to represent the specifications of institutions Definition 3 and their infrastructures Definition 6 , providing therefore a transition system semantics for a number of institutional notions Examples 1-7 .Multi-graphs has then been used to represent the specification of organizational structures Definition 6 .The last result presented concerned the definition of a formal correspondence between institution and organization specifications Definition 7 , which provides a formal way for switching between the two paradigms .All in all , these results deliver a way for relating abstract system specifications i.e. , institutions as sets of norms to specifications that are closer to an implemented system i.e. , organizational structures .", "author_keywords_stem": ["institut", "norm", "logic", "organiz structur"]}