{"abstract": "This article deals with the problem of collaborative learning in a multi-agent system .Here each agent can update incrementally its beliefs B the concept representation so that it is in a way kept consistent with the whole set of information K the examples that he has received from the environment or other agents .We extend this notion of consistency or soundness to the whole MAS and discuss how to obtain that , at any moment , a same consistent concept representation is present in each agent .The corresponding protocol is applied to supervised concept learning .The resulting method SMILE standing for Sound Multiagent Incremental LEarning is described and experimented here .Surprisingly some difficult boolean formulas are better learned , given the same learning set , by a Multi agent system than by a single agent .", "id": "I-10", "conclusions": "We have presented here and experimented a protocol for MAS online concept learning .The main feature of this collaborative learning mechanism is that it maintains a consistency property : though during the learning process each agent only receives and stores , with some limited redundancy , part of the examples received by the MAS , at any moment the current hypothesis is consistent with the whole set of examples .The hypotheses of our experiments do not address the issues of distributed MAS such as faults for instance messages could be lost or corrupted or other failures in general crash , byzantine faults , etc. .Nevertheless , our framework is open , i.e. , the agents can leave the system or enter it while the consistency mechanism is preserved .For instance if we introduce a timeout mechanism , even when a critic agent crashes or omits to answer , the consistency with the other critics within the remaining agents is entailed .In 1 , a similar approach has been applied to MAS abduction problems : the hypotheses to maintain , given an incomplete information , are then facts or statements .Further work concerns first coupling induction and abduction in order to perform collaborative concept learning when examples are only partially observed by each agent , and second , investigating partial memory learning : how learning is preserved whenever one agent or the whole MAS forgets some selected examples .", "reader_keywords_stem": ["multi-agent learn", "collabor concept learn", "learn process", "knowledg", "ma-consist", "increment learn", "agent", "updat mechan", "synchron"], "combined_keywords_stem": ["multi-agent learn", "collabor concept learn", "learn process", "knowledg", "ma-consist", "increment learn", "agent", "updat mechan", "synchron", "multi-agent learn"], "introduction": "This article deals with the problem of collaborative concept learning in a multi-agent system .6 introduces a characterisation of learning in multi-agent system according to the level of awareness of the agents .At level 1 , agents learn * The primary author of this paper is a student .in the system without taking into account the presence of other agents , except through the modification brought upon the environment by their action .Level 2 implies direct interaction between the agents as they can exchange messages to improve their learning .Level 3 would require agents to take into account the competencies of other agents , and be able to learn from observation of the other agents ' behaviour while considering them as independant entities and not indetermined part of the environment as in level 1 .We focus in this paper on level 2 , studying direct interaction between agents involved in a learning process .Each agent is assumed to be able to learn incrementally from the data he receives , meaning that each agent can update his belief set B to keep it consistent with the whole set of information K that he has received from the environment or from other agents .In such a case , we will say that he is a-consistent .Here , the belief set B represents hypothetical knowledge that can therefore be revised , whereas the set of information K represents certain knowledge , consisting of non revisable observations and facts .Moreover , we suppose that at least a part Bc of the beliefs of each agent is common to all agents and must stay that way .Therefore , an update of this common set Bc by agent r must provoke an update of Bc for the whole community of agents .It leads us to define what is the mas-consistency of an agent with respect to the community .The update process of the community beliefs when one of its members gets new information can then be defined as the consistency maintenance process ensuring that every agent in the community will stay masconsistent .This mas-consistency maintenance process of an agent getting new information gives him the role of a learner and implies communication with other agents acting as critics .However , agents are not specialised and can in turn be learners or critics , none of them being kept to a specific role .Pieces of information are distributed among the agents , but can be redundant .There is no central memory .The work described here has its origin in a former work concerning learning in an intentional multi-agent system using a BDI formalism 6 .In that work , agents had plans , each of them being associated with a context defining in which conditions it can be triggered .Plans each of them having its own context were common to the whole set of agents in the community .Agents had to adapt their plan contexts depending on the failure or success of executed plans , using a learning mechanism and asking other agents for examples plans successes or failures .However this work lacked a collective learning protocol enabling a real autonomy of the multi-agent system .The study of such a protocol is the object of the present paper .In section 2 we formally define the mas-consistency of an update mechanism for the whole MAS and we propose a generic update mechanism proved to be mas consistent .In section 3 we describe SMILE , an incremental multi agent concept learner applying our mas consistent update mechanism to collaborative concept learning .Section 4 describes various experiments on SMILE and discusses various issues including how the accuracy and the simplicity of the current hypothesis vary when comparing single agent learning and mas learning .In section 5 we briefly present some related works and then conclude in section 6 by discussing further investigations on mas consistent learning .", "evaluation": "In the following , we will learn a boolean formula that is a difficult test for the learning method : the 11-multiplexer see 4 .It concerns 3 address boolean attributes a0 , a1 , a2 and 8 data boolean attributes d0 , ... , d7 .Formulae f11 is satisfied if the number coded by the 3 address attributes is the number of a data attribute whose value is 1 .Its formula is the following : f11 = a0 n a1 n a2 n d7 V a0 n a1 n a2 n d6 V a0 n a1 n a2 n d5 V a0 n a1 n a2 n d4 V a0 n a1 n a2 n d3 V a0 n a1 n a2 n d2 V a0 n a1 n a2 n d1 V a0 n a1 n a2 n d0 .There are 2048 = 211 possible examples , half of whom are positive meaning they satisfy f11 while the other half is negative .An experiment is typically composed of 50 trials .Each run corresponds to a sequence of 600 examples that are incrementally learned by a Multi Agent System with n agentsn-MAS .A number of variables such as accuracy , i.e. the frequency of correct classification of a set of unseen examples , hypothesis size i.e. the number of terms in the current formula or number of stored examples , is recorded each time 25 examples are received by the system during those runs .In the protocol that is used here , a new example is sent to a random agent when the MAS is consistent .The next example will be sent in turn to an other agent when the MAS consistency will have been restored .In such a way we simulate a kind of slow learning : the frequency of example arrivals is slow compared to the time taken by an update .We briefly discuss here execution time of learning in the MAS .Note that the whole set of action and interaction in the MAS is simulated on a single processor .Figure 1 shows that time linearly depends on the number of agents .At the end of the most active part of learning 200 examples , a 16MAS has taken 4 times more learning time than a 4-MAS .This execution time represents the whole set of learning andcommunication activity and hints at the cost of maintaining a consistent learning hypothesis in a MAS composed of autonomous agents .We study now the distribution of the examples in the MAS memory .Redundancy is written Rs = ns/n ., where ns is the total number of examples stored in the MAS , that is the sum of the sizes of agents examples memories E ; , and n. is the total number of examples received from the environment in the MAS .In figure 2 , we compare redundancies in 2 to 20 agents MAS .There is a peak , slowly moving from 80 to 100 examples , that represents the number of examples for which the learning is most active .For 20 agents , maximal redundancy is no more than 6 , which is far less than the maximal theoretical value of 20 .Note that when learning becomes less active , redundancy tends towards its minimal value 1 : when there is no more updates , examples are onlystored by the agent that receives them .The proposed mechanism tends to minimize the number of terms in the selected hypothesis .During learning , the size of the current hypothesis grows up beyond the optimum , and then decreases when the MAS converges .In the Multiplexer 11 testbed , the optimal number of terms is 8 , but there also exist equivalent formulas with more terms .It is interesting to note that in this case the 10-MAS converges towards an exact solution closer to the optimal number of terms here 8 see Figure 3 .After 1450 examples have been presented both 1-MAS and 10-MAS have exactly learned the concept the respective accuracies are 0.9999 and 1 but the single agent expresses in average the result as a 11.0 terms DNF whereas the 10-MAS expresses it as a 8.8 terms DNF .However for some other boolean functions we found that during learning 1-MAS always produces larger hypotheses than 10-MAS but that both MAS converge to hypotheses with similar size results .Figure 4 shows the improvement brought by a MAS with n agents compared to a single agent .This improvement was not especially expected , because whether we have one or n agents , when N examples are given to the MAS it has access to the same amount of information , maintains only on ongoing hypothesis and uses the same basic revision algorithm whenever an agent has to modify the current hypothesis .Note that if the accuracy of 1 , 2 , 4 and 10-MAS are significantly different , getting better as the number of agents increases , there is no clear difference beyond this point : the accuracy curve of the 100 agents MAS is very close to the one of the 10 agents MAS .To evaluate this accuracy improvement , we have experimented our protocol on other problems of boolean function learning , As in the Multiplexer-11 case , these functionsare learnt in the form of more or less syntactically complex DNF3 that is with more or less conjunctive terms in the DNF , but are also more or less difficult to learn as it can be difficult to get its way in the hypothesis space to reach them .Furthermore , the presence in the description of irrelevant attributes that is attributes that does not belong to the target DNF makes the problem more difficult .The following problems have been selected to experiment our protocol : i the multiplexer-11 with 9 irrelevant attributes : M11 9 , ii the 20-multiplexer M20 with 4 address bits and 16 data bits , iii a difficult parity problem see 4 the Xorp m : there must be an odd number of bits with value 1 in the p first attributes for the instance to be positive , the p others bits being irrelevant , and iv a simple DNF formula a n b n c V c n d n e e n f n g n g n h n i with 19 irrelevant attributes .The following table sums up some information about these problems , giving the total number of attributes including irrelevant ones , the number of irrelevantBelow are given the accuracy results of our learning mechanism with a single agent and a 10 agents MAS , along with the results of two standard algorithms implemented with the learning environment WEKA 16 : JRip an implementation of RIPPER 2 and Id3 12 .For the experiments with JRip and Id3 , we measured the mean accuracy on 50 trials , each time randomly separating examples in a learning set and a test set .JRip and Id3 parameters are default parameters , except that JRip is used without pruning .The following table shows the results :It is clear that difficult problems are better solved with more agents see for instance xor5 15 .We think that these benefits , which can be important with an increasing number of agents , are due to the fact that each agent really memorizes only part of the total number of examples , and this part is partly selected by other agents as counter examples , which cause a greater number of current hypothesis updates and therefore , a better exploration of the hypotheses space .We did also experiments with some non boolean problems .We considered only two classes positive/negative problems , taken from the UCI 's learning problems database 3 .In all these problems , examples are described as a vector of couples attribute , value .The value domains can be either boolean , numeric wholly ordered set , or nominal non-ordered set .An adequate set of atoms A must be constituted for each problem .For instance , if a is a numeric attribute , we define at most k threshold si , giving k +1 intervals of uniform density 4 .Therefore , each distinct threshold si gives two atoms a < si and a > si .In our experiments , we took a maximal number of threshold k = 8 .For instance , in the iono problem case , there were 34 numeric attributes , and an instance is described with 506 atoms .Below are given the accuracy results of our system along with previous results .The column '' Nb ex . ''refer to thenumber of examples used for learning5 .Column 1 represents minimal and maximal accuracy values for the thirty three classifiers tested in 8 .Column 2 represents the results of 13 , where various learning methods are compared to ensemble learning methods using weighted classifiers sets .Column S-1 and S-10 gives the accuracy of SMILE with respectively 1 and 10 agents .This table shows that the incremental algorithm corresponding to the single agent case , gives honorable results relatively to non-incremental classical methods using larger and more complex hypotheses .In some cases , there is an accuracy improvement with a 10 agents MAS .However , with such benchmarks data , which are often noisy , the difficulty does not really come from the way in which the search space is explored , and therefore the improvement observed is not always significant .The same kind of phenomenon have been observed with methods dedicated to hard boolean problems 4 .Here we consider that n single agents learn without interactions and at a given time start interacting thus forming a MAS .The purpose is to observe how the agents take advantage of collaboration when they start from different states of beliefs and memories .We compare in this section a 1-MAS , a 10-MAS ref and a 10-MAS 100sync whose agents did not communicate during the arrival of the first 100 examples 10 by agents .The three accuracy curves are shown in figure 5 .By comparing the single agent curve and the synchronized 10-MAS , we can observe that after the beginning of the synchronization , that is at 125 examples , accuracies are identical .This was expected since as soon as an example e received by the MAS contradicts the current hypothesis of the agent ra receiving it , this agent makes an update and its new hypothesis is proposed to the others agents for criticism .Therefore , this first contradictory example brings the MAS to reach consistency relatively to the whole set of examples present in agents ' memories .A higher accuracy , corresponding to a 10-MAS is obtained later , from the 175th example .In other words , the benefit of a better exploration of the research space is obtained slightly later in the learning process .Note that this synchronization happens naturally in all situations where agents have , for some reason , a divergence between their hypothesis and the system memory .This includes the fusion of two MAS into a single one or the arrival of new agents in an existing MAS .5For ttt and kr-vs-kp , our protocol did not use more than respectively 574 and 958 learning examples , so we put another number in the column .In this experiment we relax our slow learning mode : the examples are sent at a given rate to the MAS .The resulting example stream is measured in ms \u2212 1 , and represents the number of examples sent to the MAS each ms. Whenever the stream is too large , the MAS can not reach MAS consistency on reception of an example from the environment before a new example arrives .This means that the update process , started by agent r0 as he received an example , may be unfinished when a new example is received by r0 or another agent r1 .As a result , a critic agent may have at instant t to send counterexamples of hypotheses sent by various agents .However as far as the agents , in our setting , memorizes all the examples they receive whenever the stream ends , the MAS necessarily reaches MAS consistency with respect to all the examples received so far .In our experiments , though its learning curve is slowed down during the intense learning phase corresponding to low accuracy of the current hypotheses , the MAS still reaches a satisfying hypothesis later on as there are less and less counterexamples in the example stream .In Figure 6 we compare the accuracies of two 11-MAS respectively submitted to example streams of different rates when learning the M11 formula .The learning curve of the MAS receiving an example at a 1/33 ms \u2212 1 rate is almost not altered see Figure 4 whereas the 1/16 ms \u2212 1 MAS is first severely slowed down before catching up with the first one .", "method": "In this section , we present a general formulation of collective incremental learning in a cognitive multi agent system .We represent a MAS as a set of agents r1 , ... , rn .Each agent ri has a belief set Bi consisting of all the revisable knowledge he has .Part of these knowledges must be shared with other agents .The part of Bi that is common to all agents is denoted as BC .This common part provokes a dependency between the agents .If an agent ri updates his belief set Bi to B ~ i , changing in the process BC into B ~ C , all other agents rk must then update their belief set Bk to B ~ k so that B ~ C \u2286 B ~ k. Moreover , each agent ri has stored some certain information Ki .We suppose that some consistency property Cons Bi , Ki can be verified by the agent itself between its beliefs Bi and its information Ki .As said before , Bi represents knowledge that might be revised whereas Ki represents observed facts , taken as being true , and which can possibly contradict Bi .An agent ri is a-consistent iff Cons Bi , Ki is true .Example 1 .Agent r1 has a set of plans which are in the common part BC of B1 .Each plan P has a triggering context d P which acts as a pre-condition and a body .Some piece of information k could be '' plan P , triggered in situation s , has failed in spite of s being an instance of d P '' .If this piece of information is added to K1 , then agent r1 is not a-consistent anymore : Cons B1 , K1 \u222a k is false .We also want to define some notion of consistency for the whole MAS depending on the belief and information sets of its constituting elements .We will first define the consistency of an agent ri with respect to its belief set Bi and its own information set Ki together with all information sets K1 ... Kn from the other agents of the MAS .We will simply do that by considering what would be the a-consistency of the agent if he has the information of all the other agents .We call this notion the mas-consistency :An agent ri is mas-consistent iff Cons Bi , Ki \u222a K is true , where K = \u222a j \u2208 1 , .., n \u2212 i Kj1 is the set of all information from other agents of the MAS .Example 2 .Using the previous example , suppose that the piece of information k is included in the information K2 of agent r2 .As long as the piece of information is not transmitted to r1 , and so added to K1 , r1 remains a-consistent .However , r1 is not mas-consistent as k is in the set K of all information of the MAS .The global consistency of the MAS is then simply the mas-consistency of all its agents .A MAS r1 , ... , rn is consistent iff all its agents ri are masconsistent .We now define the required properties for a revision mechanism M updating an agent ri when it gets a piece of information k .In the following , we will suppose that :An update mechanism M is a-consistent iff for any agent ri and any piece of information k reaching ri , the a-consistency of this agent is preserved .In other words , iff :where B ~ i = M Bi and K ~ i = Ki \u222a k is the set of all information from other agents of the MAS .In the same way , we define the mas-consistency of a revision mechanism as the a-consistency of this mechanism should the agents dispose of all information in the MAS .In the following , we shall note , if needed , ri Bi , Ki , K for the agent ri in MAS r1 ... rn .An update mechanism Ms is mas-consistent iff for all agent ri and all pieces of information k reaching ri , the masconsistency of this agent is preserved .In other words , if : ri Bi , Ki , K mas-consistent \u21d2 ri B ~ i , K ~ i , K mas-consistent , where B ~ i = Ms Bi , K ~ i = Ki \u222a k , and K = \u222a Kj is the set of all information from the MAS .At last , when a mas-consistent mechanism is applied by an agent getting a new piece of information , a desirable sideeffect of the mechanism should be that all others agents remains mas-consistent after any modification of the common part BC , that is , the MAS itself should become consistent again .This property is defined as follows : Definition 6 .Strong mas-consistency of a revision An update mechanism Ms is strongly mas-consistent iff Ms is mas-consistent , and the application of Ms by an agent preserves the consistency of the MAS .nism The general idea is that , since information is distributed among all the agents of the MAS , there must be some interaction between the learner agent and the other agents in a strongly mas-consistent update mechanism Ms. In order to ensure its mas-consistency , Ms will be constituted of reiterated applications by the learner agent ri of an internal a-consistent mechanism M , followed by some interactions between ri and the other agents , until ri regain its masconsistency .We describe below such a mechanism , first with a description of an interaction , then an iteration , and finally a statement of the termination condition of the mechanism .The mechanism is triggered by an agent ri upon receipt of a piece of information k disrupting the mas-consistency .We shall note M Bi the belief set of the learner agent ri after an update , B ' C the common part modified by ri , and Bj ' the belief set of another agent rj induced by the modification of its common part BC in BC ' .An interaction I ri , rj between the learner agent ri and another agent rj , acting as critic is constituted of the following steps :agents can possibly participate .If at least one piece of information k ' is transmitted to ri , the addition of k ' will necessarily make ri a-inconsistent and a new iteration will then occur .This mechanism Ms ends when no agent can provide such a piece of information k ' .When it is the case , the masconsistency of the learner agent ri is restored .Proposition 1 .Let r1 , ... , rn be a consistent MAS in which agent ri receives a piece of information k breaking its aconsistency , and M an a-consistent internal update mechanism .The update mechanism Ms described above is strongly mas-consistent .Proof .The proof directly derives from the mechanism description .This mechanism ensures that each time an agent receives an event , its mas-consistency will be restored .As the other agents all adopt the final update BC , they are all mas-consistent , and the MAS is consistent .Therefore Ms is a strongly consistent update mechanism .In the mechanism Ms described above , the learner agent is the only one that receives and memorizes information during the mechanism execution .It ensures that Ms terminates .The pieces of information transmitted by other agents and memorized by the learner agent are redundant as they are already present in the MAS , more precisely in the memory of the critic agents that transmitted them .Note that the mechanism Ms proposed here does not explicitly indicate the order nor the scope of the interactions .We will consider in the following that the modification proposal B ' C is sent sequentially to the different agents synchronous mechanism .Moreover , the response of a critic agent will only contain one piece of information inconsistent with the proposed modification .We will say that the response of the agent is minimal .This mechanism Ms , being synchronous with minimal response , minimizes the amount of information transmitted by the agents .We will now illustrate it in the case of multi-agent concept learning .We experiment the mechanism proposed above in the case of incremental MAS concept learning .We consider here a hypothesis language in which a hypothesis is a disjunction of terms .Each term is a conjunction of atoms from a set A .An example is represented by a tag + or \u2212 and a description 2 composed of a subset of atoms e C A .A term covers an example if its constituting atoms are included in the example .A hypothesis covers an example if one of its term covers it .This representation will be used below for learning boolean formulae .Negative literals are here represented by additional atoms , like not \u2212 a .The boolean formulae f = a n b V b n c will then be written a n b V b n not \u2212 c .A positive example of f , like not \u2212 a , b , not \u2212 c , represents a model for f.The learning process is an update mechanism that , given a current hypothesis H , a memory E = E + U E filled with the previously received examples , and a new positive or negative example e , produces a new updated hypothesis .Before this update , the given hypothesis is complete , meaning that it covers all positive examples of E + , and 2When no confusion is possible , the word example will be used to refer to the pair tag , description as well as the description alone .coherent , meaning that it does not cover any negative example of E .After the update , the new hypothesis must be complete and coherent with the new memory state E U e .We describe below our single agent update mechanism , inspired from a previous work on incremental learning 7 .In the following , a hypothesis H for the target formula f is a list of terms h , each of them being a conjunction of atoms .H is coherent if all terms h are coherent , and H is complete if each element of E + is covered by at least one term h of H. Each term is by construction the lgg least general generalization of a subset of positives instances e1 , ... , en 5 , that is the most specific term covering e1 , ... , en .The lgg operator is defined by considering examples as terms , so we denote as lgg e the most specific term that covers e , and as lgg h , e the most specific term which is more general than h and that covers e. Restricting the term to lgg is the basis of a lot of Bottom-Up learning algorithms for instance 5 .In the typology proposed by 9 , our update mechanism is an incremental learner with full instance memory : learning is made by successive updates and all examples are stored .The update mechanism depends of the ongoing hypothesis H , the ongoing examples E + and E , and the new example e .There are three possible cases :We will now describe the case where e = e is a covered negative example .The following functions are used here :Note that this mechanism tends to both make a minimal update of the current hypothesis and minimize the number of terms in the hypothesis , in particular by discarding terms less general than other ones after updating a hypothesis .If H is the current hypothesis , Ei the current example memory of agent ri and E the set of all the examples received by the system , the notation of section 2 becomes Bi = BC = H , Ki = Ei and K = E. Cons H , Ei states that H is complete and coherent with Ei .In such a case , ri is a-consistent .The piece of information k received by agent ri is here simply an example e along with its tag .If e is such that the current hypothesis H is not complete or coherent with Ei U e , e contradicts H : ri becomes a-inconsistent , and therefore the MAS is not consistent anymore .The update of a hypothesis when a new example arrives is an a consistent mechanism .Following proposition 1 this mechanism can be used to produce a strong mas-consistent mechanism : upon reception of a new example in the MAS by an agent r , an update is possibly needed and , after a set of interactions between r and the other agents , results in a new hypothesis shared by all the agents and that restores the consistency of the MAS , that is which is complete and coherent with the set ES of all the examples present in the MAS .It is clear that by minimizing the number of hypothesis modifications , this synchronous and minimal mechanism minimize the number of examples received by the learner from other agents , and therefore , the total number of examples stored in the system .", "title": "SMILE : Sound Multi-agent Incremental LEarning ;--RRB- *", "author_keywords_stem": ["multi-agent learn"], "related work": "Since 96 15 , various work have been performed on learning in MAS , but rather few on concept learning .In 11 the MAS performs a form of ensemble learning in which the agents are lazy learners no explicit representation is maintained and sell useless examples to other agents .In 10 each agent observes all the examples but only perceive a part of their representation .In mutual online concept learning 14 the agents converge to a unique hypothesis , but each agent produces examples from its own concept representation , thus resulting in a kind of synchronization rather than in pure concept learning ."}